{
  "version": 3,
  "sources": ["../../typescript/def.ts", "../../typescript/cloud.ts", "../../typescript/globals.ts", "../../typescript/pageObserver.ts", "../../typescript/leerling/observer.ts", "../../typescript/lessen/scrape.ts", "../../libs/Emmeter/tokenizer.ts", "../../libs/Emmeter/html.ts", "../../typescript/lessen/build.ts", "../../typescript/lessen/convert.ts", "../../typescript/lessen/observer.ts", "../../typescript/les/observer.ts", "../../typescript/academie/observer.ts", "../../typescript/werklijst/buildUren.ts", "../../typescript/werklijst/scrapeUren.ts", "../../typescript/table/tableNavigation.ts", "../../typescript/progressBar.ts", "../../typescript/table/tableDef.ts", "../../typescript/werklijst/criteria.ts", "../../typescript/pageState.ts", "../../typescript/werklijst/prefillInstruments.ts", "../../typescript/pageHandlers.ts", "../../typescript/table/tableHeaders.ts", "../../typescript/table/observer.ts", "../../typescript/werklijst/urenData.ts", "../../typescript/werklijst/observer.ts", "../../typescript/vakgroep/observer.ts", "../../typescript/verwittigen/observer.ts", "../../typescript/table/loadAnyTable.ts", "../../typescript/aanwezigheden/observer.ts", "../../typescript/afwezigheden/observer.ts", "../../typescript/setupPowerQuery.ts", "../../typescript/pages/observer.ts", "../../typescript/main.ts"],
  "sourcesContent": ["export let COPY_AGAIN = \"copy_again\";\r\nexport let PROGRESS_BAR_ID = \"progressBarFetch\";\r\nexport let UREN_PREV_BTN_ID = \"prefillInstrButton\";\r\nexport let UREN_NEXT_BTN_ID = \"prefillInstrButtonNext\";\r\nexport let MAIL_BTN_ID = \"mailButton\";\r\nexport let DOWNLOAD_TABLE_BTN_ID = \"downloadTableButton\";\r\nexport let COPY_TABLE_BTN_ID = \"copyTableButton\";\r\nexport const LESSEN_OVERZICHT_ID = \"lessen_overzicht\";\r\nexport const TRIM_BUTTON_ID = \"moduleButton\";\r\nexport const CHECKS_BUTTON_ID = \"checksButton\";\r\nexport const COUNT_BUTTON_ID = \"fetchAllButton\";\r\nexport const FULL_CLASS_BUTTON_ID = \"fullClassButton\";\r\nexport const TRIM_TABLE_ID = \"trimesterTable\";\r\nexport const COUNT_TABLE_ID = \"werklijst_uren\";\r\nexport const TRIM_DIV_ID = \"trimesterDiv\";\r\nexport const JSON_URL = \"https://europe-west1-ebo-tain.cloudfunctions.net/json\";\r\nexport const CACHE_INFO_ID =  \"dko3plugin_cacheInfo\";\r\nexport const TEMP_MSG_ID =  \"dko3plugin_tempMessage\";\r\nexport const INFO_MSG_ID =  \"dko3plugin_infoMessage\";\r\nexport const AANW_LIST =  \"aanwezighedenList\";\r\nexport const GLOBAL_SETTINGS_FILENAME =  \"global_settings.json\";\r\n\r\nexport function isButtonHighlighted(buttonId: string) {\r\n    return document.getElementById(buttonId)?.classList.contains(\"toggled\");\r\n}\r\n\r\nexport const CACHE_DATE_SUFFIX = \"__date\";\r\nexport const POWER_QUERY_ID = \"savedPowerQuery\";\r\nexport const STORAGE_PAGE_STATE_KEY = \"pageState\";\r\nexport const WERKLIJST_TABLE_NAME_PROP = \"werklijstTableName\";\r\nexport const UREN_TELLER = \"urenTeller\";\r\nexport const UREN_TABLE_STATE_NAME = \"__uren__\";", "import * as def from \"./def\";\r\n\r\nexport let cloud = {\r\n    json: {\r\n        fetch: fetchJson,\r\n        upload: uploadJson\r\n    }\r\n};\r\n\r\nexport async function fetchJson(fileName: string) {\r\n    return fetch(def.JSON_URL + \"?fileName=\"+fileName, {method: \"GET\"})\r\n        .then((res) => res.json());\r\n}\r\n\r\nexport async function uploadJson(fileName: string, data: any) {\r\n    let res = await fetch(def.JSON_URL + \"?fileName=\" + fileName, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data)\r\n    });\r\n    return await res.text();\r\n}", "import {Observer} from \"./pageObserver\";\r\nimport {cloud} from \"./cloud\";\r\nimport {GLOBAL_SETTINGS_FILENAME} from \"./def\";\r\n\r\ntype Options = {\r\n  showDebug: boolean;\r\n    myAcademies: string;\r\n    showNotAssignedClasses: boolean;\r\n    markOtherAcademies: boolean;\r\n};\r\nexport const options: Options = {\r\n    showDebug: false,\r\n    myAcademies: \"\",\r\n    showNotAssignedClasses: true,\r\n    markOtherAcademies: true\r\n};\r\n\r\nexport let observers = [];\r\nexport let settingsObservers: (() => void)[] = [];\r\n\r\nexport function db3(message: any) {\r\n    if (options?.showDebug) {\r\n        console.log(message);\r\n        console.log(Error().stack.split(\"\\n\")[2]);\r\n    }\r\n}\r\n\r\nexport function createValidId(id: string) {\r\n    return id\r\n        .replaceAll(\" \", \"\")\r\n        .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .replace(/\\W/g,'');\r\n}\r\n\r\n\r\nexport function registerObserver(observer: Observer) {\r\n    observers.push(observer);\r\n    if(observers.length > 20) //just in case...\r\n        console.error(\"Too many observers!\");\r\n}\r\n\r\nexport function registerSettingsObserver(observer: () => void) {\r\n    settingsObservers.push(observer);\r\n    if(settingsObservers.length > 20) //just in case...\r\n        console.error(\"Too many settingsObservers!\");\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function searchText(text: string) {\r\n    let input: HTMLInputElement = document.querySelector(\"#snel_zoeken_veld_zoektermen\");\r\n    input.value = text;\r\n    let evUp = new KeyboardEvent(\"keyup\", {key: \"Enter\", keyCode: 13, bubbles: true});\r\n    input.dispatchEvent(evUp);\r\n}\r\n\r\nexport function setButtonHighlighted(buttonId: string, show: boolean) {\r\n    if (show) {\r\n        document.getElementById(buttonId).classList.add(\"toggled\");\r\n    } else {\r\n        document.getElementById(buttonId).classList.remove(\"toggled\");\r\n    }\r\n}\r\n\r\nexport function addButton(targetElement: HTMLElement, buttonId: string, title: string, clickFunction: (ev:PointerEvent) => void, imageId: string, classList: string[], text = \"\", where: InsertPosition = \"beforebegin\") {\r\n    let button = document.getElementById(buttonId);\r\n    if (button === null) {\r\n        const button = document.createElement(\"button\");\r\n        button.classList.add(\"btn\"/*, \"btn-sm\", \"btn-outline-secondary\", \"w-100\"*/, ...classList);\r\n        button.id = buttonId;\r\n        button.style.marginTop = \"0\";\r\n        button.onclick = clickFunction;\r\n        button.title = title;\r\n        if(text) {\r\n            let span = document.createElement(\"span\");\r\n            button.appendChild(span);\r\n            span.innerText = text;\r\n        }\r\n        const buttonContent = document.createElement(\"i\");\r\n        button.appendChild(buttonContent);\r\n        if(imageId)\r\n            buttonContent.classList.add(\"fas\", imageId);\r\n        targetElement.insertAdjacentElement(where, button);\r\n    }\r\n}\r\n\r\nexport function getSchooljaarSelectElement() {\r\n    let selects = document.querySelectorAll(\"select\");\r\n    return Array.from(selects)\r\n        .filter((element) => element.id.includes(\"schooljaar\"))\r\n        .pop();\r\n}\r\n\r\nexport function getHighestSchooljaarAvailable() {\r\n    let el = getSchooljaarSelectElement();\r\n    if(!el)\r\n        return undefined;\r\n    return Array.from(el.querySelectorAll(\"option\"))\r\n        .map(option => option.value)\r\n        .sort()\r\n        .pop();\r\n}\r\n\r\nexport function findSchooljaar() {\r\n    let el = getSchooljaarSelectElement();\r\n    if(el)\r\n        return el.value;\r\n    el = document.querySelector(\"div.alert-primary\");\r\n    return el.textContent.match(/schooljaar *= (\\d{4}-\\d{4})*/)[1];\r\n}\r\n\r\nexport function calculateSchooljaar() {\r\n    let now = new Date();\r\n    let year = now.getFullYear();\r\n    let month = now.getMonth();\r\n    if(month < 8) //zero-based juli !\r\n        return year-1; //schoolyear started last year.\r\n    return year;\r\n}\r\n\r\nexport function createSchoolyearString(startYear: number) {\r\n    return `${startYear}-${startYear+1}`;\r\n}\r\n\r\nexport function createShortSchoolyearString(startYear: number) {\r\n    return `${startYear%1000}-${(startYear%1000)+1}`;\r\n}\r\n\r\nexport function getUserAndSchoolName() {\r\n    let footer = document.querySelector(\"body > main > div.row > div.col-auto.mr-auto > small\");\r\n    const reInstrument = /.*Je bent aangemeld als (.*)\\s@\\s(.*)\\./;\r\n    const match = footer.textContent.match(reInstrument);\r\n    if (match?.length !== 3) {\r\n        throw new Error(`Could not process footer text \"${footer.textContent}\"`);\r\n    }\r\n    let userName = match[1];\r\n    let schoolName = match[2];\r\n    return {userName, schoolName};\r\n}\r\n\r\nexport function getSchoolIdString() {\r\n    let {schoolName} = getUserAndSchoolName();\r\n    schoolName = schoolName\r\n        .replace(\"Academie \", \"\")\r\n        .replace(\"Muziek\", \"M\")\r\n        .replace(\"Woord\", \"W\")\r\n        .toLowerCase();\r\n    return createValidId(schoolName);\r\n}\r\n\r\nexport function millisToString(duration: number) {\r\n    let seconds = Math.floor((duration / 1000) % 60);\r\n    let minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n    let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n    let days = Math.floor((duration / (1000 * 60 * 60 * 24)));\r\n\r\n    if (days > 0)\r\n        return days + (days === 1 ? \" dag\" : \" dagen\");\r\n    else if (hours > 0)\r\n        return hours + \" uur\";\r\n    else if (minutes > 0)\r\n        return minutes + (minutes === 1 ? \" minuut\" : \" minuten\");\r\n    else if (seconds > 0)\r\n        return seconds + \" seconden\";\r\n    else return \"\";\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n\r\nexport function isAlphaNumeric(str: string) {\r\n    if (str.length > 1)\r\n        return false;\r\n    let code: number;\r\n    let i: number;\r\n    let len: number;\r\n\r\n    for (i = 0, len = str.length; i < len; i++) {\r\n        code = str.charCodeAt(i);\r\n        if (!(code > 47 && code < 58) && // numeric (0-9)\r\n            !(code > 64 && code < 91) && // upper alpha (A-Z)\r\n            !(code > 96 && code < 123)) { // lower alpha (a-z)\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function rangeGenerator(start: number, stop: number, step = 1): number[] {\r\n    return Array(Math.ceil((stop - start) / step)).fill(start).map((x, y) => x + y * step);\r\n}\r\n\r\nexport function createScearchField(id: string, onSearchInput: (ev: Event) => any, value: string) {\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"text\";\r\n    input.id = id;\r\n    input.classList.add(\"tableFilter\");\r\n    input.oninput = onSearchInput;\r\n    input.value = value;\r\n    input.placeholder = \"filter\"\r\n    return input;\r\n}\r\n\r\n/**\r\n * Try to match a filter expression of type \"string1+string2\", where both strings need to be present.\r\n * @param searchText\r\n * @param rowText\r\n * @return true if all strings match\r\n */\r\nfunction match_AND_expression(searchText: string, rowText: string) {\r\n    let search_AND_list = searchText.split('+').map(txt => txt.trim());\r\n    for(let search of search_AND_list) {\r\n        let caseText = rowText;\r\n        if (search === search.toLowerCase()) { //if all lowercase, make the search case-insensitive\r\n            caseText = rowText.toLowerCase();\r\n        }\r\n        if (!caseText.includes(search))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function filterTableRows(table: (HTMLTableElement | string), rowFilter:RowFilter) {\r\n    if(typeof table === \"string\" )\r\n        table = document.getElementById(table) as HTMLTableElement;\r\n    return Array.from(table.tBodies[0].rows)\r\n        .filter(tr => rowFilter.rowFilter(tr, rowFilter.context));\r\n}\r\n\r\nexport function filterTable(table: (HTMLTableElement | string), rowFilter:RowFilter) {\r\n    if(typeof table === \"string\" )\r\n        table = document.getElementById(table) as HTMLTableElement;\r\n    for(let tr of table.tBodies[0].rows) {\r\n        tr.style.visibility = \"collapse\";\r\n        tr.style.borderColor = \"transparent\"; //get rid of some risidual border lines\r\n    }\r\n    for (let tr of filterTableRows(table, rowFilter)) {\r\n        if(!tr.dataset.keepHidden) {\r\n            tr.style.visibility = \"visible\";\r\n            tr.style.borderColor = \"\";\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nCreates a text filter where a comma is interpreted as OR and a plus sign as AND.\r\n */\r\nexport function createTextRowFilter(searchText: string, getRowSearchText: (tr: HTMLTableRowElement) => string): RowFilter {\r\n    let search_OR_list = searchText.split(',').map(txt => txt.trim());\r\n    let context = {\r\n        search_OR_list,\r\n        getRowSearchText\r\n    };\r\n    let rowFilter = function (tr: HTMLTableRowElement, context: any) {\r\n        for(let search of context.search_OR_list) {\r\n            let rowText = context.getRowSearchText(tr);\r\n            if (match_AND_expression(search, rowText))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return {context, rowFilter};\r\n}\r\n\r\ninterface RowFilter {\r\n    context: any,\r\n    rowFilter: (tr: HTMLTableRowElement, context: any) => boolean\r\n}\r\n\r\nexport function getBothToolbars() {\r\n    let navigationBars = document.querySelectorAll(\"div.datatable-navigation-toolbar\"); // as HTMLElement;\r\n    if (navigationBars.length < 2)\r\n        return undefined; //wait for top and bottom bars.\r\n    return navigationBars;\r\n}\r\n\r\nexport function addTableNavigationButton(navigationBars: NodeListOf<Element>, btnId: string, title: string, onClick: any, fontIconId: string) {\r\n    addButton(navigationBars[0].lastElementChild as HTMLElement, btnId, title, onClick, fontIconId, [\"btn-secondary\"], \"\", \"afterend\");\r\n    return true;\r\n}\r\n\r\nexport function distinct<Type>(array: Type[]): Type[] {\r\n    return [...new Set(array)];\r\n}\r\n\r\nexport async function fetchStudentsSearch(search: string) {\r\n    return fetch(\"/view.php?args=zoeken?zoek=\" + encodeURIComponent(search))\r\n        .then((response) => response.text())\r\n        .then((_text) => fetch(\"/views/zoeken/index.view.php\"))\r\n        .then((response) => response.text())\r\n        .catch(err => {\r\n            console.error('Request failed', err);\r\n            return \"\";\r\n        });\r\n}\r\n\r\nexport async function setViewFromCurrentUrl() {\r\n    let hash = window.location.hash.replace(\"#\", \"\");\r\n    let page = await fetch(\"https://administratie.dko3.cloud/#\" + hash).then(res => res.text());\r\n    // call to changeView() - assuming this is always the same, so no parsing here.\r\n    let view = await fetch(\"view.php?args=\" + hash).then(res => res.text());\r\n}\r\n\r\nexport interface GlobalSettings {\r\n    globalHide: boolean\r\n}\r\n\r\nexport function equals(g1: GlobalSettings, g2: GlobalSettings){\r\n    return (\r\n        g1.globalHide === g2.globalHide\r\n    );\r\n}\r\n\r\nexport async function saveGlobalSettings(globalSettings: GlobalSettings) {\r\n    return cloud.json.upload(GLOBAL_SETTINGS_FILENAME, globalSettings);\r\n}\r\n\r\nexport async function fetchGlobalSettings(defaultSettings: GlobalSettings) {\r\n    return await cloud.json.fetch(GLOBAL_SETTINGS_FILENAME)\r\n        .catch(err => {\r\n            console.log(err);\r\n            return defaultSettings;\r\n        }) as GlobalSettings;\r\n}\r\n\r\nlet globalSettings: GlobalSettings = {\r\n    globalHide: false,\r\n}\r\n\r\nexport function getGlobalSettings() {\r\n    return globalSettings;\r\n}\r\nexport function  setGlobalSetting(settings: GlobalSettings) {\r\n    globalSettings = settings;\r\n}\r\n\r\nexport let rxEmail = /\\w[\\w.\\-]*\\@\\w+\\.\\w+/gm;\r\n\r\nexport function whoAmI() {\r\n    let allScripts = document.querySelectorAll(\"script\");\r\n    let scriptTexts = [...allScripts].map(s => s.textContent).join();\r\n    let email = scriptTexts.match(rxEmail)[0];\r\n    let rxName = /name: '(.*)'/;\r\n    let name = scriptTexts.match(rxName)[1];\r\n    return {email, name}; //todo also catch my full name.\r\n}\r\n\r\nexport function stripStudentName(name: string): string {\r\n    return name.replaceAll(/[,()'-]/g, \" \").replaceAll(\"  \", \" \");\r\n}", "interface PageFilter {\r\n    match: () => boolean;\r\n}\r\n\r\nexport class HashPageFilter implements PageFilter{\r\n    private readonly urlHash: string;\r\n    constructor(urlHash: string) {\r\n        this.urlHash = urlHash;\r\n    }\r\n\r\n    match() {\r\n        return window.location.hash.startsWith(this.urlHash);\r\n    }\r\n}\r\n\r\nexport class ExactHashPageFilter implements PageFilter{\r\n    private readonly urlHash: string;\r\n    constructor(urlHash: string) {\r\n        this.urlHash = urlHash;\r\n    }\r\n\r\n    match() {\r\n        return window.location.hash === this.urlHash;\r\n    }\r\n}\r\n\r\nexport class AllPageFilter implements PageFilter{\r\n    constructor() {\r\n    }\r\n\r\n    match() {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class BaseObserver {\r\n    private readonly onPageChangedCallback: () => void;\r\n    private pageFilter: PageFilter;\r\n    private readonly onMutation: (mutation: MutationRecord) => boolean;\r\n    private observer: MutationObserver;\r\n    private readonly trackModal: boolean;\r\n    constructor(onPageChangedCallback: () => void, pageFilter: PageFilter, onMutationCallback: (mutation: MutationRecord) => boolean, trackModal: boolean = false) {\r\n        this.onPageChangedCallback = onPageChangedCallback;\r\n        this.pageFilter = pageFilter;\r\n        this.onMutation = onMutationCallback;\r\n        this.trackModal = trackModal;\r\n        if (onMutationCallback) {\r\n            this.observer = new MutationObserver((mutationList, observer) => this.observerCallback(mutationList, observer));\r\n        }\r\n    }\r\n\r\n    observerCallback(mutationList: MutationRecord[] , _observer: MutationObserver) {\r\n        for (const mutation of mutationList) {\r\n            if (mutation.type !== \"childList\") {\r\n                continue;\r\n            }\r\n            if (this.onMutation(mutation)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChanged() {\r\n        if (!this.pageFilter.match()) {\r\n            this.disconnect();\r\n            return;\r\n        }\r\n        if (this.onPageChangedCallback) {\r\n            this.onPageChangedCallback();\r\n        }\r\n        if (!this.onMutation)\r\n            return;\r\n        this.observeElement(document.querySelector(\"main\"));\r\n        if(this.trackModal)\r\n            this.observeElement(document.getElementById(\"dko3_modal\"));\r\n    }\r\n\r\n    observeElement(element: HTMLElement) {\r\n        if (!element) {\r\n            console.error(\"Can't attach observer to element.\");\r\n            return;\r\n        }\r\n\r\n        const config = {\r\n            attributes: false,\r\n            childList: true,\r\n            subtree: true\r\n        };\r\n        this.observer.observe(element, config);\r\n    }\r\n\r\n    disconnect() {\r\n        this.observer?.disconnect();\r\n    }\r\n}\r\n\r\nexport interface Observer {\r\n    onPageChanged: () => void;\r\n}\r\n\r\nexport class HashObserver implements Observer {\r\n    private baseObserver: BaseObserver;\r\n    //onMutationCallback should return true if handled definitively.\r\n    constructor(urlHash: string, onMutationCallback: (mutation: MutationRecord) => boolean, trackModal: boolean = false) {\r\n        this.baseObserver = new BaseObserver(undefined, new HashPageFilter(urlHash), onMutationCallback, trackModal);\r\n    }\r\n\r\n    onPageChanged() {\r\n        this.baseObserver.onPageChanged();\r\n    }\r\n}\r\nexport class ExactHashObserver implements Observer {\r\n    private baseObserver: BaseObserver;\r\n    //onMutationCallback should return true if handled definitively.\r\n    constructor(urlHash: string, onMutationCallback: (mutation: MutationRecord) => boolean, trackModal: boolean = false) {\r\n        this.baseObserver = new BaseObserver(undefined, new ExactHashPageFilter(urlHash), onMutationCallback, trackModal);\r\n    }\r\n\r\n    onPageChanged() {\r\n        this.baseObserver.onPageChanged();\r\n    }\r\n}\r\n\r\nexport class PageObserver implements Observer {\r\n    private baseObserver: BaseObserver;\r\n    constructor(onPageChangedCallback: () => void) {\r\n        this.baseObserver = new BaseObserver(onPageChangedCallback, new AllPageFilter(), undefined, false);\r\n    }\r\n\r\n    onPageChanged() {\r\n        this.baseObserver.onPageChanged();\r\n    }\r\n}", "import {db3, getSchooljaarSelectElement, options} from \"../globals\";\r\nimport {HashObserver} from \"../pageObserver\";\r\n\r\nexport default new HashObserver(\"#leerlingen-leerling\", onMutation);\r\n\r\nfunction onMutation(mutation: MutationRecord) {\r\n    let tabInschrijving = document.getElementById(\"leerling_inschrijvingen_weergave\");\r\n    if (mutation.target === tabInschrijving) {\r\n        onInschrijvingChanged(tabInschrijving);\r\n        return true;\r\n    }\r\n    if ((mutation.target as HTMLElement).id.includes(\"_uitleningen_table\")){\r\n        onUitleningenChanged(mutation.target as HTMLElement);\r\n        return true;\r\n    }\r\n    let tabAttesten = document.getElementById(\"attesten\");\r\n    if (mutation.target === tabAttesten) {\r\n        onAttestenChanged(tabInschrijving);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onAttestenChanged(_tabInschrijving: HTMLElement) {\r\n    decorateSchooljaar();\r\n}\r\n\r\nfunction onUitleningenChanged(tableUitleningen: HTMLElement) {\r\n    let firstCells :NodeListOf<HTMLTableCellElement> = tableUitleningen.querySelectorAll(\"tbody > tr > td:first-child\");\r\n    for(let cell of firstCells) {\r\n        if (cell.classList.contains(\"text-muted\")) {\r\n            break;//empty table with fake row.\r\n        }\r\n        let anchor = document.createElement(\"a\");\r\n        anchor.innerText = cell.innerText;\r\n        anchor.setAttribute(\"href\", \"/#extra-assets-uitleningen-uitlening?id=\"+anchor.innerText);\r\n        cell.textContent = \"\";\r\n        cell.appendChild(anchor);\r\n    }\r\n}\r\n\r\nfunction getSchooljaarElementAndListen() {\r\n    let schooljaar = getSchooljaarSelectElement();\r\n    let listening = \"changeListerenAdded\";\r\n    if(!schooljaar?.classList.contains(listening)){\r\n        schooljaar?.classList.add(listening);\r\n        schooljaar?.addEventListener(\"click\", () => {\r\n           decorateSchooljaar();\r\n        });\r\n    }\r\n    return schooljaar;\r\n}\r\n\r\nfunction isActiveYear() {\r\n    let selectedYearElement = getSchooljaarElementAndListen();\r\n    if(!selectedYearElement)\r\n        return true;\r\n    let selectedYear = parseInt(selectedYearElement.value);//only parses the first valid number in the string.\r\n    let now = new Date();\r\n    let month = now.getMonth();\r\n    let registrationSchoolYearStart = now.getFullYear();\r\n    if (month <= 3) {\r\n        registrationSchoolYearStart--;\r\n    }\r\n    return selectedYear === registrationSchoolYearStart;\r\n}\r\n\r\nfunction decorateSchooljaar() {\r\n    let view = document.getElementById(\"view_contents\");\r\n    let activeYear = isActiveYear();\r\n    if (activeYear) {\r\n        view.classList.remove(\"oldYear\");\r\n    } else {\r\n        view.classList.add(\"oldYear\");\r\n    }\r\n    if(!activeYear) {\r\n        let toewijzingButtons = document.querySelectorAll(\"#leerling_inschrijvingen_weergave button\");\r\n        Array.from(toewijzingButtons)\r\n            .filter((el) => (el.textContent === \"toewijzing\") || (el.textContent === \"inschrijving\"))\r\n            .forEach((btn) => btn.classList.add(\"oldYear\"));\r\n    }\r\n}\r\n\r\nfunction onInschrijvingChanged(tabInschrijving: HTMLElement) {\r\n    db3(\"inschrijving (tab) changed.\");\r\n\r\n    decorateSchooljaar();\r\n\r\n    //Show trimester instruments.\r\n    let moduleButtons = tabInschrijving.querySelectorAll(\"tr td.right_center > button\");\r\n    for(let btn of moduleButtons) {\r\n        let onClick = btn.getAttribute(\"onclick\");\r\n        let tr = btn.parentNode.parentNode;\r\n        onClick = onClick.substring(10, onClick.length- 1);\r\n        let args = onClick\r\n            .split(\", \")\r\n            .map((arg) => arg.replaceAll(\"'\", \"\"));\r\n        // @ts-ignore\r\n        getModules(...args) // making assumptions about the arguments here.\r\n            .then((modNames) => {\r\n                let instrumentText = \"\";\r\n                if(modNames.length) {\r\n                    (tr.children[0] as HTMLTableCellElement).innerText += \": \";\r\n                    let rxBasic = /Initiatie +(.*) *- *trimester.*/i;\r\n                    let rxWide = /Initiatie +(.*) *- *trimester.* *- *(.*)/i;\r\n                    let rxDesperate = /Initiatie +(.*)/i;\r\n                    instrumentText += modNames\r\n                        .map(modName => {\r\n                            let matches = modName.match(rxWide);\r\n                            if (matches?.length >= 2) {\r\n                                return matches[1].trim() + \" - \" + matches[2].trim();\r\n                            }\r\n                            matches = modName.match(rxBasic);\r\n                            if (matches?.length >= 1) {\r\n                                return matches[1].trim();\r\n                            }\r\n                            matches = modName.match(rxDesperate);\r\n                            if (matches?.length >= 1) {\r\n                                return matches[1].trim();\r\n                            }\r\n                            return \": ???\";\r\n                        })\r\n                        .join(\", \");\r\n                }\r\n                let span = document.createElement(\"span\");\r\n                tr.children[0].appendChild(span);\r\n                if(modNames.length > 1) {\r\n                    span.classList.add(\"badge-warning\");\r\n                }\r\n                span.innerText = instrumentText;\r\n            });\r\n    }\r\n\r\n    if(options.showNotAssignedClasses) {\r\n        setStripedLessons();\r\n    }\r\n\r\n}\r\n\r\nfunction setStripedLessons() {\r\n    let classRows = document.querySelectorAll(\"#leerling_inschrijvingen_weergave tr\");\r\n    let classCells = Array.from(classRows)\r\n        .filter(row => row.querySelector(\".table-info\") !== null)\r\n        .map(row => row.children.item(row.children.length - 2));\r\n\r\n    for (let td of classCells) {\r\n        let classDate = td.querySelector(\"span.text-muted\");\r\n        if (!classDate)\r\n            continue;\r\n        if (classDate.textContent === \"(geen lesmomenten)\")\r\n            continue;\r\n        for (let tdd of td.parentElement.children) {\r\n            if (tdd.classList.contains(\"table-info\")) {\r\n                tdd.classList.add(\"runningStripes\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nasync function getModules(size,modal,file,args) {\r\n    // let folder = modal.split(\"-\").join(\"/\");\r\n\r\n    // This call is being skipped: (probably ok)\r\n    // let res = await fetch('views/'+folder+'/'+file+'.modal.php?'+args);\r\n    // let text = await res.text();\r\n\r\n    // This call uses the `args` param, although that contains an extra schooljaar paran which is not really needed.\r\n    // > 'inschrijving_vak_id=289840&schooljaar=2024-2025&lesmoment_id=4102'\r\n    // let lesmoment_id = args.substring(args.lastIndexOf(\"=\")+1);\r\n    // let res2 = await fetch(\"/views/leerlingen/leerling/inschrijvingen/modules_kiezen.modules.div.php?inschrijving_vak_id=289840&lesmoment_id=\" + lesmoment_id);\r\n    let res2 = await fetch(\"/views/leerlingen/leerling/inschrijvingen/modules_kiezen.modules.div.php?\"+args);\r\n\r\n    let text2 = await res2.text();\r\n    const template = document.createElement('template');\r\n    template.innerHTML = text2;\r\n    let checks = template.content.querySelectorAll(\"i.fa-check-square\");\r\n    return Array.from(checks)\r\n        .map(check => check.parentNode.parentNode.parentNode.querySelector(\"strong\").textContent);\r\n}\r\n\r\n", "import { db3 } from \"../globals\";\r\n\r\nexport function scrapeLessenOverzicht() {\r\n    let table = document.getElementById(\"table_lessen_resultaat_tabel\") as HTMLTableElement;\r\n    let body = table.tBodies[0];\r\n    let lessen: Les[] = [];\r\n    for (const row of body.rows) {\r\n        let lesInfo = row.cells[0];\r\n        let studentsCell = row.cells[1];\r\n        let les = scrapeLesInfo(lesInfo);\r\n        les.tableRow = row;\r\n        les.studentsTable = studentsCell.querySelectorAll(\"table\")[0]; //for delayed student scraping.\r\n        let smallTags = studentsCell.querySelectorAll(\"small\");\r\n        //aantallen\r\n        let arrayLeerlingenAantal = Array.from(smallTags).map((item) => item.textContent).filter((txt) => txt.includes(\"leerlingen\"));\r\n        if (arrayLeerlingenAantal.length > 0) {\r\n            let reAantallen = /(\\d+).\\D+(\\d+)/;\r\n            let matches = arrayLeerlingenAantal[0].match(reAantallen);\r\n            les.aantal = parseInt(matches[1]);\r\n            les.maxAantal = parseInt(matches[2]);\r\n        }\r\n        //id\r\n        let idTag = Array.from(smallTags).find((item) => item.classList.contains(\"float-right\"));\r\n        les.id = idTag.textContent;\r\n        //wachtlijst\r\n        les.wachtlijst = 0;\r\n        let arrayWachtlijst = Array.from(smallTags).map((item) => item.textContent).filter((txt) => txt.includes(\"wachtlijst\"));\r\n        if (arrayWachtlijst.length > 0) {\r\n            let reWachtlijst = /(\\d+)/;\r\n            let matches = arrayWachtlijst[0].match(reWachtlijst);\r\n            les.wachtlijst = parseInt(matches[1]);\r\n        }\r\n\r\n        lessen.push(les);\r\n    }\r\n    return lessen;\r\n}\r\n\r\nexport function scrapeModules() {\r\n    let lessen = scrapeLessenOverzicht();\r\n    return {\r\n        trimesterModules: scrapeTrimesterModules(lessen),\r\n        jaarModules: scrapeJaarModules(lessen)\r\n    };\r\n}\r\n\r\nfunction scrapeTrimesterModules(lessen: Les[] ) {\r\n    let modules = lessen.filter((les) => les.lesType === LesType.TrimesterModule);\r\n\r\n    let trimesterModules: Les[] = [];\r\n\r\n    for (let module of modules) {\r\n        module.students = scrapeStudents(module.studentsTable);\r\n\r\n        //get name of instrument and trimester.\r\n        const reInstrument = /.*\\Snitiatie\\s*(\\S+).*(\\d).*/;\r\n        const match = module.naam.match(reInstrument);\r\n        if (match?.length !== 3) {\r\n            console.error(`Could not process trimester module \"${module.naam}\" (${module.id}).`);\r\n            continue;\r\n        }\r\n        module.instrumentName = match[1];\r\n        module.trimesterNo = parseInt(match[2]);\r\n        trimesterModules.push(module);\r\n    }\r\n\r\n    db3(trimesterModules);\r\n    return trimesterModules;\r\n}\r\n\r\nfunction scrapeJaarModules(lessen: Les[] ) {\r\n    let modules = lessen.filter((les) => les.lesType === LesType.JaarModule);\r\n\r\n    let jaarModules: Les[] = [];\r\n\r\n    for (let module of modules) {\r\n        module.students = scrapeStudents(module.studentsTable);\r\n\r\n        //get name of instrument\r\n        const reInstrument = /.*\\Snitiatie\\s*(\\S+).*/;\r\n        const match = module.naam.match(reInstrument);\r\n        if (match?.length !== 2) {\r\n            console.error(`Could not process jaar module \"${module.naam}\" (${module.id}).`);\r\n            continue;\r\n        }\r\n        module.instrumentName = match[1];\r\n        module.trimesterNo = parseInt(match[2]);\r\n        jaarModules.push(module);\r\n    }\r\n\r\n    db3(jaarModules);\r\n    return jaarModules;\r\n}\r\n\r\nexport class StudentInfo {\r\n    graadJaar: string;\r\n    name: string;\r\n    trimesterInstruments: Les[][];\r\n    jaarInstruments: Les[];\r\n    allYearSame: boolean;\r\n    naam: string;\r\n    voornaam: string;\r\n    id: number;\r\n    info: string;\r\n    notAllTrimsHaveAnInstrument: boolean;\r\n}\r\n\r\nfunction scrapeStudents(studentTable: HTMLTableElement) {\r\n    let students: StudentInfo[] = [];\r\n    if(studentTable.tBodies.length === 0) {\r\n        return students;\r\n    }\r\n    for (const row of studentTable.tBodies[0].rows) {\r\n        let studentInfo = new StudentInfo();\r\n        studentInfo.graadJaar = row.cells[0].children[0].textContent;\r\n        studentInfo.name = row.cells[0].childNodes[1].textContent;\r\n        let names = studentInfo.name.split(\", \");\r\n        studentInfo.naam = names[0];\r\n        studentInfo.voornaam = names[1];\r\n        students.push(studentInfo);\r\n    }\r\n    return students;\r\n}\r\n\r\nexport enum LesType { TrimesterModule, JaarModule, Les, UnknownModule}\r\n\r\nexport class Les {\r\n    tableRow: HTMLTableRowElement;\r\n    vakNaam: string;\r\n    lesType: LesType;\r\n    alc: boolean;\r\n    visible: boolean;\r\n    naam: string;\r\n    teacher: string;\r\n    lesmoment: string;\r\n    formattedLesmoment: string;\r\n    vestiging: string;\r\n    studentsTable: HTMLTableElement;\r\n    aantal: number;\r\n    maxAantal: number;\r\n    id: string;\r\n    wachtlijst: number;\r\n    students: StudentInfo[];\r\n    instrumentName: string;\r\n    trimesterNo: number;\r\n    tags: string[];\r\n}\r\n\r\nfunction scrapeLesInfo(lesInfo: HTMLElement) {\r\n    let les = new Les();\r\n    let [first] = lesInfo.getElementsByTagName(\"strong\");\r\n    les.vakNaam = first.textContent;\r\n    let allBadges = lesInfo.getElementsByClassName(\"badge\");\r\n    let warningBadges = lesInfo.getElementsByClassName(\"badge-warning\");\r\n    les.alc = Array.from(allBadges).some((el) => el.textContent === \"ALC\");\r\n    les.visible = lesInfo.getElementsByClassName(\"fa-eye-slash\").length === 0;\r\n    les.tags = Array.from(warningBadges)\r\n        .map((el) => el.textContent)\r\n        .filter((txt) => txt !== \"ALC\")\r\n        .filter((txt) => txt);\r\n    let mutedSpans = lesInfo.querySelectorAll(\"span.text-muted\");\r\n    //muted spans contain:\r\n    //  - class name (optional)\r\n    //  - teacher name (always)\r\n    if(mutedSpans.length > 1) {\r\n        les.naam = mutedSpans.item(0).textContent;\r\n    } else {\r\n        les.naam = lesInfo.children[1].textContent;\r\n    }\r\n    if(Array.from(allBadges).some((el) => el.textContent === \"module\")) {\r\n        if(les.naam.includes(\"jaar\"))\r\n            les.lesType = LesType.JaarModule;\r\n        else if(les.naam.includes(\"rimester\"))\r\n            les.lesType = LesType.TrimesterModule;\r\n        else\r\n            les.lesType = LesType.UnknownModule;\r\n    }\r\n    else{\r\n        les.lesType = LesType.Les;\r\n    }\r\n    if (mutedSpans.length > 0) {\r\n        les.teacher = Array.from(mutedSpans).pop().textContent;\r\n    }\r\n    let textNodes = Array.from(lesInfo.childNodes).filter((node) => node.nodeType === Node.TEXT_NODE);\r\n    if (!textNodes) return les;\r\n\r\n    les.lesmoment = textNodes[0].nodeValue;\r\n    les.vestiging = textNodes[1].nodeValue;\r\n    return les;\r\n}\r\n", "export const CLOSING_BRACE = \"__CLOSINGBRACE__\";\r\nexport const DOUBLE_QUOTE = \"__DOUBLEQUOTE__\";\r\n\r\nexport const NBSP = 160;\r\n\r\nexport function tokenize(textToTokenize: string) {\r\n    let tokens: string[] = [];\r\n    let txt = textToTokenize.replaceAll(\"\\\\}\", CLOSING_BRACE).replaceAll('\\\\\"', DOUBLE_QUOTE);\r\n    let pos = 0;\r\n    let start = pos;\r\n\r\n    function pushToken() {\r\n        if (start != pos)\r\n            tokens.push(unescape(txt.substring(start, pos)));\r\n        start = pos;\r\n    }\r\n\r\n    function getTo(to: string) {\r\n        pushToken();\r\n        do {\r\n            pos++;\r\n        } while (pos < txt.length && txt[pos] != to);\r\n        if (pos >= txt.length)\r\n            throw `Missing '${to}' at matching from pos ${start}.`;\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    function getChar() {\r\n        pushToken();\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    while (pos < txt.length) {\r\n        //only test for special chars. All others are assumed alphanumeric\r\n        switch (txt[pos]) {\r\n            case '{':\r\n                getTo(\"}\");\r\n                break;\r\n            case '\"':\r\n                getTo('\"');\r\n                break;\r\n            case '#':\r\n                pushToken();\r\n                pos++;\r\n                break;\r\n            case '>':\r\n            case '+':\r\n            case '[':\r\n            case ']':\r\n            case '(':\r\n            case ')':\r\n            case '*':\r\n            case '.':\r\n            case '=':\r\n                getChar();\r\n                break;\r\n            case ' ':\r\n                pushToken();\r\n                start = ++pos;\r\n                break;\r\n            default:\r\n                pos++;\r\n        }\r\n    }\r\n    pushToken();\r\n    return tokens;\r\n}", "// noinspection JSUnusedGlobalSymbols\r\nimport {tokenize} from \"./tokenizer\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport let emmet = {\r\n    create,\r\n    append,\r\n    insertBefore,\r\n    insertAfter,\r\n    appendChild,\r\n    testEmmet, //todo: this should only be exported to test.ts\r\n    tokenize, //todo: this should only be exported to test.ts\r\n};\r\n\r\nexport interface AttDef {\r\n    name: string,\r\n    sub: string,\r\n    value: string\r\n}\r\n\r\nexport interface GroupDef {\r\n    count: number,\r\n    child: Node\r\n}\r\n\r\nexport interface ListDef {\r\n    list: Node[];\r\n}\r\n\r\nexport interface ElementDef {\r\n    tag: string,\r\n    id: string,\r\n    atts: AttDef[]\r\n    classList: string[],\r\n    innerText: string,\r\n    child: Node\r\n}\r\n\r\nexport interface TextDef {\r\n    text: string\r\n}\r\n\r\nexport type Node = GroupDef | ElementDef | ListDef | TextDef;\r\n\r\nlet nested: string[] = undefined;\r\nlet lastCreated: HTMLElement = undefined;\r\n\r\nfunction toSelector(node: Node) {\r\n    if(!('tag' in node)) {\r\n        throw \"TODO: not yet implemented.\";\r\n    }\r\n    let selector = \"\";\r\n    if(node.tag)\r\n        selector += node.tag;\r\n    if(node.id)\r\n        selector += \"#\" + node.id;\r\n    if(node.classList.length>0) {\r\n        selector += \".\" + node.classList.join(\".\");\r\n    }\r\n    return selector;\r\n}\r\n\r\nfunction create(text: string, onIndex?: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    nested = tokenize(text);\r\n    let root = parse();\r\n    let parent = document.querySelector(toSelector(root)) as HTMLElement;\r\n    if(\"tag\" in root) {\r\n        root = root.child;\r\n    } else {\r\n        throw \"root should be a single element.\";\r\n    }\r\n    buildElement(parent, root, 1, onIndex, hook);\r\n    return {root: parent, last: lastCreated};\r\n}\r\n\r\nfunction append(root: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    nested = tokenize(text);\r\n    return parseAndBuild(root, onIndex, hook);\r\n}\r\n\r\nfunction insertBefore(target: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    return insertAt(\"beforebegin\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAfter(target: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    return insertAt(\"afterend\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction appendChild(parent: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    return insertAt(\"beforeend\", parent, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAt(position: InsertPosition, target: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    nested = tokenize(text);\r\n    let tempRoot = document.createElement(\"div\");\r\n    let result = parseAndBuild(tempRoot, onIndex, hook);\r\n    let first = undefined;\r\n    for(let child of tempRoot.children) {\r\n        let result = target.insertAdjacentElement(position, child);\r\n        if(!first)\r\n            first = result;\r\n    }\r\n    return {target, first, last: result.last};\r\n}\r\n\r\nfunction parseAndBuild(root: HTMLElement, onIndex: (index: number) => string, hook: (el: HTMLElement) => void) {\r\n    buildElement(root, parse(), 1, onIndex, hook);\r\n    return {root, last: lastCreated};\r\n}\r\n\r\nfunction testEmmet(text: string): Node {\r\n    nested = tokenize(text);\r\n    return parse();\r\n}\r\n\r\nfunction parse() {\r\n    return parsePlus() ;\r\n}\r\n\r\n//parse a+b+c>d...\r\nfunction parsePlus(): Node {\r\n    let list = [];\r\n    while(true) {\r\n        let el = parseMult();\r\n        if (!el)\r\n            return list.length===1 ? list[0] : {list};\r\n        list.push(el)\r\n        if(!match('+'))\r\n            return list.length===1 ? list[0] : {list};\r\n    }\r\n}\r\n\r\nfunction parseMult() : Node {\r\n    let el = parseElement();\r\n    if(!el)\r\n        return el;\r\n    if(match('*')) {\r\n        let count = parseInt(nested.shift());\r\n        //wrap el in a count group.\r\n        return  {\r\n            count,\r\n            child: el\r\n        };\r\n    } else {\r\n        return el;\r\n    }\r\n}\r\n\r\n// parse group or primary element (and children)\r\nfunction parseElement(): Node {\r\n    let el: Node;\r\n    if(match('(')) {\r\n        el = parsePlus();\r\n        if(!match(\")\"))\r\n            throw \"Expected ')'\";\r\n        return el;\r\n    } else {\r\n        let text = matchStartsWith('{');\r\n        if (text) {\r\n            text = stripStringDelimiters(text);\r\n            return <TextDef>{text};\r\n        } else {\r\n            return parseChildDef();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction parseChildDef(): ElementDef {\r\n    let tag = nested.shift();\r\n    let id = undefined;\r\n    let atts: AttDef[] = [];\r\n    let classList: string[] = [];\r\n    let text = undefined;\r\n\r\n    while(nested.length) {\r\n        if (match('.')) {\r\n            classList.push(nested.shift());//todo: what if there is no next token?\r\n        } else if (match('[')) {\r\n            atts = getAttributes();\r\n        } else {\r\n            let token = matchStartsWith('#');\r\n            if(token) {\r\n                id = token.substring(1);\r\n            } else {\r\n                let token = matchStartsWith('{')\r\n                if (token) {\r\n                    text = stripStringDelimiters(token);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {tag, id, atts, classList, innerText: text, child: parseDown()};\r\n}\r\n\r\n// parse >...\r\nfunction parseDown() : Node {\r\n    if(match('>')) {\r\n        return parsePlus();\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getAttributes() {\r\n    //gather all the attributes\r\n    let tokens: string[] = [];\r\n    while(nested.length) {\r\n        let prop = nested.shift();\r\n        if(prop == ']')\r\n            break;\r\n        tokens.push(prop);\r\n    }\r\n\r\n    let attDefs: AttDef[] = [];\r\n\r\n    while(tokens.length) {\r\n        let name = tokens.shift();\r\n        let eq = tokens.shift(); //todo: attribute without a value possible?\r\n        let sub = \"\";\r\n        if(eq === '.') {\r\n            sub = tokens.shift();\r\n            eq = tokens.shift();\r\n        }\r\n        if (eq != '=') {\r\n            throw \"Equal sign expected.\";\r\n        }\r\n        let value = tokens.shift();\r\n        if(value[0] === '\"') {\r\n            value = stripStringDelimiters(value);\r\n        }\r\n        if (!value)\r\n            throw \"Value expected.\";\r\n            attDefs.push({name, sub, value});\r\n        if(!tokens.length)\r\n            break;\r\n    }\r\n    return attDefs;\r\n}\r\n\r\nfunction match(expected: string) {\r\n    let next = nested.shift();\r\n    if(next === expected)\r\n        return true;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return false;\r\n}\r\n\r\nfunction matchStartsWith(expected: string) {\r\n    let next = nested.shift();\r\n    if(next.startsWith(expected))\r\n        return next;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return undefined;\r\n}\r\n\r\nfunction stripStringDelimiters(text: string) {\r\n    if(text[0] === \"'\" || text[0] === '\"' || text[0] === '{')\r\n        return text.substring(1, text.length-1);\r\n    return text;\r\n}\r\n\r\n//CREATION\r\nfunction createElement(parent: HTMLElement, def: ElementDef, index: number, onIndex: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    let el = parent.appendChild(document.createElement(def.tag));\r\n    if (def.id)\r\n        el.id = addIndex(def.id, index, onIndex);\r\n    for(let clazz of def.classList) {\r\n        el.classList.add(addIndex(clazz, index, onIndex));\r\n    }\r\n    for (let att of def.atts) {\r\n        if (att.sub)\r\n            el[addIndex(att.name, index, onIndex)][addIndex(att.sub, index, onIndex)] = addIndex(att.value, index, onIndex);\r\n        else {\r\n            el.setAttribute(addIndex(att.name, index, onIndex), addIndex(att.value, index, onIndex));\r\n        }\r\n    }\r\n    if(def.innerText) {\r\n        el.appendChild(document.createTextNode(addIndex(def.innerText, index, onIndex)));\r\n    }\r\n    lastCreated = el;\r\n    if(hook)\r\n        hook(el);\r\n    return el;\r\n}\r\n\r\nfunction buildElement(parent: HTMLElement, el: Node, index: number, onIndex: (index: number) => string, hook?: (el: HTMLElement) => void) {\r\n    if(\"tag\" in el) { //ElementDef\r\n        let created = createElement(parent, el, index, onIndex, hook);\r\n        if(el.child)\r\n            buildElement(created, el.child, index, onIndex, hook);\r\n        return;\r\n    }\r\n    if(\"list\" in el) { //ListDef\r\n        for( let def of el.list) {\r\n            buildElement(parent, def, index, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"count\" in el) { //GroupDef\r\n        for(let i = 0; i < el.count; i++) {\r\n            buildElement(parent, el.child, i, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"text\" in el) { //TextDef\r\n        parent.appendChild(document.createTextNode(addIndex(el.text, index, onIndex)));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction addIndex(text: string, index: number, onIndex: (index: number) => string) {\r\n    if(onIndex) {\r\n        let result = onIndex(index);\r\n        text = text.replace(\"$$\", result);\r\n    }\r\n    return text.replace(\"$\", (index+1).toString());\r\n}", "import {FULL_CLASS_BUTTON_ID, isButtonHighlighted, TRIM_DIV_ID} from \"../def\";\r\nimport {db3, stripStudentName} from \"../globals\";\r\nimport {BlockInfo, mergeBlockStudents, sortStudents, TableData} from \"./convert\";\r\nimport {StudentInfo} from \"./scrape\";\r\nimport * as html from \"../../libs/Emmeter/html\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\nimport {NBSP} from \"../../libs/Emmeter/tokenizer\";\r\n\r\nexport enum NameSorting {\r\n    FirstName, LastName\r\n}\r\n\r\nlet savedNameSorting = NameSorting.LastName;\r\n\r\nexport function setSavedNameSorting(sorting: NameSorting) {\r\n    savedNameSorting = sorting;\r\n}\r\n\r\nexport function getSavedNameSorting() {\r\n    return savedNameSorting;\r\n}\r\n\r\nexport enum TrimesterGrouping {\r\n    TeacherInstrumentHour,\r\n    InstrumentTeacherHour ,\r\n    TeacherHour,\r\n    InstrumentHour,\r\n    Instrument,\r\n    Teacher\r\n}\r\n\r\nexport function buildTrimesterTable(tableData: TableData, trimesterSorting: TrimesterGrouping) {\r\n    tableData.blocks.sort((block1, block2) => block1.instrumentName.localeCompare(block2.instrumentName));\r\n    let trimDiv = html.emmet.create(`#${TRIM_DIV_ID}>table#trimesterTable[border=\"2\" style.width=\"100%\"]>colgroup>col*3`).root;\r\n\r\n    trimDiv.dataset.showFullClass= isButtonHighlighted(FULL_CLASS_BUTTON_ID) ? \"true\" : \"false\";\r\n\r\n    let { root: newTable, last: trHeader } = html.emmet.create(\"#trimesterTable>tbody+thead.table-secondary>tr\");\r\n\r\n    let newTableBody = newTable.querySelector(\"tbody\");\r\n\r\n    let totTrim = [0,0,0];\r\n    for (let block of tableData.blocks) {\r\n        let totJaar = block.jaarModules.map(mod => mod.students.length).reduce((prev, curr) => prev + curr, 0);\r\n        for(let trimNo of [0,1,2]) {\r\n            totTrim[trimNo] += totJaar + (block.trimesters[trimNo][0]?.students?.length ?? 0);\r\n        }\r\n    }\r\n\r\n    html.emmet.append(trHeader, \"(th>div>span.bold{Trimester $}+span.plain{ ($$ lln)})*3\", (index) => totTrim[index].toString());\r\n    switch(trimesterSorting) {\r\n        case TrimesterGrouping.InstrumentTeacherHour:\r\n            for (let [instrumentName, instrument] of tableData.instruments) {\r\n                buildGroup(newTableBody, instrument.blocks, instrumentName, (block) => block.teacher, DisplayOptions.Hour | DisplayOptions.Location);\r\n            }\r\n            break;\r\n        case TrimesterGrouping.TeacherInstrumentHour:\r\n            for (let [teacherName, teacher] of tableData.teachers) {\r\n                buildGroup(newTableBody, teacher.blocks, teacherName, (block) => block.instrumentName, DisplayOptions.Hour | DisplayOptions.Location);\r\n            }\r\n            break;\r\n        case TrimesterGrouping.TeacherHour:\r\n            for (let [teacherName, teacher] of tableData.teachers) {\r\n                buildTitleRow(newTableBody, teacherName);\r\n                for (let [hour, block] of teacher.lesMomenten) {\r\n                    buildBlock(newTableBody, block, teacherName, (_block) => hour, DisplayOptions.Location);\r\n                }\r\n            }\r\n            break;\r\n        case TrimesterGrouping.InstrumentHour:\r\n            for (let [instrumentName, instrument] of tableData.instruments) {\r\n                buildTitleRow(newTableBody, instrumentName);\r\n                for (let [hour, block] of instrument.lesMomenten) {\r\n                    buildBlock(newTableBody, block, instrumentName, (_block) => hour, DisplayOptions.Location);\r\n                }\r\n            }\r\n            break;\r\n        case TrimesterGrouping.Instrument:\r\n            for (let [instrumentName, instrument] of tableData.instruments) {\r\n                buildTitleRow(newTableBody, instrumentName);\r\n                for (let [, block] of instrument.mergedBlocks) {\r\n                    buildBlock(newTableBody, block, instrumentName, undefined, DisplayOptions.Hour | DisplayOptions.Location | DisplayOptions.Teacher);\r\n                }\r\n            }\r\n            break;\r\n        case TrimesterGrouping.Teacher:\r\n            for (let [teacherName, teacher] of tableData.teachers) {\r\n                buildTitleRow(newTableBody, teacherName);\r\n                for (let [, block] of teacher.mergedBlocks) {\r\n                    buildBlock(newTableBody, block, teacherName, undefined, DisplayOptions.Hour | DisplayOptions.Location | DisplayOptions.Instrument);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction buildGroup(newTableBody: HTMLTableSectionElement, blocks: BlockInfo[], groupId: string, getBlockTitle: (block: BlockInfo) => string, displayOptions: DisplayOptions) {\r\n    buildTitleRow(newTableBody, groupId);\r\n    for (let block of blocks) {\r\n        buildBlock(newTableBody, block, groupId, getBlockTitle, displayOptions);\r\n    }\r\n}\r\n\r\nfunction createStudentRow(tableBody: HTMLTableSectionElement, rowClass: string, groupId: string) {\r\n    let row = createLesRow(groupId);\r\n    tableBody.appendChild(row);\r\n    row.classList.add(rowClass);\r\n    row.dataset.hasFullClass = \"false\";\r\n    return row;\r\n}\r\n\r\n/*\r\n\r\nA block should have only ONE les per trimester and ONE per jaar.\r\nIn case multiple: Show error next to class link? Or show 2 class links?\r\nBut merge all students anyway (and waitinglists).\r\n\r\nA block has a max number of rows,\r\n For trimesters: based on the max for the trimesters. (plus one in case of a waitinglist)\r\n For jaarmodules: based on max of all jaarmodules. (plus one in case of a waitinglist)\r\n\r\nSinde both are on the same lesmoment, the max numbers should not be added.\r\n\r\nSay we have a jaarmodule of 2 students and trimestermodules of max() 4 students.\r\nTotal max = 4.\r\nIf jaarmodule has 3 students, and trimester only 1...fine. Note that they are on the SAME lesmoment.\r\nWhat is tot max allowed per trimester? The max of jaar and trimester.\r\n\r\n\r\nFirst draw the 2 jaarmodule students.\r\n\r\n\r\n */\r\n\r\nfunction buildBlock(newTableBody: HTMLTableSectionElement, block: BlockInfo, groupId: string, getBlockTitle: (undefined | ((block: BlockInfo) => string)), displayOptions: DisplayOptions) {\r\n    blockCounter++;\r\n\r\n    let mergedBlock = mergeBlockStudents(block);\r\n\r\n    let trimesterHeaders = [0,1,2] .map(trimNo => {\r\n        if(mergedBlock.trimesterStudents[trimNo].length < 5 && mergedBlock.maxAantallen[trimNo] < 5)\r\n            return \"\";\r\n        return `${mergedBlock.trimesterStudents[trimNo].length} van ${mergedBlock.maxAantallen[trimNo]} lln`;\r\n    });\r\n\r\n    let trTitle = buildBlockTitle(newTableBody, block, getBlockTitle, groupId);\r\n    let headerRows = buildBlockHeader(newTableBody, block, groupId, trimesterHeaders, displayOptions);\r\n    let studentTopRowNo = newTableBody.children.length;\r\n\r\n    if(trTitle)\r\n        trTitle.dataset.hasFullClass = \"false\";\r\n    headerRows.trModuleLinks.dataset.hasFullClass = \"false\";\r\n    let hasFullClass = false;\r\n\r\n    /*\r\n\r\n    Say, we may have 2 jaar rows available...but only one filled.\r\n    > first fill that row\r\n    > start filling trims on the next row, but do mark that 2nd row as \"jaarRow\"\r\n      > give that overlapping row a different color.\r\n        > give the filled cells a class of \"trimesterStudent\".\r\n\r\n  >>> give a cell.trimesterStudent in a row.jaarModule a different color to indicate the overlap.\r\n     */\r\n    //Fill jaar rows\r\n    let filledRowCount = 0;\r\n        sortStudents(mergedBlock.jaarStudents);\r\n        for(let student of mergedBlock.jaarStudents) {\r\n            let row = createStudentRow(newTableBody, \"jaarRow\", groupId);\r\n            for (let trimNo = 0; trimNo < 3; trimNo++) {\r\n                let cell = buildStudentCell(student);\r\n                row.appendChild(cell);\r\n                cell.classList.add(\"jaarStudent\");\r\n                if (mergedBlock.maxAantallen[trimNo] <= filledRowCount) {\r\n                    cell.classList.add(\"gray\");\r\n                }\r\n                //TODO: add all jaarModules to the students, and if more than one: yellow\r\n                // if (student? trimesterInstruments[trimNo].length > 1) {\r\n                //     cell.classList.add(\"yellowMarker\");\r\n                // }\r\n            }\r\n            filledRowCount++;\r\n        }\r\n\r\n    //Fill trimester rows\r\n    for (let rowNo = 0; rowNo < (mergedBlock.blockNeededRows - filledRowCount); rowNo++) {\r\n        let row = createStudentRow(newTableBody,\"trimesterRow\", groupId);\r\n\r\n        for (let trimNo = 0; trimNo < 3; trimNo++) {\r\n            let trimester = mergedBlock.trimesterStudents[trimNo];\r\n            sortStudents(trimester);\r\n            let student: StudentInfo = undefined;\r\n            if (trimester) {\r\n                student = trimester[rowNo];\r\n                let maxTrimStudentCount = Math.max(mergedBlock.maxAantallen[trimNo], mergedBlock.maxJaarStudentCount);\r\n                if (trimester.length > 0 && trimester.length >= maxTrimStudentCount) {\r\n                    row.dataset.hasFullClass = \"true\";\r\n                    hasFullClass = true;\r\n                }\r\n            }\r\n            let cell = buildStudentCell(student);\r\n            row.appendChild(cell);\r\n            cell.classList.add(\"trimesterStudent\");\r\n            if (mergedBlock.maxAantallen[trimNo] <= rowNo) {\r\n                cell.classList.add(\"gray\");\r\n            }\r\n            if(student?.trimesterInstruments) {\r\n                if (student?.trimesterInstruments[trimNo].length > 1) {\r\n                    cell.classList.add(\"yellowMarker\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(hasFullClass) {\r\n        if(trTitle)\r\n            trTitle.dataset.hasFullClass = \"true\";\r\n        headerRows.trModuleLinks.dataset.hasFullClass = \"true\";\r\n    }\r\n    if (!mergedBlock.hasWachtlijst) {\r\n        return;\r\n    }\r\n\r\n    //build the wachtlijst row\r\n    for (let trimNo of [0,1,2]) {\r\n        let row = newTableBody.children[newTableBody.children.length-1];\r\n        row.classList.add(\"wachtlijst\");\r\n        let cell = row.children[trimNo];\r\n        if (mergedBlock.wachtlijsten[trimNo] === 0) {\r\n            continue;\r\n        }\r\n        const small = document.createElement(\"small\");\r\n        cell.appendChild(small);\r\n        small.appendChild(document.createTextNode(`(${mergedBlock.wachtlijsten[trimNo]} op wachtlijst)`));\r\n        small.classList.add(\"text-danger\");\r\n\r\n        //studens on wachtlijst and there is still room available?\r\n        if (mergedBlock.wachtlijsten[trimNo] > 0 && mergedBlock.trimesterStudents[trimNo].length < mergedBlock.maxAantallen[trimNo]) {\r\n            cell.querySelector(\"small\").classList.add(\"yellowMarker\");\r\n            newTableBody.children[studentTopRowNo + mergedBlock.trimesterStudents[trimNo].length].children[trimNo].classList.add(\"yellowMarker\");\r\n        }\r\n    }\r\n}\r\n\r\nlet blockCounter = 0;\r\n\r\nfunction createLesRow(groupId: string) {\r\n    let tr = document.createElement(\"tr\");\r\n    tr.dataset.blockId = \"block\"+blockCounter;\r\n    tr.dataset.groupId = groupId;\r\n    return tr;\r\n}\r\n\r\nfunction buildTitleRow(newTableBody: HTMLTableSectionElement, title: string) {\r\n    const trTitle = createLesRow(title);\r\n    trTitle.dataset.blockId = \"groupTitle\";// a title row does not belong to a block.\r\n    newTableBody.appendChild(trTitle);\r\n    trTitle.classList.add(\"blockRow\", \"groupHeader\");\r\n    trTitle.dataset.groupId = title;\r\n\r\n    const tdTitle = document.createElement(\"td\");\r\n    trTitle.appendChild(tdTitle);\r\n    tdTitle.classList.add(\"titleCell\");\r\n    tdTitle.setAttribute(\"colspan\", \"3\");\r\n\r\n    let divTitle = document.createElement(\"div\");\r\n    tdTitle.appendChild(divTitle);\r\n    divTitle.classList.add(\"blockTitle\");\r\n    divTitle.appendChild(document.createTextNode(title));\r\n    return {trTitle, divTitle};\r\n}\r\n\r\nfunction buildBlockTitle(newTableBody: HTMLTableSectionElement, block: BlockInfo, getBlockTitle: (undefined | ((block: BlockInfo) => string)), groupId: string) {\r\n    if(!getBlockTitle && !block.errors)\r\n        return undefined;\r\n    const trBlockTitle = newTableBody.appendChild(createLesRow(groupId));\r\n    trBlockTitle.classList.add(\"blockRow\");\r\n\r\n    let {last: divBlockTitle} = html.emmet.append(trBlockTitle, \"td.infoCell[colspan=3]>div.text-muted\");\r\n    if(getBlockTitle) {\r\n        emmet.appendChild(divBlockTitle, `span.blockTitle{${getBlockTitle(block)}}`);\r\n    }\r\n\r\n    for (let jaarModule of block.jaarModules) {\r\n        divBlockTitle.appendChild(buildModuleButton(\">\", jaarModule.id, false))\r\n    }\r\n\r\n    if(block.errors) {\r\n        let errorSpan = document.createElement(\"span\");\r\n        errorSpan.appendChild(document.createTextNode(block.errors));\r\n        errorSpan.classList.add(\"lesError\");\r\n        divBlockTitle.appendChild(errorSpan);\r\n    }\r\n    return trBlockTitle;\r\n}\r\n\r\nenum DisplayOptions {\r\n    Teacher = 0x01,\r\n    Hour = 0x02,\r\n    Instrument = 0x04,\r\n    Location = 0x08\r\n}\r\n\r\nfunction buildInfoRow(newTableBody: HTMLTableSectionElement, text: string, show: boolean, groupId: string) {\r\n    const trBlockInfo = newTableBody.appendChild(createLesRow(groupId));\r\n    trBlockInfo.classList.add(\"blockRow\");\r\n    if(show===false)\r\n        trBlockInfo.dataset.keepHidden = \"true\";\r\n\r\n    return html.emmet.append(trBlockInfo, \"td.infoCell[colspan=3]>div.text-muted\");\r\n}\r\n\r\nfunction buildInfoRowWithText(newTableBody: HTMLTableSectionElement, show: boolean, groupId: string, text: string)  {\r\n    let {last: td} = buildInfoRow(newTableBody, \"\", show, groupId);\r\n    td.appendChild(document.createTextNode(text));\r\n}\r\n\r\nfunction buildBlockHeader(newTableBody: HTMLTableSectionElement, block: BlockInfo, groupId: string, trimesterHeaders: string[], displayOptions: DisplayOptions) {\r\n    //INFO\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Teacher & displayOptions)), groupId, block.teacher);\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Instrument & displayOptions)), groupId, block.instrumentName);\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Hour & displayOptions)), groupId, block.lesmoment);\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Location & displayOptions)), groupId, block.vestiging);\r\n    if(block.tags.length > 0) {\r\n        let {last: td} = buildInfoRow(newTableBody, block.tags.join(), true, groupId);\r\n        emmet.appendChild(td, block.tags.map(tag => `span.badge.badge-ill.badge-warning{${tag}}`).join('+'))\r\n    }\r\n\r\n    //build row for module links(the tiny numbered buttons)\r\n    const trModuleLinks = createLesRow(groupId);\r\n    newTableBody.appendChild(trModuleLinks);\r\n    trModuleLinks.classList.add(\"blockRow\");\r\n    const tdLink1 = document.createElement(\"td\");\r\n    trModuleLinks.appendChild(tdLink1);\r\n    tdLink1.appendChild(document.createTextNode(trimesterHeaders[0]));\r\n    if (block.trimesters[0][0]) {\r\n        tdLink1.appendChild(buildModuleButton(\"1\", block.trimesters[0][0].id, true));\r\n    }\r\n    const tdLink2 = document.createElement(\"td\");\r\n    trModuleLinks.appendChild(tdLink2);\r\n    tdLink2.appendChild(document.createTextNode(trimesterHeaders[1]));\r\n    if (block.trimesters[1][0]) {\r\n        tdLink2.appendChild(buildModuleButton(\"2\", block.trimesters[1][0].id, true));\r\n    }\r\n    const tdLink3 = document.createElement(\"td\");\r\n    trModuleLinks.appendChild(tdLink3);\r\n    tdLink3.appendChild(document.createTextNode(trimesterHeaders[2]));\r\n    if (block.trimesters[2][0]) {\r\n        tdLink3.appendChild(buildModuleButton(\"3\", block.trimesters[2][0].id, true));\r\n    }\r\n    return {\r\n        trModuleLinks: trModuleLinks,\r\n        blockId: blockCounter\r\n    };\r\n}\r\n\r\nfunction buildModuleButton(buttonText: string, id: string, floatRight: boolean) {\r\n    const button = document.createElement(\"a\");\r\n    button.href = \"#\";\r\n    button.setAttribute(\"onclick\", `showView('lessen-les','','id=${id}'); return false;`);\r\n    button.classList.add(\"lesButton\");\r\n    if(floatRight)\r\n        button.classList.add(\"float-right\");\r\n    button.innerText = buttonText;\r\n    return button;\r\n}\r\n\r\nfunction buildStudentCell(student: StudentInfo) {\r\n    const cell = document.createElement(\"td\");\r\n    let studentSpan = document.createElement(\"span\");\r\n    let displayName = String.fromCharCode(NBSP);\r\n    studentSpan.appendChild(document.createTextNode(displayName));\r\n    cell.appendChild(studentSpan);\r\n    if (!student) {\r\n        return cell;\r\n    }\r\n\r\n    if(savedNameSorting === NameSorting.LastName)\r\n        displayName = student.naam + \" \" + student.voornaam;\r\n    else\r\n        displayName = student.voornaam + \" \" + student.naam;\r\n    studentSpan.textContent = displayName;\r\n\r\n    if (student.allYearSame) {\r\n        studentSpan.classList.add(\"allYear\");\r\n    }\r\n\r\n    const anchor = document.createElement(\"a\");\r\n    cell.appendChild(anchor);\r\n    anchor.href = \"#\";\r\n    anchor.classList.add(\"pl-2\");\r\n    anchor.title = student.info;\r\n    anchor.onclick= async function () {\r\n        let id = await fetchStudentId(student.name);\r\n        if(id <= 0)\r\n            window.location.href = \"/?#zoeken?zoek=\"+ stripStudentName(student.name);\r\n        else {\r\n            await fetch(\"https://administratie.dko3.cloud/view.php?args=leerlingen-leerling?id=\"+id);\r\n            await fetch(\"https://administratie.dko3.cloud/views/leerlingen/leerling/index.inschrijvingen.tab.php\");\r\n            window.location.href = \"/?#leerlingen-leerling?id=\" + id + \",tab=inschrijvingen\";\r\n        }\r\n        return false;\r\n    };\r\n    const iTag = document.createElement(\"i\");\r\n    anchor.appendChild(iTag);\r\n    iTag.classList.add('fas', \"fa-user-alt\");\r\n    if (student.notAllTrimsHaveAnInstrument) {\r\n        iTag.classList.add(\"no3trims\");\r\n    }\r\n    return cell;\r\n}\r\n\r\nasync function fetchStudentId(studentName: string) {\r\n    let strippedStudentName = stripStudentName(studentName);\r\n    return fetch(\"/view.php?args=zoeken?zoek=\"+encodeURIComponent(strippedStudentName))\r\n        .then((response) => response.text())\r\n        .then((_text) => fetch(\"/views/zoeken/index.view.php\"))\r\n        .then((response) => response.text())\r\n        .then((text) => findStudentId(studentName, text))\r\n        .catch(err => {\r\n            console.error('Request failed', err);\r\n            return -1;\r\n        });\r\n}\r\n\r\nfunction findStudentId(studentName: string, text: string) {\r\n    studentName = studentName.replaceAll(\",\", \"\"); // search results do not contain a comma between first and last name.\r\n    db3(studentName);\r\n    db3(text);\r\n    let namePos = text.indexOf(studentName);\r\n    if (namePos < 0) {\r\n        return 0\r\n    }\r\n    //the name comes AFTER the id, hence the backward search of the leftmost slice of the string.\r\n    let idPos = text.substring(0, namePos).lastIndexOf(\"'id=\", namePos);\r\n    let id = text.substring(idPos, idPos+10);\r\n    let found = id.match(/\\d+/);\r\n    if(found?.length)\r\n        return parseInt(found[0]);\r\n    throw `No id found for student ${studentName}.`;\r\n}\r\n", "import {Les, LesType, StudentInfo} from \"./scrape\";\r\nimport {db3, distinct} from \"../globals\";\r\nimport {getSavedNameSorting, NameSorting} from \"./build\";\r\n\r\n\r\nexport class BlockInfo {\r\n    teacher: string;\r\n    instrumentName: string;\r\n    maxAantal: number;\r\n    lesmoment: string;\r\n    vestiging: string;\r\n    trimesters: (Les| undefined)[][];\r\n    jaarModules: Les[];\r\n    tags: string[];\r\n    errors: string;\r\n\r\n    static emptyBlock() {\r\n        return <BlockInfo>{\r\n            teacher: undefined,\r\n            vestiging: undefined,\r\n            maxAantal: -1,\r\n            instrumentName: undefined,\r\n            lesmoment: undefined,\r\n            trimesters: [[], [], []],\r\n            jaarModules: [],\r\n            errors: \"\",\r\n            tags: []\r\n        }\r\n    }\r\n}\r\n\r\ninterface HasBlocks {\r\n    blocks: BlockInfo[],\r\n    mergedBlocks: Map<string, BlockInfo>\r\n}\r\ninterface Teacher {\r\n    name: string;\r\n    blocks: BlockInfo[];\r\n    mergedBlocks: Map<string, BlockInfo>;\r\n    lesMomenten: Map<string, BlockInfo>;\r\n}\r\n\r\ninterface Instrument {\r\n    name: string;\r\n    blocks: BlockInfo[];\r\n    mergedBlocks: Map<string, BlockInfo>;\r\n    lesMomenten: Map<string, BlockInfo>;\r\n}\r\n\r\nexport interface TableData {\r\n    students : Map<string, StudentInfo>,\r\n    instruments : Map<string, Instrument>,\r\n    teachers : Map<string, Teacher>,\r\n    blocks: BlockInfo[]\r\n}\r\n\r\nfunction buildTrimesters(instrumentTeacherMomentModules: Les[]) {\r\n    let mergedInstrument: (Les | undefined)[][] = [[], [], []];\r\n    instrumentTeacherMomentModules\r\n        .filter(module => module.lesType === LesType.TrimesterModule)\r\n        .forEach(module => {\r\n        mergedInstrument[module.trimesterNo-1].push(module);\r\n    });\r\n    return mergedInstrument;\r\n}\r\n\r\nfunction getLesmomenten(modules: Les[]) {\r\n    let lesMomenten = modules.map((module) => module.formattedLesmoment);\r\n    return [...new Set(lesMomenten)];\r\n}\r\n\r\nfunction getMaxAantal(modules: Les[]) {\r\n    return modules\r\n        .map((module) => module.maxAantal)\r\n        .reduce((prev, next) => {\r\n                return prev < next ? next : prev\r\n            }\r\n        );\r\n}\r\n\r\nfunction getVestigingen(modules: Les[]) {\r\n    let vestigingen = modules.map((module) => module.vestiging);\r\n    let uniqueVestigingen = [...new Set(vestigingen)];\r\n    return uniqueVestigingen.toString();\r\n}\r\n\r\nexport function prepareLesmomenten(inputModules: Les[]) {\r\n    let reLesMoment = /.*(\\w\\w) (?:\\d+\\/\\d+ )?(\\d\\d:\\d\\d)-(\\d\\d:\\d\\d).*/;\r\n    for(let module of inputModules){\r\n        if(module.lesmoment === \"(geen volgende les)\") {\r\n            module.formattedLesmoment = module.lesmoment;\r\n            continue;\r\n        }\r\n        let matches = module.lesmoment.match(reLesMoment);\r\n        if (matches?.length !== 4) {\r\n            console.error(`Could not process lesmoment \"${module.lesmoment}\" for instrument \"${module.instrumentName}\".`);\r\n            module.formattedLesmoment =  \"???\";\r\n        } else {\r\n            module.formattedLesmoment = matches[1] + \" \" + matches[2] + \"-\" + matches[3];\r\n        }\r\n\r\n        module.formattedLesmoment =  matches[1] + \" \" + matches[2] + \"-\" + matches[3];\r\n    }\r\n}\r\n\r\nfunction setStudentPopupInfo(student: StudentInfo) {\r\n    student.info = \"\";\r\n    if (!student.trimesterInstruments)\r\n        return;\r\n    for (let instrs of student.trimesterInstruments) {\r\n        if (instrs.length) {\r\n            student.info += instrs[0].trimesterNo + \". \" + instrs.map(instr => instr.instrumentName) + \"\\n\";\r\n        } else {\r\n            student.info += \"?. ---\\n\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction setStudentAllTrimsTheSameInstrument(student: StudentInfo) {\r\n    if(!student.trimesterInstruments)\r\n        return;\r\n    let instruments = student.trimesterInstruments.flat();\r\n    if (instruments.length < 3) {\r\n        student.allYearSame = false;\r\n        return; //skip the every() below if we haven't got 3 instruments.\r\n    }\r\n    student.allYearSame = instruments\r\n        .every((instr: any) => instr.instrumentName === (student?.trimesterInstruments[0][0]?.instrumentName ?? \"---\"));\r\n}\r\n\r\nfunction setStudentNoInstrumentForAllTrims(student: StudentInfo) {\r\n    if(!student.trimesterInstruments)\r\n        return;\r\n    student.notAllTrimsHaveAnInstrument = false;\r\n    for(let trim of student.trimesterInstruments) {\r\n        if(trim.length == 0)\r\n            student.notAllTrimsHaveAnInstrument = true;\r\n    }\r\n}\r\n\r\nexport function buildTableData(inputModules: Les[]) : TableData {\r\n    prepareLesmomenten(inputModules);\r\n\r\n    let tableData: TableData = {\r\n        students: new Map(),\r\n        instruments: new Map(),\r\n        teachers: new Map(),\r\n        blocks: [],\r\n    };\r\n\r\n    //create a block per instrument/teacher/lesmoment\r\n    // group by INSTRUMENT\r\n    let instruments = distinct(inputModules.map((module) => module.instrumentName));\r\n    for (let instrumentName of instruments) {\r\n        let instrumentModules = inputModules.filter((module) => module.instrumentName === instrumentName);\r\n\r\n        // group by TEACHER\r\n        let teachers = distinct(instrumentModules.map((module) => module.teacher));\r\n        for(let teacher of teachers) {\r\n            let instrumentTeacherModules = instrumentModules.filter(module => module.teacher === teacher);\r\n\r\n            // group by LESMOMENT\r\n            let lesmomenten = distinct(getLesmomenten(instrumentTeacherModules));\r\n            for(let lesmoment of lesmomenten) {\r\n                let instrumentTeacherMomentModules = instrumentTeacherModules.filter(module => module.formattedLesmoment === lesmoment);\r\n\r\n                let block: BlockInfo = BlockInfo.emptyBlock();\r\n                block.instrumentName = instrumentName;\r\n                block.teacher = teacher;\r\n                block.lesmoment = lesmoment;\r\n                block.maxAantal = getMaxAantal(instrumentTeacherMomentModules);\r\n                block.vestiging = getVestigingen(instrumentTeacherMomentModules);\r\n                block.tags = distinct(instrumentTeacherMomentModules.map(les => les.tags).flat());\r\n                // we could have both trimesters and jaar modules for this instrument/teacher/lesmoment\r\n                block.trimesters = buildTrimesters(instrumentTeacherMomentModules);\r\n                block.jaarModules = instrumentTeacherMomentModules.filter(module => module.lesType === LesType.JaarModule);\r\n                checkBlockForErrors(block);\r\n                tableData.blocks.push(block);\r\n\r\n                for (let trim of block.trimesters) {\r\n                    addTrimesterStudentsToMapAndCount(tableData.students, trim);\r\n                }\r\n                for (let jaarModule of block.jaarModules) {\r\n                    addJaarStudentsToMapAndCount(tableData.students, jaarModule);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for(let student of tableData.students.values()) {\r\n        setStudentPopupInfo(student);\r\n        setStudentAllTrimsTheSameInstrument(student);\r\n        setStudentNoInstrumentForAllTrims(student);\r\n    }\r\n\r\n    //group by instrument\r\n    let instrumentNames = distinct(tableData.blocks.map(b => b.instrumentName)).sort((a,b) => { return a.localeCompare(b);});\r\n    for(let instr of instrumentNames) {\r\n        tableData.instruments.set(instr, <Instrument>{name: instr, blocks: []});\r\n    }\r\n    for(let block of tableData.blocks) {\r\n        tableData.instruments.get(block.instrumentName).blocks.push(block);\r\n    }\r\n\r\n    //group by teacher\r\n    let teachers = distinct(tableData.blocks.map(b => b.teacher)).sort((a,b) => { return a.localeCompare(b);});\r\n    for(let t of teachers) {\r\n        tableData.teachers.set(t, <Teacher>{name: t, blocks: []});\r\n    }\r\n    for(let block of tableData.blocks) {\r\n        tableData.teachers.get(block.teacher).blocks.push(block);\r\n    }\r\n\r\n    //group by teacher/lesmoment\r\n    groupBlocksTwoLevels(\r\n        tableData.teachers.values(),\r\n        (block) => block.lesmoment,\r\n        (primary: Teacher, secundary) => { primary.lesMomenten = secundary; }\r\n    );\r\n\r\n    //group by instrument/lesmoment\r\n    groupBlocksTwoLevels(\r\n        tableData.instruments.values(),\r\n        (block) => block.lesmoment,\r\n        (primary: Teacher, secundary) => { primary.lesMomenten = secundary; }\r\n    );\r\n\r\n    //group by teacher\r\n    groupBlocks(\r\n        tableData.teachers.values(),\r\n        (block) => block.teacher\r\n    );\r\n\r\n    //group by instrument\r\n    groupBlocks(\r\n        tableData.instruments.values(),\r\n        (block) => block.instrumentName\r\n    );\r\n\r\n    db3(tableData);\r\n    return tableData;\r\n}\r\n\r\nfunction groupBlocksTwoLevels(primaryGroups: Iterable<HasBlocks>, getSecondaryKey: (block: BlockInfo) => string, setSecondaryGroup: (primary: HasBlocks, group: Map<string, BlockInfo>) => void) {\r\n    for (let primary of primaryGroups) {\r\n        let blocks = primary.blocks;\r\n        let secondaryKeys = distinct(blocks.map(getSecondaryKey));\r\n        let secondaryGroup = new Map(secondaryKeys.map(key => [key, BlockInfo.emptyBlock()]));\r\n        //bundle the blocks per secondary\r\n        for (let block of blocks) {\r\n            mergeBlock(secondaryGroup.get(getSecondaryKey(block)), block);\r\n        }\r\n        secondaryGroup.forEach(block => {\r\n            updateMergedBlock(block);\r\n        });\r\n        setSecondaryGroup(primary, secondaryGroup);\r\n    }\r\n}\r\n\r\nfunction groupBlocks(primaryGroups: Iterable<HasBlocks>, getPrimaryKey: (block: BlockInfo) => string) {\r\n    for (let primary of primaryGroups) {\r\n        let blocks = primary.blocks;\r\n        let keys = distinct(blocks.map(getPrimaryKey));\r\n        primary.mergedBlocks = new Map(keys.map(key => [key, BlockInfo.emptyBlock()]));\r\n        //bundle the blocks per secondary\r\n        for (let block of blocks) {\r\n            mergeBlock(primary.mergedBlocks.get(getPrimaryKey(block)), block);\r\n        }\r\n        primary.mergedBlocks.forEach(block => {\r\n            updateMergedBlock(block);\r\n        });\r\n    }\r\n}\r\n\r\nfunction mergeBlock(blockToMergeTo: BlockInfo, block2: BlockInfo) {{\r\n    blockToMergeTo.jaarModules.push(...block2.jaarModules);\r\n    for (let trimNo of [0, 1, 2]) {\r\n        blockToMergeTo.trimesters[trimNo].push(block2.trimesters[trimNo][0]);\r\n    }\r\n    blockToMergeTo.errors += block2.errors;\r\n    return blockToMergeTo;\r\n}}\r\n\r\nfunction updateMergedBlock(block: BlockInfo) {\r\n    let allLessen = block.trimesters.flat().concat(block.jaarModules);\r\n    block.lesmoment = [...new Set(allLessen.filter(les => les).map(les => les.lesmoment))].join(\", \");\r\n    block.teacher = [...new Set(allLessen.filter(les => les).map(les => les.teacher))].join(\", \");\r\n    block.vestiging = [...new Set(allLessen.filter(les => les).map(les => les.vestiging))].join(\", \");\r\n    block.instrumentName =  [...new Set(allLessen.filter(les => les).map(les => les.instrumentName))].join(\", \");\r\n    block.tags = distinct(allLessen.filter(les => les).map(les => les.tags).flat());\r\n}\r\n\r\nfunction checkBlockForErrors(block: BlockInfo) {\r\n    let maxMoreThan100 = block.jaarModules\r\n        .map(module => module.maxAantal > TOO_LARGE_MAX)\r\n        .includes(true);\r\n    if(!maxMoreThan100) {\r\n        maxMoreThan100 = block.trimesters.flat()\r\n            .map(module => module?.maxAantal > TOO_LARGE_MAX)\r\n            .includes(true);\r\n    }\r\n    if(maxMoreThan100)\r\n        block.errors += \"Max aantal lln > \" + TOO_LARGE_MAX;\r\n}\r\n\r\nfunction addTrimesterStudentsToMapAndCount(allStudents: Map<string, StudentInfo>, blockTrimModules: Les[]) {\r\n    for(let blockTrimModule of blockTrimModules) {\r\n        if (!blockTrimModule)\r\n            continue;\r\n        for (let student of blockTrimModule.students) {\r\n            if (!allStudents.has(student.name)) {\r\n                student.trimesterInstruments = [[], [], []];\r\n                allStudents.set(student.name, student);\r\n            }\r\n            let stud = allStudents.get(student.name);\r\n            stud.trimesterInstruments[blockTrimModule.trimesterNo - 1].push(blockTrimModule);\r\n        }\r\n    }\r\n}\r\n\r\nfunction addJaarStudentsToMapAndCount(students: Map<string, StudentInfo>, jaarModule: Les) {\r\n    if(!jaarModule) return;\r\n    for (let student of jaarModule.students) {\r\n        if (!students.has(student.name)) {\r\n            student.jaarInstruments = [];\r\n            students.set(student.name, student);\r\n        }\r\n        let stud = students.get(student.name);\r\n        stud.jaarInstruments.push(jaarModule);\r\n    }\r\n    //all jaarModules must reference the students in the overall map.\r\n    jaarModule.students = jaarModule.students\r\n        .map((student) => students.get(student.name));\r\n}\r\n\r\nexport function sortStudents(students: StudentInfo[]) {\r\n    if(!students) return;\r\n    let comparator = new Intl.Collator();\r\n    let sorting = getSavedNameSorting();\r\n    students\r\n        //sort full year students on top.\r\n        .sort((a,b) => {\r\n            if (a.allYearSame && (!b.allYearSame)) {\r\n                return -1;\r\n            } else if ((!a.allYearSame) && b.allYearSame) {\r\n                return 1;\r\n            } else {\r\n                let aName = sorting === NameSorting.LastName ? a.naam + a.voornaam : a.voornaam + a.naam;\r\n                let bName = sorting === NameSorting.LastName ? b.naam + b.voornaam : b.voornaam + b.naam;\r\n                return comparator.compare(aName, bName);\r\n            }\r\n        });\r\n}\r\n\r\ninterface MergedBlockStudents {\r\n    jaarStudents: StudentInfo[],\r\n    trimesterStudents: StudentInfo[][],\r\n    maxAantallen: number[],\r\n    blockNeededRows: number,\r\n    wachtlijsten: number[],\r\n    hasWachtlijst: boolean,\r\n    maxJaarStudentCount: number\r\n}\r\n\r\nexport const TOO_LARGE_MAX = 100;\r\n\r\nexport function mergeBlockStudents(block: BlockInfo) {\r\n    let jaarStudents = block.jaarModules.map(les => les.students).flat();\r\n    let trimesterStudents = [\r\n        block.trimesters[0].map(les => les?.students ?? []).flat(),\r\n        block.trimesters[1].map(les => les?.students ?? []).flat(),\r\n        block.trimesters[2].map(les => les?.students ?? []).flat(),\r\n    ];\r\n\r\n    trimesterStudents.forEach( trim => sortStudents(trim));\r\n\r\n    let maxAantallen = block.trimesters\r\n        .map((trimLessen) => {\r\n            if(trimLessen.length === 0)\r\n                return 0;\r\n            return trimLessen\r\n                .map(les => les?.maxAantal ?? 0)\r\n                .map(maxAantal => maxAantal > TOO_LARGE_MAX ? 4 : maxAantal)\r\n                .reduce((a,b) => a+b);\r\n        });\r\n\r\n    let blockNeededRows = Math.max(\r\n        ...maxAantallen,\r\n        ...trimesterStudents.map(stud => stud.length)\r\n    );\r\n    let wachtlijsten = block.trimesters\r\n        .map((trimLessen) => {\r\n            if(trimLessen.length === 0)\r\n                return 0;\r\n            return trimLessen\r\n                .map(les => les?.wachtlijst ?? 0)\r\n                .reduce((a,b) => a + b);\r\n        });\r\n\r\n    let hasWachtlijst = wachtlijsten\r\n        .some(wachtLijst => wachtLijst>0);\r\n    if (hasWachtlijst) {\r\n        blockNeededRows++;\r\n    }\r\n\r\n    let maxJaarStudentCount = block.jaarModules\r\n        .map(mod => mod.maxAantal)\r\n        .reduce((a, b) => Math.max(a, b), 0);\r\n    return {\r\n        jaarStudents,\r\n        trimesterStudents,\r\n        maxAantallen,\r\n        blockNeededRows,\r\n        wachtlijsten,\r\n        hasWachtlijst,\r\n        maxJaarStudentCount\r\n    } as MergedBlockStudents;\r\n\r\n}\r\n", "import {scrapeLessenOverzicht, scrapeModules} from \"./scrape\";\r\nimport {buildTableData} from \"./convert\";\r\nimport {buildTrimesterTable, getSavedNameSorting, NameSorting, setSavedNameSorting, TrimesterGrouping} from \"./build\";\r\nimport * as def from \"../def\";\r\nimport {createScearchField, createTextRowFilter, filterTable, filterTableRows, setButtonHighlighted} from \"../globals\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport * as html from \"../../libs/Emmeter/html\";\r\n\r\nexport default new HashObserver(\"#lessen-overzicht\", onMutation);\r\n\r\nfunction onMutation (mutation: MutationRecord) {\r\n    let lessenOverzicht = document.getElementById(def.LESSEN_OVERZICHT_ID);\r\n    if (mutation.target !== lessenOverzicht) {\r\n        return false;\r\n    }\r\n\r\n    // #lessen_overzicht > div.mb-3 > div > button.btn.btn-sm.btn-outline-info > i\r\n    let printButton = document.getElementById(\"btn_print_overzicht_lessen\") as HTMLButtonElement;\r\n    if (!printButton) {\r\n        return false;\r\n    }\r\n    let copyLessonButton = printButton.parentElement.querySelector(\"button:has(i.fa-reply-all)\") as HTMLButtonElement;\r\n    if(copyLessonButton?.title === \"\") {\r\n        copyLessonButton.title = copyLessonButton.textContent.replaceAll(\"\\n\", \" \").replaceAll(\"      \", \" \").replaceAll(\"     \", \" \").replaceAll(\"    \", \" \").replaceAll(\"   \", \" \").replaceAll(\"  \", \" \");\r\n        copyLessonButton.childNodes.forEach(node => {\r\n            if(node.nodeType === Node.TEXT_NODE)\r\n                node.remove();\r\n        });\r\n        copyLessonButton.querySelector(\"strong\")?.remove();\r\n        copyLessonButton.style.backgroundColor = \"red\";\r\n        copyLessonButton.style.color = \"white\";\r\n    }\r\n    onLessenOverzichtChanged(printButton);\r\n    return true;\r\n}\r\n\r\nfunction onLessenOverzichtChanged(printButton: HTMLButtonElement) {\r\n    //reset state\r\n    let overzichtDiv = document.getElementById(def.LESSEN_OVERZICHT_ID);\r\n    let trimDiv = document.getElementById(def.TRIM_DIV_ID);\r\n    if (!trimDiv) {\r\n        let trimDiv = document.createElement(\"div\");\r\n        let originalTable = document.getElementById(\"table_lessen_resultaat_tabel\");\r\n        originalTable.insertAdjacentElement(\"afterend\", trimDiv);\r\n        trimDiv.id = def.TRIM_DIV_ID;\r\n    }\r\n    overzichtDiv.dataset.filterFullClasses = \"false\";\r\n\r\n    let badges = document.getElementsByClassName(\"badge\");\r\n    let hasModules = Array.from(badges).some((el) => el.textContent === \"module\");\r\n    let hasAlc = Array.from(badges).some((el) => el.textContent === \"ALC\")\r\n    let warnings = document.getElementsByClassName(\"text-warning\");\r\n    let hasWarnings = warnings.length !==0;\r\n\r\n    let hasFullClasses = Array.from(warnings).map((item) => item.textContent).some((txt) => txt.includes(\"leerlingen\"));\r\n\r\n    if (!hasModules && !hasAlc && !hasWarnings && !hasFullClasses) {\r\n        return;\r\n    }\r\n    if (hasModules) {\r\n        addButton(printButton, def.TRIM_BUTTON_ID, \"Toon trimesters\", onClickShowTrimesters, \"fa-sitemap\");\r\n    }\r\n    if(hasAlc || hasWarnings) {\r\n        addButton(printButton, def.CHECKS_BUTTON_ID, \"Controleer lessen op fouten\", onClickCheckResults, \"fa-stethoscope\");\r\n    }\r\n    if(hasFullClasses) {\r\n        addButton(printButton, def.FULL_CLASS_BUTTON_ID, \"Filter volle klassen\", onClickFullClasses, \"fa-weight-hanging\");\r\n    }\r\n\r\n    addFilterField();\r\n}\r\n\r\nconst TXT_FILTER_ID = \"txtFilter\";\r\n// Well, saved until the browser is refreshed :)\r\nlet savedSearch = \"\";\r\nlet savedGrouping = TrimesterGrouping.InstrumentTeacherHour;\r\n\r\nfunction addFilterField() {\r\n    let divButtonNieuweLes = document.querySelector(\"#lessen_overzicht > div > button\");\r\n    if(!document.getElementById(TXT_FILTER_ID))\r\n        divButtonNieuweLes.insertAdjacentElement(\"afterend\", createScearchField(TXT_FILTER_ID, onSearchInput, savedSearch));\r\n\r\n    onSearchInput();\r\n}\r\n\r\nfunction onSearchInput() {\r\n    savedSearch = (document.getElementById(TXT_FILTER_ID) as HTMLInputElement).value;\r\n    if(isTrimesterTableVisible()) {\r\n        let rowFilter = createTextRowFilter(savedSearch, (tr) => tr.textContent);\r\n        let filteredRows = filterTableRows(def.TRIM_TABLE_ID, rowFilter);\r\n\r\n        //gather the blockIds and groupIds of the matching rows and show ALL of the rows in those blocks. (not just the matching rows).\r\n        let blockIds = [...new Set(filteredRows.filter(tr => tr.dataset.blockId !== \"groupTitle\").map(tr => tr.dataset.blockId))];\r\n        let groupIds = [...new Set(filteredRows.map(tr => tr.dataset.groupId))];\r\n        //also show all rows of headers that match the text filter.\r\n        let headerGroupIds = [...new Set(filteredRows.filter(tr => tr.dataset.blockId === \"groupTitle\").map(tr => tr.dataset.groupId))];\r\n\r\n        function siblingsAndAncestorsFilter(tr: HTMLTableRowElement, context: any) {\r\n            //display all child rows for the headers that match\r\n            if((<string[]>context.headerGroupIds).includes(tr.dataset.groupId))\r\n                return true;\r\n            //display all siblings of non-header rows, thus the full block\r\n            if((<string[]>context.blockIds).includes(tr.dataset.blockId))\r\n                return true;\r\n            //display the ancestor (header) rows of matching non-header rows\r\n            return (<string[]>context.groupIds).includes(tr.dataset.groupId) && tr.classList.contains(\"groupHeader\");\r\n        }\r\n\r\n        filterTable(def.TRIM_TABLE_ID, {context: {blockIds, groupIds, headerGroupIds}, rowFilter: siblingsAndAncestorsFilter});\r\n    } else {\r\n        let rowFilter = createTextRowFilter(savedSearch, (tr) => tr.cells[0].textContent);\r\n        filterTable(\"table_lessen_resultaat_tabel\",rowFilter);\r\n    }\r\n}\r\n\r\nfunction addButton(printButton: HTMLButtonElement, buttonId: string, title: string, clickFunction: (this: GlobalEventHandlers, ev: MouseEvent) => any, imageId: string) {\r\n    let button = document.getElementById(buttonId);\r\n    if (button === null) {\r\n        const button = document.createElement(\"button\",);\r\n        button.classList.add(\"btn\", \"btn-sm\", \"btn-outline-secondary\", \"w-100\");\r\n        button.id = buttonId;\r\n        button.style.marginTop = \"0\";\r\n        button.onclick = clickFunction;\r\n        button.title = title;\r\n        const buttonContent = document.createElement(\"i\");\r\n        button.appendChild(buttonContent);\r\n        buttonContent.classList.add(\"fas\", imageId);\r\n        printButton.insertAdjacentElement(\"beforebegin\", button);\r\n    }\r\n}\r\nfunction onClickCheckResults() {\r\n    let lessen = scrapeLessenOverzicht();\r\n\r\n    let table = document.getElementById(\"table_lessen_resultaat_tabel\");\r\n\r\n    let checksDiv = document.createElement(\"div\");\r\n    checksDiv.id = \"checksDiv\";\r\n    checksDiv.classList.add(\"badge-warning\");\r\n\r\n    let checksText = \"\";\r\n    table.parentNode.insertBefore(checksDiv, table.previousSibling);\r\n    for(let les of lessen) {\r\n        if (les.alc) {\r\n            if(les.visible) {\r\n                checksText += `<div>ALC les <b>${les.naam}</b> is online zichtbaar.</div>`;\r\n            }\r\n        }\r\n    }\r\n    checksDiv.innerHTML = checksText;\r\n}\r\n\r\nfunction showOnlyFullTrimesters(onlyFull: boolean) {\r\n    let trimDiv = document.getElementById(def.TRIM_DIV_ID);\r\n    trimDiv.dataset.showFullClass = onlyFull ? \"true\" : \"false\";\r\n}\r\n\r\nfunction onClickFullClasses() {\r\n    let lessen = scrapeLessenOverzicht();\r\n    let overzichtDiv = document.getElementById(def.LESSEN_OVERZICHT_ID);\r\n    overzichtDiv.dataset.filterFullClasses = (overzichtDiv.dataset.filterFullClasses?? \"false\") === \"false\" ? \"true\" : \"false\";\r\n    let displayState = overzichtDiv.dataset.filterFullClasses === \"true\" ? \"none\" : \"table-row\";\r\n    for(let les of lessen) {\r\n        if (les.aantal < les.maxAantal) {\r\n            les.tableRow.style.display = displayState;\r\n        }\r\n    }\r\n    setButtonHighlighted(def.FULL_CLASS_BUTTON_ID, overzichtDiv.dataset.filterFullClasses === \"true\");\r\n    showOnlyFullTrimesters(displayState === \"none\");\r\n}\r\n\r\nfunction onClickShowTrimesters() {\r\n    showTrimesterTable(!isTrimesterTableVisible(), savedGrouping);\r\n}\r\n\r\nexport function isTrimesterTableVisible() {\r\n    return document.getElementById(\"table_lessen_resultaat_tabel\").style.display === \"none\";\r\n}\r\n\r\nexport function showTrimesterTable(show: boolean, grouping: TrimesterGrouping) {\r\n    document.getElementById(def.TRIM_TABLE_ID)?.remove();\r\n    //Build lazily and only once. Table will automatically be erased when filters are changed.\r\n    if (!document.getElementById(def.TRIM_TABLE_ID)) {\r\n        let inputModules = scrapeModules();\r\n        let tableData = buildTableData(inputModules.trimesterModules.concat(inputModules.jaarModules));\r\n        buildTrimesterTable(tableData, grouping);\r\n    }\r\n\r\n    document.getElementById(\"table_lessen_resultaat_tabel\").style.display = show ? \"none\" : \"table\";\r\n    document.getElementById(def.TRIM_TABLE_ID).style.display = show ? \"table\" : \"none\";\r\n    document.getElementById(def.TRIM_BUTTON_ID).title = show ? \"Toon normaal\" : \"Toon trimesters\";\r\n    setButtonHighlighted(def.TRIM_BUTTON_ID, show);\r\n    setSorteerLine(show, grouping);\r\n    onSearchInput();\r\n}\r\n\r\nfunction addSortingAnchorOrText() {\r\n    let sorteerDiv = document.getElementById(\"trimSorteerDiv\");\r\n    sorteerDiv.innerHTML = \"Sorteer : \";\r\n    if(getSavedNameSorting() === NameSorting.FirstName) {\r\n        html.emmet.append(sorteerDiv, \"a{Naam}[href=\\\"#\\\"]+{ | }+strong{Voornaam}\");\r\n    } else {\r\n        html.emmet.append(sorteerDiv, \"strong{Naam}+{ | }+a{Voornaam}[href=\\\"#\\\"]\");\r\n    }\r\n    for (let anchor of sorteerDiv.querySelectorAll(\"a\")) {\r\n        anchor.onclick = (mouseEvent: MouseEvent) => {\r\n            if ((mouseEvent.target as HTMLElement).textContent === \"Naam\")\r\n                setSavedNameSorting(NameSorting.LastName);\r\n            else\r\n                setSavedNameSorting(NameSorting.FirstName);\r\n            showTrimesterTable(true, savedGrouping);\r\n            addSortingAnchorOrText();\r\n            return false;\r\n        };\r\n    }\r\n}\r\n\r\nfunction setSorteerLine(showTrimTable: boolean, grouping: TrimesterGrouping) {\r\n    let oldSorteerSpan = document.querySelector(\"#lessen_overzicht > span\") as HTMLElement;\r\n    let newGroupingDiv = document.getElementById(\"trimGroepeerDiv\");\r\n    if(!newGroupingDiv) {\r\n        newGroupingDiv = document.createElement(\"div\");\r\n        newGroupingDiv.id = \"trimGroepeerDiv\";\r\n        newGroupingDiv.classList.add(\"text-muted\");\r\n        oldSorteerSpan.parentNode.insertBefore(newGroupingDiv, oldSorteerSpan.nextSibling);\r\n    }\r\n    let newSortingDiv = document.getElementById(\"trimSorteerDiv\");\r\n    if(!newSortingDiv) {\r\n        html.emmet.insertBefore(newGroupingDiv, 'div#trimSorteerDiv.text-muted');\r\n        addSortingAnchorOrText();\r\n    }\r\n    newGroupingDiv.innerText = \"Groepeer: \";\r\n    oldSorteerSpan.style.display = showTrimTable ? \"none\" : \"\";\r\n    newGroupingDiv.style.display = showTrimTable ? \"\" : \"none\";\r\n\r\n    newGroupingDiv.appendChild(createGroupingAnchorOrText(TrimesterGrouping.InstrumentTeacherHour, grouping));\r\n    newGroupingDiv.appendChild(document.createTextNode(\" | \"));\r\n    newGroupingDiv.appendChild(createGroupingAnchorOrText(TrimesterGrouping.TeacherInstrumentHour, grouping));\r\n    newGroupingDiv.appendChild(document.createTextNode(\" | \"));\r\n    newGroupingDiv.appendChild(createGroupingAnchorOrText(TrimesterGrouping.TeacherHour, grouping));\r\n    newGroupingDiv.appendChild(document.createTextNode(\" | \"));\r\n    newGroupingDiv.appendChild(createGroupingAnchorOrText(TrimesterGrouping.Instrument, grouping));\r\n    newGroupingDiv.appendChild(document.createTextNode(\" | \"));\r\n    newGroupingDiv.appendChild(createGroupingAnchorOrText(TrimesterGrouping.Teacher, grouping));\r\n}\r\n\r\nfunction createGroupingAnchorOrText(grouping: TrimesterGrouping, activeSorting: TrimesterGrouping) {\r\n    let sortingText = \"\";\r\n    switch (grouping) {\r\n        case TrimesterGrouping.InstrumentTeacherHour: sortingText = \"instrument+leraar+lesuur\"; break;\r\n        case TrimesterGrouping.TeacherInstrumentHour: sortingText = \"leraar+instrument+lesuur\"; break;\r\n        case TrimesterGrouping.TeacherHour: sortingText = \"leraar+lesuur\"; break;\r\n        case TrimesterGrouping.InstrumentHour: sortingText = \"instrument+lesuur\"; break;\r\n        case TrimesterGrouping.Instrument: sortingText = \"instrument\"; break;\r\n        case TrimesterGrouping.Teacher: sortingText = \"leraar\"; break;\r\n    }\r\n\r\n    if (activeSorting === grouping) {\r\n        let strong = document.createElement(\"strong\");\r\n        strong.appendChild(document.createTextNode(sortingText));\r\n        return strong;\r\n    } else {\r\n        let anchor = document.createElement('a');\r\n        anchor.innerText = sortingText;\r\n        anchor.href = \"#\";\r\n        anchor.onclick = () => {\r\n            savedGrouping = grouping;\r\n            showTrimesterTable(true, grouping);\r\n            return false;\r\n        };\r\n        return anchor;\r\n    }\r\n}\r\n", "import {HashObserver} from \"../pageObserver\";\r\n\r\nexport default new HashObserver(\"#lessen-les\", onMutation);\r\n\r\nfunction onMutation(mutation: MutationRecord) {\r\n    let tabLeerlingen = document.getElementById(\"les_leerlingen_leerlingen\");\r\n    if (mutation.target === tabLeerlingen) {\r\n        onLeerlingenChanged();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onLeerlingenChanged() {\r\n    console.log(\"Les-Leerlingen changed.\")\r\n    addSortVoornaamLink();\r\n}\r\n\r\nfunction addSortVoornaamLink() {\r\n    try {\r\n        let headerSpans = document.querySelectorAll(\"#les_leerlingen_leerlingen > span\");\r\n        let sortSpan = Array.from(headerSpans).find((value: HTMLSpanElement) => value.textContent.includes(\"gesorteerd op:\"));\r\n        let graadEnNaam = Array.from(sortSpan.querySelectorAll(\"a\")).find(anchor => anchor.textContent === \"graad en naam\");\r\n        const SORT_VOORNAAM_ID = \"dko_plugin_sortVoornaam\";\r\n        if(document.getElementById(SORT_VOORNAAM_ID))\r\n            return;\r\n        let anchorSortVoornaam = document.createElement(\"a\");\r\n        anchorSortVoornaam.id = SORT_VOORNAAM_ID;\r\n        anchorSortVoornaam.href = \"#\";\r\n        anchorSortVoornaam.innerText = \"voornaam\";\r\n        anchorSortVoornaam.classList.add(\"text-muted\");\r\n        anchorSortVoornaam.onclick = onSortVoornaam;\r\n        sortSpan.insertBefore(anchorSortVoornaam, graadEnNaam);\r\n        sortSpan.insertBefore(document.createTextNode(\" | \"), graadEnNaam);\r\n    }\r\n    catch (e) {}\r\n}\r\n\r\nfunction onSortVoornaam(event: MouseEvent) {\r\n    sortVoornaam(event);\r\n    switchNaamVoornaam(event);\r\n    return false;\r\n}\r\n\r\nfunction sortVoornaam(event: MouseEvent) {\r\n    let rows: HTMLTableRowElement[] = Array.from(document.querySelectorAll(\"#les_leerlingen_leerlingen > table > tbody > tr\"));\r\n\r\n    rows.sort((tr1, tr2) => {\r\n        let name1 = tr1.querySelector(\"td > strong\").textContent;\r\n        let name2 = tr2.querySelector(\"td > strong\").textContent;\r\n        let voornaam1 = name1.split(\",\").pop();\r\n        let voornaam2 = name2.split(\",\").pop();\r\n        return voornaam1.localeCompare(voornaam2);\r\n    });\r\n\r\n    let table: HTMLTableElement = document.querySelector(\"#les_leerlingen_leerlingen > table\");\r\n    rows.forEach(row => table.tBodies[0].appendChild(row));\r\n\r\n    Array.from(document.querySelectorAll(\"#les_leerlingen_leerlingen > span > a\"))\r\n        .forEach((a) => a.classList.add(\"text-muted\"));\r\n    (event.target as HTMLElement).classList.remove(\"text-muted\");\r\n}\r\n\r\nfunction switchNaamVoornaam(event: MouseEvent) {\r\n    let rows: HTMLTableRowElement[] = Array.from(document.querySelectorAll(\"#les_leerlingen_leerlingen > table > tbody > tr\"));\r\n\r\n    rows.forEach((tr) => {\r\n        let strong = tr.querySelector(\"td > strong\");\r\n        let name = strong.textContent;\r\n        let split = name.split(\",\");\r\n        let voornaam = split.pop() ?? \"\";\r\n        let naam = split.pop() ?? \"\";\r\n        strong.textContent = voornaam + \" \" + naam;\r\n    });\r\n}\r\n", "import {getGlobalSettings, getUserAndSchoolName, options, registerSettingsObserver} from \"../globals\";\r\nimport {PageObserver} from \"../pageObserver\";\r\n\r\nexport default new PageObserver(setSchoolBackground);\r\n\r\nregisterSettingsObserver(setSchoolBackground);\r\n\r\nfunction setSchoolBackground () {\r\n    let {userName, schoolName} = getUserAndSchoolName();\r\n    let isMyAcademy = options.myAcademies\r\n        .split(\"\\n\")\r\n        .filter((needle) => needle !== \"\")\r\n        .find((needle) =>  schoolName.includes(needle)) != undefined;\r\n    if (options.myAcademies === \"\") {\r\n        isMyAcademy = true;\r\n    }\r\n    if (isMyAcademy || getGlobalSettings().globalHide === true || options.markOtherAcademies === false) {\r\n        document.body.classList.remove(\"otherSchool\");\r\n    } else {\r\n        document.body.classList.add(\"otherSchool\");\r\n    }\r\n}", "import * as def from \"../def\";\r\nimport {createValidId, findSchooljaar, getSchoolIdString} from \"../globals\";\r\nimport {VakLeraar} from \"./scrapeUren\";\r\nimport {TableDef} from \"../table/tableDef\";\r\nimport {cloud} from \"../cloud\";\r\nimport {UrenData} from \"./urenData\";\r\n\r\nlet isUpdatePaused = true;\r\nlet cellChanged = false;\r\nlet popoverIndex = 1;\r\n\r\nlet editableObserver = new MutationObserver((mutationList, observer) => editableObserverCallback(mutationList, observer));\r\n\r\nsetInterval(onTimer, 5000);\r\nfunction onTimer() {\r\n    checkAndUpdate(globalUrenData);\r\n}\r\nlet globalUrenData: UrenData = undefined;\r\n\r\ninterface ColDef {\r\n    label: string,\r\n    classList: string[],\r\n    factor: number,\r\n    getText?: (ctx: Context) => string,\r\n    getValue?: (ctx: Context) => number,\r\n    totals?: boolean,\r\n    calculated?: boolean,\r\n    fill?:(ctx: Context) => (number|undefined),\r\n    colIndex?: number,\r\n    total?: number\r\n}\r\n\r\nlet colDefsArray: {key: string, def: ColDef}[] = [\r\n    {key:\"vak\", def: { label:\"Vak\", classList: [], factor: 1.0, getText: (ctx) => ctx.vakLeraar.vak}},\r\n    {key:\"leraar\", def: { label:\"Leraar\", classList: [], factor: 1.0, getText: (ctx) => ctx.vakLeraar.leraar.replaceAll(\"{\", \"\").replaceAll(\"}\", \"\")}},\r\n    {key:\"grjr2_1\", def: { label:\"2.1\", classList: [], factor: 1/4, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr2_2\", def: { label:\"2.2\", classList: [], factor: 1/4, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr2_3\", def: { label:\"2.3\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr2_4\", def: { label:\"2.4\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_2e_gr\", def: { label:\"uren\\n2e gr\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr2_1\", \"grjr2_2\", \"grjr2_3\", \"grjr2_4\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"grjr3_1\", def: { label:\"3.1\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr3_2\", def: { label:\"3.2\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr3_3\", def: { label:\"3.3\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_3e_gr\", def: { label:\"uren\\n3e gr\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr3_1\", \"grjr3_2\", \"grjr3_3\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"grjr4_1\", def: { label:\"4.1\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr4_2\", def: { label:\"4.2\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr4_3\", def: { label:\"4.3\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_4e_gr\", def: { label:\"uren\\n4e gr\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr4_1\", \"grjr4_2\", \"grjr4_3\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"grjr_s_1\", def: { label:\"S.1\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr_s_2\", def: { label:\"S.2\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_spec\", def: { label:\"uren\\nspec\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr_s_1\", \"grjr_s_2\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"aantal_lln\", def: { label:\"aantal\\nlln\", classList: [\"blueish\"], factor: 1.0, getValue: (ctx) => calcUren(ctx, [\"grjr2_1\", \"grjr2_2\", \"grjr2_3\", \"grjr2_4\", \"grjr3_1\", \"grjr3_2\", \"grjr3_3\", \"grjr4_1\", \"grjr4_2\", \"grjr4_3\", \"grjr_s_1\", \"grjr_s_2\"]), totals:true, calculated:true}},\r\n    {key:\"tot_uren\", def: { label:\"tot\\nuren\", classList: [\"creme\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr2_1\", \"grjr2_2\", \"grjr2_3\", \"grjr2_4\", \"grjr3_1\", \"grjr3_2\", \"grjr3_3\", \"grjr4_1\", \"grjr4_2\", \"grjr4_3\", \"grjr_s_1\", \"grjr_s_2\"]), totals:true, calculated:true}},\r\n    {key:\"over\", def: { label:\"Over\", classList: [], factor: 1.0, getValue: (ctx) => calcOver(ctx), calculated:true}},\r\n];\r\n\r\nlet colDefs = new Map(colDefsArray.map((def) => [def.key, def.def]));\r\n\r\nfunction getYearKeys(year: number) {\r\n    let yrPrev = year - 2000 - 1;\r\n    let yrNow = yrPrev + 1;\r\n    let yrNext = yrPrev + 2;\r\n    let keyPrev = `uren_${yrPrev}_${yrNow}`;\r\n    let keyNext = `uren_${yrNow}_${yrNext}`;\r\n    return {yrPrev, yrNow, yrNext, keyPrev, keyNext};\r\n}\r\n\r\nfunction updateColDefs(year: number) {\r\n    let {yrPrev, yrNow, yrNext, keyPrev, keyNext} = getYearKeys(year);\r\n    let yearColDefs = new Map();\r\n    yearColDefs.set(keyPrev, { label:`Uren\\n${yrPrev}-${yrNow}`, classList: [\"editable_number\"], factor: 1.0, getValue: (ctx) => parseInt(ctx.data.fromCloud.columnMap.get(`uren_${yrPrev}_${yrNow}`)?.get(ctx.vakLeraar.id)), totals:true});\r\n    yearColDefs.set(keyNext, { label:`Uren\\n${yrNow}-${yrNext}`, classList: [\"editable_number\"], factor: 1.0, getValue: (ctx) => parseInt(ctx.data.fromCloud.columnMap.get(`uren_${yrNow}_${yrNext}`)?.get(ctx.vakLeraar.id)), totals:true});\r\n    colDefs = new Map([...yearColDefs, ...new Map(colDefsArray.map((def) => [def.key, def.def]))]);\r\n    let idx = 0;\r\n    colDefs.forEach(colDef => {\r\n        colDef.colIndex = idx++;\r\n        colDef.total = 0;\r\n    });\r\n}\r\n\r\n\r\nfunction calcOver(ctx: Context) {\r\n    let totUren = getColValue(ctx, \"tot_uren\");\r\n    if (isNaN(totUren)) {\r\n        totUren = 0;\r\n    }\r\n    let urenJaar = getColValue(ctx, ctx.yearKey);\r\n    if (isNaN(urenJaar)) {\r\n        urenJaar = 0;\r\n    }\r\n    return urenJaar - totUren;\r\n\r\n}\r\n\r\ninterface Context {\r\n    vakLeraar: VakLeraar;\r\n    colKey: string;\r\n    tr: HTMLTableRowElement,\r\n    td: HTMLTableCellElement,\r\n    colDef: ColDef,\r\n    colDefs: Map<string, ColDef>,\r\n    data: UrenData,\r\n    yearKey: string\r\n}\r\n\r\nfunction getColValue(ctx: Context, colKey: string) {\r\n\r\n    let newCtx: Context = {...ctx};\r\n    newCtx.colKey = colKey;\r\n\r\n    newCtx.colDef = newCtx.colDefs.get(colKey);\r\n    return newCtx.colDef.getValue(newCtx);\r\n}\r\n\r\nfunction editableObserverCallback(mutationList: MutationRecord[], _observer: MutationObserver) {\r\n    if (mutationList.every((mut) => mut.type === \"attributes\"))\r\n        return; //ignore attrubute changes.\r\n    cellChanged = true;\r\n}\r\n\r\nexport function getUrenVakLeraarFileName() {\r\n    return getSchoolIdString() + \"_\" + \"uren_vak_lk_\" + findSchooljaar().replace(\"-\", \"_\") + \".json\";\r\n}\r\n\r\nfunction checkAndUpdate(urenData: UrenData) {\r\n    if(isUpdatePaused) {\r\n        return;\r\n    }\r\n    if(!cellChanged) {\r\n        return;\r\n    }\r\n    cellChanged = false;\r\n    let colKeys = getYearKeys(urenData.year);\r\n    updateCloudColumnMapFromScreen(urenData, colKeys.keyPrev);\r\n    updateCloudColumnMapFromScreen(urenData, colKeys.keyNext);\r\n\r\n    cloud.json.upload(\r\n        getUrenVakLeraarFileName(),\r\n        urenData.fromCloud.toJson(colKeys.keyPrev, colKeys.keyNext))\r\n        .then(r => { console.log(\"Uploaded uren.\")});\r\n\r\n    recalculate(urenData);\r\n}\r\n\r\nfunction updateCloudColumnMapFromScreen(urenData: UrenData, colKey: string) {\r\n    let colDef = colDefs.get(colKey);\r\n    for(let tr of document.querySelectorAll(\"#\"+def.COUNT_TABLE_ID+\" tbody tr\")) {\r\n        urenData.fromCloud.columnMap.get(colKey).set(tr.id, tr.children[colDef.colIndex].textContent);\r\n    }\r\n}\r\n\r\nfunction observeTable(observe: boolean) {\r\n    const config = {\r\n        attributes: true,\r\n        childList: true,\r\n        subtree: true,\r\n        characterData: true\r\n    };\r\n    let table = document.getElementById(def.COUNT_TABLE_ID);\r\n    if(observe) {\r\n        editableObserver.takeRecords(); //clear\r\n        editableObserver.observe(table, config);\r\n    } else {\r\n        editableObserver.disconnect();\r\n    }\r\n}\r\n\r\nfunction fillCell(ctx: Context): (number| undefined) {\r\n    if(ctx.colDef.getText) {\r\n        ctx.td.innerText = ctx.colDef.getText(ctx);\r\n        return undefined;\r\n    }\r\n    if (ctx.colDef.fill) {\r\n        ctx.colDef.fill(ctx);\r\n        return undefined;\r\n    }\r\n    let theValue = ctx.colDef.getValue(ctx);\r\n    ctx.td.innerText = trimNumber(theValue);\r\n    return theValue;\r\n}\r\n\r\nfunction calculateAndSumCell(colDef: ColDef, ctx: Context, onlyRecalc: boolean) {\r\n    let theValue = undefined;\r\n    if (colDef.calculated || !onlyRecalc)\r\n        theValue = fillCell(ctx);\r\n    if (colDef.totals) {\r\n        if (!theValue)\r\n            theValue = colDef.getValue(ctx); //get value when not a calculated value.\r\n        if (theValue)\r\n            colDef.total += theValue;\r\n    }\r\n}\r\n\r\nfunction clearTotals() {\r\n    for (let [_colKey, colDef] of colDefs) {\r\n        if (colDef.totals) {\r\n            colDef.total = 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction recalculate(urenData: UrenData) {\r\n    isUpdatePaused = true;\r\n    observeTable(false);\r\n    clearTotals();\r\n\r\n    let yearKey = getYearKeys(urenData.year).keyNext;\r\n\r\n    for (let [vakLeraarKey, vakLeraar] of urenData.vakLeraars) {\r\n        let tr = document.getElementById(createValidId(vakLeraarKey)) as HTMLTableRowElement;\r\n        for(let [colKey, colDef] of colDefs) {\r\n            let td = tr.children[colDef.colIndex] as HTMLTableCellElement;\r\n            let ctx: Context = {td, colKey, colDef, vakLeraar, tr, colDefs, data: urenData, yearKey };\r\n            calculateAndSumCell(colDef, ctx, true);\r\n        }\r\n    }\r\n    let trTotal = document.getElementById(\"__totals__\");\r\n    for(let [_colKey, colDef] of colDefs) {\r\n        let td = trTotal.children[colDef.colIndex] as HTMLTableCellElement;\r\n        if(colDef.totals) {\r\n            td.innerText = trimNumber(colDef.total);\r\n        }\r\n    }\r\n\r\n    cellChanged = false;\r\n    isUpdatePaused = false;\r\n    observeTable(true);\r\n}\r\n\r\nexport function buildTable(urenData: UrenData, tableDef: TableDef) {\r\n    isUpdatePaused = true;\r\n    globalUrenData = urenData;\r\n    let table = document.createElement(\"table\");\r\n    tableDef.tableRef.getOrgTable().insertAdjacentElement(\"afterend\", table);\r\n    table.id = def.COUNT_TABLE_ID;\r\n    table.classList.add(\"canSort\");\r\n    updateColDefs(urenData.year);\r\n    fillTableHeader(table, urenData.vakLeraars);\r\n    let tbody = document.createElement(\"tbody\");\r\n    table.appendChild(tbody);\r\n\r\n    let lastVak = \"\";\r\n    let rowClass = undefined;\r\n    clearTotals();\r\n\r\n    let yearKey = getYearKeys(urenData.year).keyNext;\r\n\r\n    for(let [vakLeraarKey, vakLeraar] of urenData.vakLeraars) {\r\n        let tr = document.createElement(\"tr\");\r\n        tbody.appendChild(tr);\r\n        tr.dataset[\"vak_leraar\"] = vakLeraarKey;\r\n        tr.id = createValidId(vakLeraarKey);\r\n        if(vakLeraar.vak !== lastVak) {\r\n            rowClass = (rowClass === \"\"? \"darkRow\" : \"\");\r\n        }\r\n        if(rowClass !== \"\")\r\n            tr.classList.add(rowClass);\r\n        lastVak = vakLeraar.vak;\r\n        for(let [colKey, colDef] of colDefs) {\r\n            let td = document.createElement(\"td\");\r\n            tr.appendChild(td);\r\n            td.classList.add(...colDef.classList);\r\n            let ctx = {td, colKey, colDef, vakLeraar, tr, colDefs, data: urenData, yearKey};\r\n            calculateAndSumCell(colDef, ctx, false);\r\n        }\r\n    }\r\n    let tFoot = document.createElement(\"tfoot\");\r\n    table.appendChild(tFoot);\r\n    tFoot.classList.add(\"separatorLine\");\r\n    let trTotal = document.createElement(\"tr\");\r\n    tFoot.appendChild(trTotal);\r\n    \r\n    trTotal.id = \"__totals__\";\r\n    for(let [_colKey, colDef] of colDefs) {\r\n        let td = document.createElement(\"td\") as HTMLTableCellElement;\r\n        trTotal.appendChild(td);\r\n        if(colDef.totals) {\r\n            td.innerText = trimNumber(colDef.total);\r\n        }\r\n    }\r\n\r\n    let editables = table.querySelectorAll(\"td.editable_number\");\r\n    editables.forEach((td) => td.setAttribute(\"contenteditable\", \"true\"));\r\n    observeTable(true);\r\n    isUpdatePaused = false;\r\n}\r\n\r\nfunction calcUren(ctx: Context, keys: string[]) {\r\n    let tot = 0;\r\n    for(let key of keys) {\r\n        let colDef = ctx.colDefs.get(key);\r\n        let cnt = ctx.vakLeraar.countMap.get(colDef.label).students.length;\r\n        tot += cnt;\r\n    }\r\n    return tot;\r\n}\r\n\r\nfunction calcUrenFactored(ctx: Context, keys: string[]) {\r\n    let tot = 0;\r\n    for(let key of keys) {\r\n        let colDef = ctx.colDefs.get(key);\r\n        let cnt = ctx.vakLeraar.countMap.get(colDef.label).students.length;\r\n        let factor = colDefs.get(key).factor;\r\n        tot += cnt * factor;\r\n    }\r\n    return tot;\r\n}\r\n\r\nfunction trimNumber(num: number) {\r\n    if(isNaN(num))\r\n        return \"\";\r\n    // @ts-ignore `num` is checked too be number\r\n    return (Math.round(num * 100) / 100).toFixed(2).replace(\".00\", \"\");\r\n}\r\n\r\nfunction fillTableHeader(table: HTMLTableElement, _vakLeraars: Map<string, VakLeraar>) {\r\n    let thead = document.createElement(\"thead\");\r\n    table.appendChild(thead);\r\n    let tr_head = document.createElement(\"tr\");\r\n    thead.appendChild(tr_head);\r\n    let th = document.createElement(\"th\");\r\n    for (let colDef of colDefs.values()) {\r\n        th = document.createElement(\"th\");\r\n        tr_head.appendChild(th);\r\n        th.innerText = colDef.label;\r\n    }\r\n}\r\n\r\nfunction fillGraadCell(ctx: Context) {\r\n    let graadJaar = ctx.vakLeraar.countMap.get(ctx.colDef.label);\r\n    let button = document.createElement(\"button\") as HTMLButtonElement;\r\n    ctx.td.appendChild(button);\r\n    if(graadJaar.count === 0)\r\n        return graadJaar.count;\r\n    button.innerText = graadJaar.count.toString();\r\n    popoverIndex++;\r\n    button.setAttribute(\"popovertarget\", \"students_\" + popoverIndex);\r\n    let popoverDiv = document.createElement(\"div\");\r\n    ctx.td.appendChild(popoverDiv);\r\n    popoverDiv.id = \"students_\" + popoverIndex;\r\n    popoverDiv.setAttribute(\"popover\", \"auto\");\r\n    for (let student of graadJaar.students) {\r\n        let studentDiv = document.createElement(\"div\");\r\n        popoverDiv.appendChild(studentDiv);\r\n        studentDiv.innerText = student.voornaam + \" \" + student.naam;\r\n        const anchor = document.createElement(\"a\");\r\n        studentDiv.appendChild(anchor);\r\n        anchor.href = \"/?#leerlingen-leerling?id=\" + student.id + \",tab=inschrijvingen\";\r\n        anchor.classList.add(\"pl-1\");\r\n        anchor.dataset.studentid = student.id.toString();\r\n\r\n        const iTag = document.createElement(\"i\");\r\n        anchor.appendChild(iTag);\r\n        iTag.classList.add('fas', \"fa-user-alt\");\r\n    }\r\n    return graadJaar.count;\r\n}\r\n", "import {createValidId} from \"../globals\";\r\nimport {TableDef} from \"../table/tableDef\";\r\nimport {NamedCellTablePageHandler} from \"../pageHandlers\";\r\nimport {StudentInfo} from \"../lessen/scrape\";\r\n\r\nexport interface CountStudentsPerJaar {\r\n    count: number,\r\n    students: StudentInfo[]\r\n}\r\nexport interface VakLeraar {\r\n    vak: string,\r\n    leraar: string,\r\n    id: string,\r\n    countMap: Map<string, CountStudentsPerJaar>\r\n}\r\n\r\nexport function scrapeStudent(tableDef: TableDef, tr: HTMLTableRowElement, collection: any) {\r\n    let student: StudentInfo = new StudentInfo();\r\n    student.naam = (tableDef.pageHandler as NamedCellTablePageHandler).getColumnText(tr, \"naam\");\r\n    student.voornaam = (tableDef.pageHandler as NamedCellTablePageHandler).getColumnText(tr,\"voornaam\");\r\n    student.id = parseInt(tr.attributes['onclick'].value.replace(\"showView('leerlingen-leerling', '', 'id=\", \"\"));\r\n    let leraar = (tableDef.pageHandler as NamedCellTablePageHandler).getColumnText(tr,\"klasleerkracht\");\r\n    let vak = (tableDef.pageHandler as NamedCellTablePageHandler).getColumnText(tr,\"vak\");\r\n    let graadLeerjaar = (tableDef.pageHandler as NamedCellTablePageHandler).getColumnText(tr,\"graad + leerjaar\");\r\n\r\n    if (leraar === \"\") leraar = \"{nieuw}\";\r\n\r\n    if (!isInstrument(vak)) {\r\n        console.error(\"vak is geen instrument!!!\");\r\n        return false;\r\n    }\r\n    let vakLeraarKey = translateVak(vak) + \"_\" + leraar;\r\n\r\n    if (!collection.has(vakLeraarKey)) {\r\n        let countMap: Map<string, CountStudentsPerJaar> = new Map();\r\n        countMap.set(\"2.1\", {count: 0, students: []});\r\n        countMap.set(\"2.2\", {count: 0, students: []});\r\n        countMap.set(\"2.3\", {count: 0, students: []});\r\n        countMap.set(\"2.4\", {count: 0, students: []});\r\n        countMap.set(\"3.1\", {count: 0, students: []});\r\n        countMap.set(\"3.2\", {count: 0, students: []});\r\n        countMap.set(\"3.3\", {count: 0, students: []});\r\n        countMap.set(\"4.1\", {count: 0, students: []});\r\n        countMap.set(\"4.2\", {count: 0, students: []});\r\n        countMap.set(\"4.3\", {count: 0, students: []});\r\n        countMap.set(\"S.1\", {count: 0, students: []});\r\n        countMap.set(\"S.2\", {count: 0, students: []});\r\n        let vakLeraarObject = {\r\n            vak: translateVak(vak),\r\n            leraar: leraar,\r\n            id: createValidId(vakLeraarKey),\r\n            countMap: countMap\r\n        };\r\n        collection.set(vakLeraarKey, vakLeraarObject);\r\n    }\r\n    let vakLeraar = collection.get(vakLeraarKey);\r\n    if (!vakLeraar.countMap.has(graadLeerjaar)) {\r\n        vakLeraar.countMap.set(graadLeerjaar, {count: 0, students: []});\r\n    }\r\n    let graadLeraarObject = collection.get(vakLeraarKey).countMap.get(graadLeerjaar);\r\n    graadLeraarObject.count += 1;\r\n    graadLeraarObject.students.push(student);\r\n    return true;\r\n}\r\n\r\nfunction isInstrument(vak: string) {\r\n    switch (vak) {\r\n        case \"Muziekatelier\": \r\n        case \"Groepsmusiceren (jazz pop rock)\": \r\n        case \"Groepsmusiceren (klassiek)\": \r\n        case \"Harmonielab\": \r\n        case \"Instrumentinitiatie - elke trimester een ander instrument\": \r\n        case \"instrumentinitiatie \u2013 piano het hele jaar\": \r\n        case \"Klanklab elektronische muziek\": \r\n        case \"Muziektheorie\": \r\n        case \"Koor (jazz pop rock)\": \r\n        case \"Koor (musical)\": \r\n        case \"Arrangeren\": \r\n        case \"Groepsmusiceren (opera)\": \r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction translateVak(vak: string) {\r\n    function renameInstrument(instrument: string) {\r\n        return instrument\r\n            .replace(\"Basklarinet\", \"Klarinet\")\r\n            .replace(\"Altfluit\", \"Dwarsfluit\")\r\n            .replace(\"Piccolo\", \"Dwarsfluit\")\r\n\r\n            .replace(\"Trompet\", \"Koper\") //keept this one on top because of the next line!\r\n            .replace(\"Koper (jazz pop rock)\", \"Trompet (jazz pop rock)\")\r\n            .replace(\"Hoorn\", \"Koper\")\r\n            .replace(\"Trombone\", \"Koper\")\r\n            .replace(\"Bugel\", \"Koper\")\r\n            .replace(\"Eufonium\", \"Koper\")\r\n\r\n            .replace(\"Altsaxofoon\", \"Saxofoon\")\r\n            .replace(\"Sopraansaxofoon\", \"Saxofoon\")\r\n            .replace(\"Tenorsaxofoon\", \"Saxofoon\");\r\n    }\r\n\r\n    if(vak.includes(\"(jazz pop rock)\")) {\r\n        return \"JPR \" + renameInstrument(vak).replace(\"(jazz pop rock)\", \"\");\r\n    }\r\n    if(vak.includes(\"musical\")) {\r\n        return \"M \" + renameInstrument(vak).replace(\"(musical)\", \"\");\r\n    }\r\n    if(vak.includes(\"wereldmuziek\")) {\r\n        return \"WM \" + renameInstrument(vak).replace(\"(wereldmuziek)\", \"\");\r\n    }\r\n\r\n\r\n    return \"K \" + renameInstrument(vak);\r\n}", "export class TableNavigation {\r\n    readonly step: number;\r\n    private readonly maxCount: number;\r\n    private div: HTMLDivElement;\r\n\r\n    constructor(step: number, maxCount: number, div: HTMLDivElement/*, navigationData: any*/) {\r\n        this.step = step;\r\n        this.maxCount = maxCount;\r\n        this.div = div;\r\n    }\r\n\r\n    steps() {\r\n        return Math.ceil(this.maxCount / this.step)\r\n    }\r\n\r\n    isOnePage() {\r\n        return this.step >= this.maxCount;\r\n    }\r\n}\r\n\r\n/* possible ranges of numbers found:\r\n*/\r\nexport function findFirstNavigation(element?: HTMLElement) {\r\n    element = element?? document.body;\r\n    //get all possible numbers from the navigation bar and sort them to get the result above.\r\n    let buttonPagination = element.querySelector(\"button.datatable-paging-numbers\") as HTMLButtonElement;\r\n    if(!buttonPagination)\r\n        return undefined;\r\n    let buttonContainer = buttonPagination.closest(\"div\") as HTMLDivElement;\r\n    if(!buttonContainer) {\r\n        return undefined;\r\n    }\r\n    let rx = /(\\d*) tot (\\d*) van (\\d*)/;\r\n    let matches = buttonPagination.innerText.match(rx);\r\n    let buttons = buttonContainer.querySelectorAll(\"button.btn-secondary\");\r\n    let offsets = Array.from(buttons)\r\n        .filter((btn) => btn.attributes[\"onclick\"]?.value.includes(\"goto(\"))\r\n        .filter((btn: HTMLElement) => !btn.querySelector(\"i.fa-fast-backward\")) //ignore the value of the fast backward button, which is always 0\r\n        .map((btn: HTMLElement) => getGotoNumber(btn.attributes[\"onclick\"].value));\r\n    let numbers = matches.slice(1).map((txt) => parseInt(txt));\r\n    numbers[0] = numbers[0]-1;//convert 1-based user index to 0-based offset.\r\n    numbers = numbers.concat(offsets);\r\n    numbers.sort((a, b) => a - b);\r\n    numbers = [...new Set(numbers)];\r\n    return new TableNavigation(numbers[1] - numbers[0], numbers.pop(), buttonContainer);\r\n}\r\n\r\nfunction getGotoNumber(functionCall: string) {\r\n    return parseInt(functionCall.substring(functionCall.indexOf(\"goto(\") + 5));\r\n}", "import * as def from \"./def\";\r\n\r\nexport class ProgressBar {\r\n    private barElement: HTMLElement;\r\n    private containerElement: HTMLElement;\r\n    private readonly maxCount: number;\r\n    private count: number;\r\n\r\n    constructor(containerElement: HTMLElement, barElement: HTMLElement, maxCount: number) {\r\n        this.barElement = barElement;\r\n        this.containerElement = containerElement;\r\n        this.maxCount = maxCount;\r\n        this.count = 0;\r\n        for (let i = 0; i < maxCount; i++) {\r\n            let block = document.createElement(\"div\");\r\n            barElement.appendChild(block);\r\n            block.classList.add(\"progressBlock\");\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.containerElement.style.visibility = \"visible\";\r\n        this.next();\r\n    }\r\n\r\n    stop() {\r\n        this.containerElement.style.visibility = \"hidden\";\r\n    }\r\n\r\n    next() {\r\n        if (this.count >= this.maxCount)\r\n            return false;\r\n        this.barElement.children[this.count].classList.remove(\"iddle\", \"loaded\");\r\n        this.barElement.children[this.count].classList.add(\"loading\");\r\n        for (let i = 0; i < this.count; i++) {\r\n            this.barElement.children[i].classList.remove(\"iddle\", \"loading\");\r\n            this.barElement.children[i].classList.add(\"loaded\");\r\n        }\r\n        for (let i = this.count + 1; i < this.maxCount; i++) {\r\n            this.barElement.children[i].classList.remove(\"loaded\", \"loading\");\r\n            this.barElement.children[i].classList.add(\"iddle\");\r\n        }\r\n        this.count++;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function insertProgressBar(container: HTMLElement, steps: number, text: string = \"\") {\r\n    let divProgressLine = document.getElementById(def.PROGRESS_BAR_ID);\r\n    if(divProgressLine) {\r\n        divProgressLine.innerText = \"\";\r\n    } else {\r\n        divProgressLine = document.createElement(\"div\");\r\n        container.append(divProgressLine);\r\n        divProgressLine.classList.add(\"infoLine\");\r\n        divProgressLine.id = def.PROGRESS_BAR_ID;\r\n    }\r\n    let divProgressText = document.createElement(\"div\");\r\n    divProgressLine.appendChild(divProgressText);\r\n    divProgressText.classList.add(\"progressText\");\r\n    divProgressText.innerText = text;\r\n    let divProgressBar = document.createElement(\"div\");\r\n    divProgressLine.appendChild(divProgressBar);\r\n    divProgressBar.classList.add(\"progressBar\");\r\n    return new ProgressBar(divProgressLine, divProgressBar, steps);\r\n}", "import {PageHandler} from \"../pageHandlers\";\r\nimport {findFirstNavigation, TableNavigation} from \"./tableNavigation\";\r\nimport {insertProgressBar, ProgressBar} from \"../progressBar\";\r\nimport * as def from \"../def\";\r\nimport {db3, millisToString} from \"../globals\";\r\n\r\nexport class TableRef {\r\n    htmlTableId: string;\r\n    buildFetchUrl: (offset: number) => string;\r\n    navigationData: TableNavigation;\r\n\r\n    constructor(htmlTableId: string, navigationData: TableNavigation, buildFetchUrl: (offset: number) => string) {\r\n        this.htmlTableId = htmlTableId;\r\n        this.buildFetchUrl = buildFetchUrl;\r\n        this.navigationData = navigationData;\r\n    }\r\n\r\n    getOrgTable() {\r\n        return document.getElementById(this.htmlTableId) as HTMLTableElement;\r\n    }\r\n\r\n    createElementAboveTable(element: string): HTMLElement {\r\n        let el = document.createElement(element);\r\n        this.getOrgTable().insertAdjacentElement(\"beforebegin\", el);\r\n        return el;\r\n    }\r\n}\r\n\r\nexport function findTableRefInCode() {\r\n    let foundTableRef = findTable();\r\n    if(!foundTableRef)\r\n        return undefined;\r\n\r\n    let buildFetchUrl = (offset: number) => `/views/ui/datatable.php?id=${foundTableRef.viewId}&start=${offset}&aantal=0`;\r\n\r\n    let navigation = findFirstNavigation();\r\n    if(!navigation)\r\n        return undefined;\r\n\r\n    return new TableRef( foundTableRef.tableId, navigation, buildFetchUrl)\r\n}\r\n\r\nfunction findTable() {\r\n    let table = document.querySelector(\"div.table-responsive > table\");\r\n    let tableId = table.id\r\n        .replace(\"table_\", \"\")\r\n        .replace(\"_table\", \"\");\r\n\r\n    let parentDiv = document.querySelector(\"div#\"+\"table_\"+tableId);\r\n    let scripts = Array.from(parentDiv.querySelectorAll(\"script\")).map((script) => script.text).join(\"\\n\");\r\n    let goto = scripts.split(\"_goto(\")[1];\r\n    let func = goto.split(/ function *\\w/)[0];\r\n\r\n    let viewId = / *datatable_id *= *'(.*)'/.exec(func)[1];\r\n    let url = /_table'\\).load\\('(.*?)\\?id='\\s*\\+\\s*datatable_id\\s*\\+\\s*'&start='\\s*\\+\\s*start/.exec(func)[1];\r\n    //if we got so far, we can be sure this table is a standard one.\r\n    return {\r\n        tableId: table.id,\r\n        viewId,\r\n        url\r\n    };\r\n}\r\n\r\nexport type CalculateTableCheckSumHandler = (tableDef: TableDef) => string;\r\n\r\nexport class TableDef {\r\n    tableRef: TableRef;\r\n    pageHandler: PageHandler;\r\n    parallelData = undefined;\r\n    calculateTableCheckSum: CalculateTableCheckSumHandler;\r\n    isUsingCached = false;\r\n    divInfoContainer: HTMLDivElement;\r\n    shadowTableDate: Date;\r\n    private tempMessage = \"\";\r\n\r\n    constructor(tableRef: TableRef, pageHandler: PageHandler, calculateTableCheckSum: CalculateTableCheckSumHandler) {\r\n        this.tableRef = tableRef;\r\n        this.pageHandler = pageHandler;\r\n        if(!calculateTableCheckSum)\r\n            throw (\"Tablechecksum required.\");\r\n        this.calculateTableCheckSum = calculateTableCheckSum;\r\n    }\r\n\r\n    clearCache() {\r\n        db3(`Clear cache for ${this.tableRef.htmlTableId}.`);\r\n        window.sessionStorage.removeItem(this.getCacheId());\r\n        window.sessionStorage.removeItem(this.getCacheId()+ def.CACHE_DATE_SUFFIX);\r\n    }\r\n\r\n    loadFromCache() {\r\n        if(this.tableRef.navigationData.isOnePage())\r\n            return null;\r\n\r\n        db3(`Loading from cache: ${this.getCacheId()}.`);\r\n        let text =  window.sessionStorage.getItem(this.getCacheId());\r\n        let dateString = window.sessionStorage.getItem(this.getCacheId() + def.CACHE_DATE_SUFFIX);\r\n        if(!text)\r\n            return undefined;\r\n        return {\r\n            text,\r\n            date: new Date(dateString)\r\n        };\r\n    }\r\n\r\n    getCacheId() {\r\n        let checksum = \"\";\r\n        if (this.calculateTableCheckSum)\r\n            checksum = \"__\" + this.calculateTableCheckSum(this);\r\n        let id = this.tableRef.htmlTableId + checksum;\r\n        return id.replaceAll(/\\s/g, \"\");\r\n    }\r\n\r\n\r\n    setupInfoBar() {\r\n        if(!this.divInfoContainer) {\r\n            this.divInfoContainer = this.tableRef.createElementAboveTable(\"div\") as HTMLDivElement;\r\n        }\r\n        this.divInfoContainer.classList.add(\"infoLine\");\r\n    }\r\n\r\n    clearInfoBar() {\r\n        this.divInfoContainer.innerHTML = \"\";\r\n    }\r\n\r\n    updateInfoBar() {\r\n        this.updateCacheInfo();\r\n        this.#updateTempMessage();\r\n        //...update other info...\r\n    }\r\n\r\n    setTempMessage(msg: string) {\r\n        this.tempMessage = msg;\r\n        this.#updateTempMessage();\r\n        setTimeout(this.clearTempMessage.bind(this), 4000);\r\n    }\r\n\r\n    clearTempMessage() {\r\n        this.tempMessage = \"\";\r\n        this.#updateTempMessage();\r\n    }\r\n\r\n    #updateTempMessage() {\r\n        let p = document.getElementById(def.TEMP_MSG_ID);\r\n        if(this.tempMessage === \"\") {\r\n            if(p) p.remove();\r\n            return;\r\n        }\r\n        if(!p) {\r\n            p = document.createElement(\"p\");\r\n            this.divInfoContainer.appendChild(p);\r\n            p.classList.add(\"tempMessage\");\r\n            p.id = def.TEMP_MSG_ID;\r\n        }\r\n        p.innerHTML = this.tempMessage;\r\n    }\r\n\r\n    clearCacheInfo() {\r\n        document.getElementById(def.CACHE_INFO_ID)?.remove();\r\n    }\r\n\r\n    updateCacheInfo() {\r\n        let p = document.getElementById(def.CACHE_INFO_ID);\r\n        if(!this.isUsingCached) {\r\n            if(p) p.remove();\r\n            return;\r\n        }\r\n\r\n        if(!p) {\r\n            p = document.createElement(\"p\");\r\n            this.divInfoContainer.appendChild(p);\r\n            p.classList.add(\"cacheInfo\");\r\n            p.id = def.CACHE_INFO_ID;\r\n        }\r\n        p.innerHTML = `Gegevens uit cache, ${millisToString((new Date()).getTime()-this.shadowTableDate.getTime())} oud. `;\r\n        let a = document.createElement(\"a\");\r\n        p.appendChild(a);\r\n        a.innerHTML = \"refresh\";\r\n        a.href=\"#\";\r\n        a.onclick = (e ) => {\r\n            e.preventDefault();\r\n            this.clearCache();\r\n            // noinspection JSIgnoredPromiseFromCall\r\n            this.getTableData();\r\n            return true;\r\n        }\r\n    }\r\n    async getTableData(parallelAsyncFunction?: (() => Promise<any>)) {\r\n        this.setupInfoBar();\r\n        this.clearCacheInfo();\r\n        let cachedData = this.loadFromCache();\r\n\r\n        let fetchedTable = new FetchedTable(this);\r\n        if(cachedData) {\r\n            if(parallelAsyncFunction) {\r\n                this.parallelData = await parallelAsyncFunction();\r\n            }\r\n            fetchedTable.addPage(cachedData.text);\r\n            this.shadowTableDate = cachedData.date;\r\n            this.isUsingCached = true;\r\n            db3(`${this.tableRef.htmlTableId}: using cached data.`);\r\n            let rows = fetchedTable.getRows();\r\n            this.pageHandler.onPage?.(this, cachedData.text, fetchedTable);\r\n            this.pageHandler.onLoaded?.(fetchedTable);\r\n        } else {\r\n            this.isUsingCached = false;\r\n            let success = await this.#fetchPages(fetchedTable, parallelAsyncFunction);\r\n            if(!success)\r\n                return fetchedTable;\r\n            fetchedTable.saveToCache();\r\n            this.pageHandler.onLoaded?.(fetchedTable);\r\n        }\r\n        this.updateInfoBar();\r\n        return fetchedTable;\r\n    }\r\n\r\n    async #fetchPages(fetchedTable: FetchedTable, parallelAsyncFunction: () => Promise<any>) {\r\n        if (this.pageHandler.onBeforeLoading) {\r\n            if(!this.pageHandler.onBeforeLoading(this))\r\n                return false;\r\n        }\r\n        let progressBar = insertProgressBar(this.divInfoContainer, this.tableRef.navigationData.steps(), \"loading pages... \");\r\n        progressBar.start();\r\n        if (parallelAsyncFunction) {\r\n            let doubleResults = await Promise.all([\r\n                this.#doFetchAllPages(fetchedTable, progressBar),\r\n                parallelAsyncFunction()\r\n            ]);\r\n            this.parallelData = doubleResults[1];\r\n        } else {\r\n            await this.#doFetchAllPages(fetchedTable, progressBar);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async #doFetchAllPages(fetchedTable: FetchedTable, progressBar: ProgressBar) {\r\n        try {\r\n            while (true) {\r\n                console.log(\"fetching page \" + fetchedTable.getNextPageNumber());\r\n                let response = await fetch(this.tableRef.buildFetchUrl(fetchedTable.getNextOffset()));\r\n                let text = await response.text();\r\n                fetchedTable.addPage(text);\r\n                this.pageHandler.onPage?.(this, text, fetchedTable);\r\n                if (!progressBar.next())\r\n                    break;\r\n            }\r\n        } finally {\r\n            progressBar.stop();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class FetchedTable {\r\n    private shadowTableTemplate: HTMLTemplateElement;\r\n    tableDef: TableDef;\r\n    lastPageNumber: number;\r\n    lastPageStartRow: number;\r\n\r\n    constructor(tableDef: TableDef) {\r\n        this.tableDef = tableDef;\r\n        this.lastPageNumber = -1;\r\n        this.lastPageStartRow = 0;\r\n        this.shadowTableTemplate = document.createElement(\"template\");\r\n    }\r\n\r\n    getRows() {\r\n        let template = this.shadowTableTemplate;\r\n        return template.content.querySelectorAll(\"tbody tr:not(:has(i.fa-meh))\") as NodeListOf<HTMLTableRowElement>;\r\n    }\r\n\r\n    getRowsAsArray = () => Array.from(this.getRows());\r\n    getLastPageRows = () => this.getRowsAsArray().slice(this.lastPageStartRow);\r\n    getLastPageNumber = () => this.lastPageNumber;\r\n    getNextPageNumber = () => this.lastPageNumber+1;\r\n    getNextOffset = () => this.getNextPageNumber()*this.tableDef.tableRef.navigationData.step;\r\n    getTemplate = () => this.shadowTableTemplate;\r\n\r\n    saveToCache() {\r\n        db3(`Caching ${this.tableDef.getCacheId()}.`);\r\n        window.sessionStorage.setItem(this.tableDef.getCacheId(), this.shadowTableTemplate.innerHTML);\r\n        window.sessionStorage.setItem(this.tableDef.getCacheId()+ def.CACHE_DATE_SUFFIX, (new Date()).toJSON());\r\n    }\r\n\r\n    addPage(text: string) {\r\n        let pageTemplate: HTMLTemplateElement;\r\n        pageTemplate = document.createElement('template');\r\n        pageTemplate.innerHTML = text;\r\n        let rows = pageTemplate.content.querySelectorAll(\"tbody > tr\") as NodeListOf<HTMLTableRowElement>;\r\n\r\n        this.lastPageStartRow = this.getRows().length;\r\n        if(this.lastPageNumber === -1)\r\n            this.shadowTableTemplate.innerHTML = text; //to create the <table> and <tbody> and such.\r\n        else\r\n            this.shadowTableTemplate.content.querySelector(\"tbody\").append(...rows);\r\n        this.lastPageNumber++;\r\n    }\r\n\r\n}\r\n\r\n\r\n", "export async function fetchVakken(clear: boolean, schooljaar: string) {\r\n    if (clear) {\r\n        await sendClearWerklijst();\r\n    }\r\n    await sendAddCriterium(schooljaar, \"Vak\");\r\n    let text = await fetchCritera(schooljaar);\r\n    const template = document.createElement('template');\r\n    template.innerHTML = text;\r\n    let vakken = template.content.querySelectorAll(\"#form_field_leerling_werklijst_criterium_vak option\");\r\n    return Array.from(vakken).map((vak: HTMLOptionElement) => [vak.label, vak.value]);\r\n}\r\n\r\nexport async function fetchCritera(schoolYear: string) {\r\n    return (await fetch(\"https://administratie.dko3.cloud/views/leerlingen/werklijst/index.criteria.php?schooljaar=\" + schoolYear, {\r\n        method: \"GET\"\r\n    })).text();\r\n}\r\n\r\nasync function sendAddCriterium(schoolYear: string, criterium: string) {\r\n    const formData = new FormData();\r\n    formData.append(`criterium`, criterium);\r\n    formData.append(`schooljaar`, schoolYear);\r\n    await fetch(\"https://administratie.dko3.cloud/views/leerlingen/werklijst/index.criteria.session_add.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}\r\n\r\nexport async function sendClearWerklijst() {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"session\", \"leerlingen_werklijst\");\r\n\r\n    await fetch(\"/views/util/clear_session.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n\r\n    //needed to prefill the default fields.\r\n    await fetch(\"views/leerlingen/werklijst/index.velden.php\", {\r\n        method: \"GET\"\r\n    });\r\n}\r\n\r\nexport async function sendCriteria(criteria: object) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"criteria\", JSON.stringify(criteria));\r\n    await fetch(\"/views/leerlingen/werklijst/index.criteria.session_reload.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}\r\n\r\nexport async function sendGrouping(grouping: string) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"groepering\", grouping);\r\n    await fetch(\"/views/leerlingen/werklijst/index.groeperen.session_add.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}\r\n\r\nexport async function sendFields(fields: { value: string, text: string }[]) {\r\n    const formData = new FormData();\r\n\r\n    let fieldCnt = 0;\r\n    for (let field of fields) {\r\n        formData.append(`velden[${fieldCnt}][value]`, field.value);\r\n        formData.append(`velden[${fieldCnt}][text]`, field.text);\r\n        fieldCnt++;\r\n    }\r\n    await fetch(\"/views/leerlingen/werklijst/index.velden.session_add.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}", "import * as def from \"./def\";\r\n\r\nexport function clearPageState() {\r\n    sessionStorage.removeItem(def.STORAGE_PAGE_STATE_KEY);\r\n}\r\n\r\nexport function savePageState(state: PageState) {\r\n    sessionStorage.setItem(def.STORAGE_PAGE_STATE_KEY, JSON.stringify(state));\r\n}\r\n\r\nexport function getPageState(): PageState {\r\n    return JSON.parse(sessionStorage.getItem(def.STORAGE_PAGE_STATE_KEY));\r\n}\r\n\r\nfunction defaultPageState(pageName: PageName) {\r\n    if (pageName === PageName.Werklijst) {\r\n        let werklijstPageState: WerklijstPageState = {\r\n            goto: Goto.None,\r\n            pageName: PageName.Werklijst,\r\n            werklijstTableName: \"\"\r\n        }\r\n        return werklijstPageState;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function getPageStateOrDefault(pageName: PageName): PageState {\r\n    let pageState = JSON.parse(sessionStorage.getItem(def.STORAGE_PAGE_STATE_KEY));\r\n    if (pageState?.pageName === pageName)\r\n        return pageState;\r\n    else\r\n        return defaultPageState(pageName);\r\n}\r\n\r\nexport enum PageName {\r\n    Werklijst = \"Werklijst\",\r\n}\r\n\r\nexport enum Goto {\r\n    None = \"\",\r\n    Werklijst_uren_nextYear = \"Werklijst_uren_nextYear\",\r\n    Werklijst_uren_prevYear = \"Werklijst_uren_prevYear\",\r\n}\r\n\r\nexport interface PageState {\r\n    pageName: PageName;\r\n    goto: Goto;\r\n}\r\n\r\nexport interface WerklijstPageState extends PageState {\r\n    werklijstTableName: string;\r\n}", "import {fetchVakken, sendClearWerklijst, sendCriteria, sendFields, sendGrouping} from \"./criteria\";\r\nimport * as def from \"../def\";\r\nimport {getPageStateOrDefault, PageName, savePageState, WerklijstPageState} from \"../pageState\";\r\n\r\nexport let instrumentSet = new Set([\r\n    \"Accordeon\",\r\n    \"Altfluit\",\r\n    \"Althoorn\",\r\n    \"Altklarinet\",\r\n    \"Altsaxofoon\",\r\n    \"Altsaxofoon (jazz pop rock)\",\r\n    \"Altviool\",\r\n    \"Baglama/saz (wereldmuziek)\",\r\n    \"Bariton\",\r\n    \"Baritonsaxofoon\",\r\n    \"Baritonsaxofoon (jazz pop rock)\",\r\n    \"Basfluit\",\r\n    \"Basgitaar (jazz pop rock)\",\r\n    \"Basklarinet\",\r\n    \"Bastrombone\",\r\n    \"Bastuba\",\r\n    \"Bugel\",\r\n    \"Cello\",\r\n    \"Contrabas (jazz pop rock)\",\r\n    \"Contrabas (klassiek)\",\r\n    \"Dwarsfluit\",\r\n    \"Engelse hoorn\",\r\n    \"Eufonium\",\r\n    \"Fagot\",\r\n    \"Gitaar\",\r\n    \"Gitaar (jazz pop rock)\",\r\n    \"Harp\",\r\n    \"Hobo\",\r\n    \"Hoorn\",\r\n    \"Keyboard (jazz pop rock)\",\r\n    \"Klarinet\",\r\n    \"Kornet\",\r\n    \"Orgel\",\r\n    \"Piano\",\r\n    \"Piano (jazz pop rock)\",\r\n    \"Pianolab\",\r\n    \"Piccolo\",\r\n    \"Slagwerk\",\r\n    \"Slagwerk (jazz pop rock)\",\r\n    \"Sopraansaxofoon\",\r\n    \"Sopraansaxofoon (jazz pop rock)\",\r\n    \"Tenorsaxofoon\",\r\n    \"Tenorsaxofoon (jazz pop rock)\",\r\n    \"Trombone\",\r\n    \"Trompet\",\r\n    \"Trompet (jazz pop rock)\",\r\n    \"Ud (wereldmuziek)\",\r\n    \"Viool\",\r\n    \"Zang\",\r\n    \"Zang (jazz pop rock)\",\r\n    \"Zang (musical 2e graad)\",\r\n    \"Zang (musical)\",\r\n]);\r\n\r\nexport async function prefillInstruments(schooljaar: string) {\r\n    await sendClearWerklijst();\r\n    let vakken = await fetchVakken(false, schooljaar);\r\n    let instruments = vakken.filter((vak) => isInstrument(vak[0]));\r\n    let values = instruments.map(vak => parseInt(vak[1]));\r\n    let valueString = values.join();\r\n\r\n    let criteria = [\r\n        {\"criteria\": \"Schooljaar\", \"operator\": \"=\", \"values\": schooljaar},\r\n        {\"criteria\": \"Status\", \"operator\": \"=\", \"values\": \"12\"},\r\n        {\"criteria\": \"Uitschrijvingen\", \"operator\": \"=\", \"values\": \"0\"},\r\n        {\"criteria\": \"Domein\", \"operator\": \"=\", \"values\": \"3\"},\r\n        {\r\n            \"criteria\": \"Vak\",\r\n            \"operator\": \"=\",\r\n            \"values\": valueString\r\n        }\r\n    ];\r\n    await sendCriteria(criteria);\r\n    await sendFields([\r\n        {value: \"vak_naam\", text: \"vak\"},\r\n        {value: \"graad_leerjaar\", text: \"graad + leerjaar\"},\r\n        {value: \"klasleerkracht\", text: \"klasleerkracht\"}]\r\n    );\r\n    await sendGrouping(\"vak_id\");\r\n    let pageState = getPageStateOrDefault(PageName.Werklijst) as WerklijstPageState;\r\n    pageState.werklijstTableName = def.UREN_TABLE_STATE_NAME;\r\n    savePageState(pageState);\r\n    (document.querySelector(\"#btn_werklijst_maken\") as HTMLButtonElement).click();\r\n}\r\n\r\nfunction isInstrument(text: string) {\r\n    return instrumentSet.has(text);\r\n}", "import {FetchedTable, TableDef} from \"./table/tableDef\";\r\n\r\n/**\r\n * @returns `true` to continue, `false` to cancel further handling.\r\n */\r\ntype OnRowHandler = (tableDef: TableDef, rowObject: RowObject) => boolean;\r\n\r\ntype OnBeforeLoadingHandler = (tableDef: TableDef) => boolean;\r\ntype OnLoadedHandler = (fetchedTable: FetchedTable) => void;\r\ntype OnRequiredColumnsMissingHandler = (tableDef: TableDef) => void;\r\ntype OnPageHandler = (tableDef: TableDef, text: string, fetchedTable: FetchedTable) => void;\r\n\r\nexport interface PageHandler {\r\n    onPage: OnPageHandler;\r\n    onLoaded: OnLoadedHandler;\r\n    onBeforeLoading?: OnBeforeLoadingHandler; //if defined, must return TRUE for loading to proceed.\r\n}\r\n\r\nexport class RowObject {\r\n    tr: HTMLTableRowElement;\r\n    offset: number;\r\n    index: number;\r\n}\r\n\r\nexport class RowPageHandler implements PageHandler {\r\n    private readonly onRow: OnRowHandler;\r\n    onBeforeLoading?: OnBeforeLoadingHandler;\r\n    onLoaded: OnLoadedHandler;\r\n\r\n    constructor(onRow: OnRowHandler, onLoaded: OnLoadedHandler, onBeforeLoading: OnBeforeLoadingHandler) {\r\n        this.onRow = onRow;\r\n        this.onBeforeLoading = onBeforeLoading;\r\n        this.onLoaded = onLoaded;\r\n    }\r\n\r\n    onPage: OnPageHandler = (tableDef: TableDef, _text: string, fetchedTable) => {\r\n        if(!this.onRow)\r\n            return;\r\n        let index = 0;\r\n        let rows = fetchedTable.getLastPageRows();\r\n        for (let row of rows) {\r\n            let rowObject = new RowObject();\r\n            rowObject.tr = row;\r\n            rowObject.offset = fetchedTable.getLastPageNumber();\r\n            rowObject.index = index;\r\n            if (!this.onRow(tableDef, rowObject))\r\n                return;\r\n            index++;\r\n        }\r\n    }\r\n}\r\n\r\nexport class SimpleTableHandler implements PageHandler {\r\n    onBeforeLoading?: OnBeforeLoadingHandler;\r\n    onLoaded: OnLoadedHandler;\r\n    onPage: OnPageHandler;\r\n\r\n    constructor(onLoaded: OnLoadedHandler, onBeforeLoading: OnBeforeLoadingHandler) {\r\n        this.onBeforeLoading = onBeforeLoading;\r\n        this.onLoaded = onLoaded;\r\n        this.onPage = undefined;\r\n    }\r\n}\r\n\r\n/**\r\n * PageHandler with named column labels.\\\r\n * Params are:\r\n * @description\r\n *      * requiredHeaderLabels: array with labels of required columns.\r\n *      * onRow: function(rowObject, collection): a row handler that mainly provides a param `rowObject`, which has a member getColumnText(columnLabel)\r\n * @implements PageHandler: which requires member `onPage()`\r\n */\r\nexport class NamedCellTablePageHandler implements PageHandler {\r\n    private requiredHeaderLabels: string[];\r\n    onBeforeLoading?: OnBeforeLoadingHandler;\r\n    private headerIndices: Map<string, number>;\r\n    onLoaded: OnLoadedHandler;\r\n    onLoadedExternal: OnLoadedHandler;\r\n    onColumnsMissing: OnRequiredColumnsMissingHandler;\r\n    isValidPage: boolean;\r\n\r\n    constructor(requiredHeaderLabels: string[], onLoaded: OnLoadedHandler, onRequiredColumnsMissing: OnRequiredColumnsMissingHandler) {\r\n        this.requiredHeaderLabels = requiredHeaderLabels;\r\n        this.onLoaded = this.onLoadedAndCheck;\r\n        this.onLoadedExternal = onLoaded;\r\n        this.onColumnsMissing = onRequiredColumnsMissing;\r\n        this.headerIndices = undefined;\r\n        this.isValidPage = false;\r\n        this.onBeforeLoading = this.onBeforeLoadingHandler;\r\n    }\r\n\r\n    onLoadedAndCheck: OnLoadedHandler =  (fetchedTable: FetchedTable) => {\r\n        if(this.isValidPage)\r\n            this.onLoadedExternal(fetchedTable);\r\n        else\r\n            console.log(\"NamedCellPageHandler: Not calling OnLoaded handler because page is not valid.\")\r\n    }\r\n\r\n    onPage: OnPageHandler = (_tableDef: TableDef, _text: string, fetchedTable)  => {\r\n        if(fetchedTable.getLastPageNumber() === 0) {\r\n            if (!this.setTemplateAndCheck(fetchedTable.getTemplate())) {\r\n                this.isValidPage = false;\r\n                if (this.onColumnsMissing) {\r\n                    this.onColumnsMissing(_tableDef);\r\n                } else {\r\n                    throw (\"Cannot build table object - required columns missing\");\r\n                }\r\n            } else {\r\n                this.isValidPage = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onBeforeLoadingHandler() {\r\n        this.headerIndices = NamedCellTablePageHandler.getHeaderIndicesFromDocument(document.body); //TODO: it's up to the tableDef to determine if a table has the valid columns.\r\n        return this.hasAllHeadersAndAlert();\r\n    }\r\n\r\n    hasAllHeadersAndAlert() {\r\n        if (!this.hasAllHeaders()) {\r\n            let labelString = this.requiredHeaderLabels\r\n                .map((label) => \"\\\"\" + label.toUpperCase() + \"\\\"\")\r\n                .join(\", \");\r\n            alert(`Voeg velden ${labelString} toe.`);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    setTemplateAndCheck(template: HTMLTemplateElement) {\r\n        this.headerIndices = NamedCellTablePageHandler.getHeaderIndicesFromTemplate(template);\r\n        return this.hasAllHeadersAndAlert();\r\n    }\r\n\r\n    static getHeaderIndicesFromTemplate(template: HTMLTemplateElement){\r\n        let headers = template.content.querySelectorAll(\"thead th\") as NodeListOf<HTMLTableCellElement>;\r\n        return this.getHeaderIndicesFromHeaderCells(headers);\r\n    }\r\n\r\n    static getHeaderIndicesFromDocument(element: HTMLElement){\r\n        let headers = element.querySelectorAll(\"thead th\") as NodeListOf<HTMLTableCellElement>;\r\n        return this.getHeaderIndicesFromHeaderCells(headers);\r\n    }\r\n\r\n    static getHeaderIndicesFromHeaderCells(headers: NodeListOf<HTMLTableCellElement>) {\r\n        let headerIndices: Map<string, number> = new Map();\r\n        Array.from(headers)\r\n            .forEach((header, index) => {\r\n                let label = header.textContent;\r\n                if (label.startsWith(\"e-mailadressen\")) {\r\n                    headerIndices.set(\"e-mailadressen\", index);\r\n                } else {\r\n                    headerIndices.set(label, index);\r\n                }\r\n            });\r\n        return headerIndices;\r\n    }\r\n\r\n    hasAllHeaders() {\r\n        return this.requiredHeaderLabels.every((label) => this.hasHeader(label))\r\n    }\r\n\r\n    hasHeader(label: string) {\r\n        return this.headerIndices.has(label);\r\n    }\r\n\r\n    getColumnText(tr: HTMLTableRowElement, label: string) : string {\r\n        return tr.children[this.headerIndices.get(label)].textContent;\r\n    }\r\n}", "import {rangeGenerator} from \"../globals\";\r\n\r\nfunction sortRows(cmpFunction: (a: HTMLTableCellElement, b: HTMLTableCellElement) => number, header: Element, rows: HTMLTableRowElement[], index: number, wasAscending: boolean) {\r\n    let cmpDirectionalFunction: (a: HTMLTableRowElement, b: HTMLTableRowElement) => number;\r\n    if (wasAscending) {\r\n        cmpDirectionalFunction = (a: HTMLTableRowElement, b: HTMLTableRowElement) => cmpFunction(b.cells[index], a.cells[index]);\r\n        header.classList.add(\"sortDescending\");\r\n    } else {\r\n        cmpDirectionalFunction = (a: HTMLTableRowElement, b: HTMLTableRowElement) => cmpFunction(a.cells[index], b.cells[index]);\r\n        header.classList.add(\"sortAscending\");\r\n    }\r\n\r\n    rows.sort((a, b) => cmpDirectionalFunction(a, b));\r\n}\r\n\r\nfunction cmpAlpha(a: HTMLTableCellElement, b: HTMLTableCellElement) {\r\n    return a.innerText.localeCompare(b.innerText);\r\n}\r\n\r\nfunction cmpDate(a: HTMLTableCellElement, b: HTMLTableCellElement) {\r\n    return normalizeDate(a.innerText).localeCompare(normalizeDate(b.innerText));\r\n}\r\n\r\n// Convert date string for sorting: DD-MM-YYYY >  YYYYMMDD\r\nfunction normalizeDate(date: string) {\r\n    let dateParts = date.split('-');\r\n    return dateParts[2] + dateParts[1] + dateParts[0];\r\n}\r\n\r\nfunction cmpNumber(a: HTMLTableCellElement, b: HTMLTableCellElement) {\r\n    let res = Number(a.innerText) - Number(b.innerText);\r\n    if(isNaN(res)) {\r\n        throw new Error();\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction sortTableByColumn(table: HTMLTableElement, index: number) {\r\n    let header = table.tHead.children[0].children[index];\r\n    let rows = Array.from(table.tBodies[0].rows);\r\n    let wasAscending = header.classList.contains(\"sortAscending\");\r\n    for (let thead of table.tHead.children[0].children) {\r\n        thead.classList.remove(\"sortAscending\", \"sortDescending\")\r\n    }\r\n    let cmpFunc = cmpAlpha;\r\n    if(isColumnProbablyNumeric(table, index)) {\r\n        cmpFunc = cmpNumber;\r\n    } else if(isColumnProbablyDate(table, index)) {\r\n        cmpFunc = cmpDate;\r\n    }\r\n    try {\r\n        sortRows(cmpFunc, header, rows, index, wasAscending);\r\n    } catch (e) {\r\n        console.error(e);\r\n        if(cmpFunc !== cmpAlpha)\r\n            sortRows(cmpAlpha, header, rows, index, wasAscending);\r\n    }\r\n\r\n    rows.forEach(row => table.tBodies[0].appendChild(row));\r\n}\r\n\r\nfunction isColumnProbablyDate(table: HTMLTableElement, index: number) {\r\n    let rows = Array.from(table.tBodies[0].rows);\r\n    return stringToDate(rows[0].cells[index].textContent);\r\n}\r\n\r\nfunction stringToDate(text: string) {\r\n    let reDate =/^(\\d\\d)[-\\/](\\d\\d)[-\\/](\\d\\d\\d\\d)/;\r\n    let matches = text.match(reDate);\r\n    if(!matches)\r\n        return undefined;\r\n    return new Date(matches[3] + \"-\" + matches[2] + \"/\" + matches[1]);\r\n}\r\n\r\nfunction isColumnProbablyNumeric(table: HTMLTableElement, index: number) {\r\n    let rows = Array.from(table.tBodies[0].rows);\r\n\r\n    const MAX_SAMPLES = 100;\r\n    let samples = rangeGenerator(0, rows.length, rows.length > MAX_SAMPLES ? rows.length/MAX_SAMPLES : 1)\r\n        .map(float => Math.floor(float));\r\n    return !samples\r\n        .map(rowIndex => rows[rowIndex])\r\n        .some(row => {\r\n            return isNaN(Number((row.children[index] as HTMLElement).innerText));\r\n        });\r\n}\r\n\r\nexport function addTableHeaderClickEvents(table: HTMLTableElement) {\r\n    if (table.tHead.classList.contains(\"clickHandler\"))\r\n        return;\r\n    table.tHead.classList.add(\"clickHandler\");\r\n    Array.from(table.tHead.children[0].children).forEach((header: HTMLElement, index) => {\r\n        header.onclick = _ev => {\r\n            sortTableByColumn(table, index);\r\n        };\r\n    });\r\n}", "import {addButton, addTableNavigationButton, getBothToolbars} from \"../globals\";\r\nimport * as def from \"../def\";\r\nimport {AllPageFilter, BaseObserver} from \"../pageObserver\";\r\nimport {SimpleTableHandler} from \"../pageHandlers\";\r\nimport {CalculateTableCheckSumHandler, FetchedTable, findTableRefInCode, TableDef} from \"./tableDef\";\r\nimport {addTableHeaderClickEvents} from \"./tableHeaders\";\r\n\r\nexport default new BaseObserver(undefined, new AllPageFilter(), onMutation);\r\n\r\nfunction onMutation (_mutation: MutationRecord) {\r\n    let navigationBars = getBothToolbars();\r\n    if(!navigationBars)\r\n        return; //wait for top and bottom bars.\r\n    if(!findTableRefInCode()?.navigationData.isOnePage()) {\r\n        addTableNavigationButton(navigationBars, def.DOWNLOAD_TABLE_BTN_ID, \"download full table\", downloadTable, \"fa-arrow-down\");\r\n    }\r\n    if(document.querySelector(\"main div.table-responsive table thead\")) {\r\n        addTableHeaderClickEvents(document.querySelector(\"main div.table-responsive table\"));\r\n    }\r\n    let customTable = document.querySelector(\"table.canSort\") as HTMLTableElement;\r\n    if(customTable) {\r\n        addTableHeaderClickEvents(customTable);\r\n    }\r\n    return true;\r\n}\r\n\r\nlet tableCriteriaBuilders = new Map<string, CalculateTableCheckSumHandler>();\r\n\r\nfunction downloadTable() {\r\n    let prebuildPageHandler = new SimpleTableHandler(onLoaded, undefined);\r\n\r\n    function onLoaded(fetchedTable: FetchedTable) {\r\n        tableDef.tableRef.getOrgTable()\r\n            .querySelector(\"tbody\")\r\n            .replaceChildren(...fetchedTable.getRows());\r\n    }\r\n\r\n    // let tableRef = new TableRef(\"table_leerlingen_werklijst_table\", findFirstNavigation(),(offset) => \"/views/ui/datatable.php?id=leerlingen_werklijst&start=\" + offset + \"&aantal=0\");\r\n    let tableRef = findTableRefInCode();\r\n    let tableDef = new TableDef(\r\n        tableRef,\r\n        prebuildPageHandler,\r\n        getChecksumHandler(tableRef.htmlTableId)\r\n    );\r\n\r\n    tableDef.getTableData().then(() => { });\r\n}\r\n\r\nexport function getChecksumHandler(tableId: string): CalculateTableCheckSumHandler {\r\n    let handler = tableCriteriaBuilders.get(tableId);\r\n    if(handler)\r\n        return handler;\r\n    return (tableDef: TableDef) => \"\";\r\n}\r\n\r\nexport function registerChecksumHandler(tableId: string, checksumHandler: CalculateTableCheckSumHandler) {\r\n    tableCriteriaBuilders.set(tableId, checksumHandler);\r\n}", "import {VakLeraar} from \"./scrapeUren\";\r\n\r\nexport class UrenData {\r\n    year: number;\r\n    fromCloud: CloudData;\r\n    vakLeraars: Map<string, VakLeraar>;\r\n\r\n    constructor(year: number, cloudData: CloudData, vakLeraars: Map<string, VakLeraar>) {\r\n        this.year = year;\r\n        this.fromCloud = cloudData;\r\n        this.vakLeraars = vakLeraars;\r\n    }\r\n}\r\n\r\nexport class JsonCloudData {\r\n    version: string;\r\n    columns: JsonColumn[];\r\n\r\n    constructor(object?: Object) {\r\n        this.version = \"1.0\";\r\n        this.columns = [];\r\n        if(object) {\r\n            Object.assign(this, object);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CloudData {\r\n    columnMap?: Map<string, Map<string, string>>;\r\n\r\n    constructor(jsonCloudData: JsonCloudData) {\r\n        this.#buildMapFromJsonData(jsonCloudData);\r\n    }\r\n\r\n    #buildMapFromJsonData(jsonCloudData: JsonCloudData) {\r\n        for (let column of jsonCloudData.columns) {\r\n            column.rowMap = new Map(column.rows.map((row) => [row.key, row.value]));\r\n        }\r\n        this.columnMap = new Map(jsonCloudData.columns.map((col) => [col.key, col.rowMap]));\r\n    }\r\n\r\n    toJson(colKey1: string, colKey2: string) {\r\n        let data = new JsonCloudData();\r\n        let col1 = this.#columnToJson(colKey1);\r\n        let col2 = this.#columnToJson(colKey2);\r\n        data.columns.push({key: colKey1, rows: col1});\r\n        data.columns.push({key: colKey2, rows: col2});\r\n        return data;\r\n    }\r\n\r\n    #columnToJson(colKey: string) {\r\n        let cells: JsonCell[] = [];\r\n        for (let [key, value] of this.columnMap.get(colKey)) {\r\n            let row: JsonCell = {\r\n                key: key,\r\n                value: value\r\n            };\r\n            cells.push(row);\r\n        }\r\n        return cells;\r\n    }\r\n}\r\n\r\nexport interface JsonCell {\r\n    key: string,\r\n    value: string\r\n}\r\n\r\ninterface JsonColumn {\r\n    key: string,\r\n    rows: JsonCell[]\r\n    rowMap?: Map<string, string>;\r\n}\r\n\r\n", "import {addButton, calculateSchooljaar, createSchoolyearString, createShortSchoolyearString, findSchooljaar, getHighestSchooljaarAvailable, getSchoolIdString, setButtonHighlighted} from \"../globals\";\r\nimport * as def from \"../def\";\r\nimport {buildTable, getUrenVakLeraarFileName} from \"./buildUren\";\r\nimport {scrapeStudent, VakLeraar} from \"./scrapeUren\";\r\nimport {cloud} from \"../cloud\";\r\nimport {FetchedTable, findTableRefInCode, TableDef} from \"../table/tableDef\";\r\nimport {prefillInstruments} from \"./prefillInstruments\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport {NamedCellTablePageHandler} from \"../pageHandlers\";\r\nimport {addTableHeaderClickEvents} from \"../table/tableHeaders\";\r\nimport {getPageStateOrDefault, Goto, PageName, savePageState, WerklijstPageState} from \"../pageState\";\r\nimport {getChecksumHandler, registerChecksumHandler} from \"../table/observer\";\r\nimport {CloudData, JsonCloudData, UrenData} from \"./urenData\";\r\n\r\nconst tableId = \"table_leerlingen_werklijst_table\";\r\n\r\nregisterChecksumHandler(tableId,  (_tableDef: TableDef) => {\r\n    return document.querySelector(\"#view_contents > div.alert.alert-primary\")?.textContent.replace(\"Criteria aanpassen\", \"\")?.replace(\"Criteria:\", \"\") ?? \"\"\r\n    }\r\n    );\r\n\r\nexport default new HashObserver(\"#leerlingen-werklijst\", onMutation);\r\n\r\nfunction onMutation(mutation: MutationRecord) {\r\n    if ((mutation.target as HTMLElement).id === \"table_leerlingen_werklijst_table\") {\r\n        onWerklijstChanged();\r\n        return true;\r\n    }\r\n    let buttonBar = document.getElementById(\"tablenav_leerlingen_werklijst_top\");\r\n    if (mutation.target === buttonBar) {\r\n        onButtonBarChanged();\r\n        return true;\r\n    }\r\n    if (document.querySelector(\"#btn_werklijst_maken\")) {\r\n        onCriteriaShown();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onCriteriaShown() {\r\n    let pageState = getPageStateOrDefault(PageName.Werklijst) as WerklijstPageState;\r\n    if(pageState.goto == Goto.Werklijst_uren_prevYear) {\r\n        pageState.goto = Goto.None;\r\n        savePageState(pageState);\r\n        prefillInstruments(createSchoolyearString(calculateSchooljaar())).then(() => {});\r\n        return;\r\n    }\r\n    if(pageState.goto == Goto.Werklijst_uren_nextYear) {\r\n        pageState.goto = Goto.None;\r\n        savePageState(pageState);\r\n        prefillInstruments(createSchoolyearString(calculateSchooljaar()+1)).then(() => {});\r\n        return;\r\n    }\r\n    pageState.werklijstTableName = \"\";\r\n    savePageState(pageState);\r\n    let btnWerklijstMaken = document.querySelector(\"#btn_werklijst_maken\") as HTMLButtonElement;\r\n    if(document.getElementById(def.UREN_PREV_BTN_ID))\r\n        return;\r\n\r\n    let year = parseInt(getHighestSchooljaarAvailable());\r\n    let prevSchoolyear = createSchoolyearString(year-1);\r\n    let nextSchoolyear = createSchoolyearString(year);\r\n    let prevSchoolyearShort = createShortSchoolyearString(year-1);\r\n    let nextSchoolyearShort = createShortSchoolyearString(year);\r\n    addButton(btnWerklijstMaken, def.UREN_PREV_BTN_ID, \"Toon lerarenuren voor \"+ prevSchoolyear, async () => { await prefillInstruments(prevSchoolyear); }, \"\", [\"btn\", \"btn-outline-dark\"], \"Uren \"+ prevSchoolyearShort);\r\n    addButton(btnWerklijstMaken, def.UREN_NEXT_BTN_ID, \"Toon lerarenuren voor \"+ nextSchoolyear, async () => { await prefillInstruments(nextSchoolyear); }, \"\", [\"btn\", \"btn-outline-dark\"], \"Uren \"+ nextSchoolyearShort);\r\n    getSchoolIdString();\r\n}\r\n\r\n\r\n\r\nfunction onWerklijstChanged() {\r\n    let werklijstPageState = getPageStateOrDefault(PageName.Werklijst) as WerklijstPageState;\r\n    if(werklijstPageState.werklijstTableName === def.UREN_TABLE_STATE_NAME) {\r\n        tryUntil(onClickShowCounts);\r\n    }\r\n    addTableHeaderClickEvents(document.querySelector(\"table#table_leerlingen_werklijst_table\") as HTMLTableElement);\r\n}\r\n\r\nfunction onButtonBarChanged() {\r\n    let targetButton = document.querySelector(\"#tablenav_leerlingen_werklijst_top > div > div.btn-group.btn-group-sm.datatable-buttons > button:nth-child(1)\") as HTMLButtonElement;\r\n    addButton(targetButton, def.COUNT_BUTTON_ID, \"Toon telling\", onClickShowCounts, \"fa-guitar\", [\"btn-outline-info\"]);\r\n    addButton(targetButton, def.MAIL_BTN_ID, \"Email to clipboard\", onClickCopyEmails, \"fa-envelope\", [\"btn\", \"btn-outline-info\"]);\r\n}\r\n\r\nfunction onClickCopyEmails() {\r\n    let requiredHeaderLabels = [\"e-mailadressen\"];\r\n\r\n    let pageHandler = new NamedCellTablePageHandler(requiredHeaderLabels, onEmailsLoaded, tableDef1 => {\r\n        navigator.clipboard.writeText(\"\").then(value => {\r\n            console.log(\"Clipboard cleared.\")\r\n        });\r\n    });\r\n\r\n    let tableDef = new TableDef(\r\n        findTableRefInCode(),\r\n        pageHandler,\r\n        getChecksumHandler(tableId)\r\n    );\r\n\r\n    function onEmailsLoaded(fetchedTable: FetchedTable) {\r\n        let allEmails = this.rows = fetchedTable.getRowsAsArray()\r\n            .map(tr=> (tableDef.pageHandler as NamedCellTablePageHandler).getColumnText(tr, \"e-mailadressen\"));\r\n\r\n        let flattened = allEmails\r\n            .map((emails: string) => emails.split(/[,;]/))\r\n            .flat()\r\n            .filter((email: string) => !email.includes(\"@academiestudent.be\"))\r\n            .filter((email: string) => email !== \"\");\r\n        navigator.clipboard.writeText(flattened.join(\";\\n\")).then(() =>\r\n            tableDef.setTempMessage(\"Alle emails zijn naar het clipboard gekopieerd. Je kan ze plakken in Outlook.\")\r\n        );\r\n    }\r\n\r\n    tableDef.getTableData(undefined )\r\n        .then((_results) => {\r\n        });\r\n}\r\n\r\nfunction tryUntil(func: () => boolean) {\r\n    if(!func())\r\n        setTimeout(() => tryUntil(func), 100);\r\n}\r\n\r\nfunction onClickShowCounts() {\r\n    //Build lazily and only once. Table will automatically be erased when filters are changed.\r\n    if (!document.getElementById(def.COUNT_TABLE_ID)) {\r\n        let tableRef = findTableRefInCode();\r\n        if(!tableRef)\r\n            return false;\r\n\r\n        let fileName = getUrenVakLeraarFileName();\r\n        let requiredHeaderLabels = [\"naam\", \"voornaam\", \"vak\", \"klasleerkracht\", \"graad + leerjaar\"];\r\n        let pageHandler = new NamedCellTablePageHandler(requiredHeaderLabels, onLoaded, () => {});\r\n        let tableDef = new TableDef(\r\n            tableRef,\r\n            pageHandler,\r\n            getChecksumHandler(tableRef.htmlTableId)\r\n        );\r\n\r\n        function onLoaded(fetchedTable: FetchedTable) {\r\n            let vakLeraars = new Map();\r\n            let rows = this.rows = fetchedTable.getRows();\r\n            for(let tr of rows) {\r\n                scrapeStudent(tableDef, tr, vakLeraars);//TODO: returns false if fails. Report error.\r\n            }\r\n            let fromCloud = new JsonCloudData(tableDef.parallelData as JsonCloudData)\r\n            fromCloud = upgradeCloudData(fromCloud);\r\n            vakLeraars = new Map([...vakLeraars.entries()].sort((a, b) => a[0] < b[0] ? -1 : ((a[0] > b[0])? 1 : 0))) as Map<string, VakLeraar>;\r\n            document.getElementById(def.COUNT_TABLE_ID)?.remove();\r\n            let schoolYear = findSchooljaar();\r\n            let year = parseInt(schoolYear);\r\n            buildTable(new UrenData(year, new CloudData(fromCloud), vakLeraars), tableDef);\r\n            document.getElementById(def.COUNT_TABLE_ID).style.display = \"none\";\r\n            showOrHideNewTable();\r\n        }\r\n\r\n        tableDef.getTableData(() => getUrenFromCloud(fileName))\r\n            .then((_results) => { });\r\n\r\n        return true;\r\n    }\r\n    showOrHideNewTable();\r\n    return true;\r\n}\r\n\r\nasync function getUrenFromCloud(fileName: string): Promise<JsonCloudData> {\r\n    try {\r\n        return await cloud.json.fetch(fileName);\r\n    } catch (e) {\r\n        return new JsonCloudData();\r\n    }\r\n}\r\n\r\nfunction showOrHideNewTable() {\r\n    let showNewTable = document.getElementById(def.COUNT_TABLE_ID).style.display === \"none\";\r\n    document.getElementById(\"table_leerlingen_werklijst_table\").style.display = showNewTable ? \"none\" : \"table\";\r\n    document.getElementById(def.COUNT_TABLE_ID).style.display = showNewTable ? \"table\" : \"none\";\r\n    document.getElementById(def.COUNT_BUTTON_ID).title = showNewTable ? \"Toon normaal\" : \"Toon telling\";\r\n    setButtonHighlighted(def.COUNT_BUTTON_ID, showNewTable);\r\n    let pageState = getPageStateOrDefault(PageName.Werklijst) as WerklijstPageState;\r\n    pageState.werklijstTableName = showNewTable ? def.UREN_TABLE_STATE_NAME : \"\";\r\n    savePageState(pageState);\r\n}\r\n\r\nfunction upgradeCloudData(fromCloud: JsonCloudData) {\r\n    //if fromCloud.version === \"....\" --> convert.\r\n    return fromCloud;\r\n\r\n\r\n}\r\n", "import {HashObserver} from \"../pageObserver\";\r\nimport {createScearchField, createTextRowFilter, filterTable} from \"../globals\";\r\n\r\nexport default new HashObserver(\"#extra-inschrijvingen-vakgroepen-vakgroep\", onMutation);\r\n\r\nfunction onMutation (mutation: MutationRecord) {\r\n    let divVakken = document.getElementById(\"div_table_vakgroepen_vakken\");\r\n    if (mutation.target !== divVakken) {\r\n        return false;\r\n    }\r\n    onVakgroepChanged(divVakken);\r\n    return true;\r\n}\r\n\r\nconst TXT_FILTER_ID = \"txtFilter\";\r\nlet savedSearch = \"\";\r\n\r\nfunction onVakgroepChanged(divVakken: HTMLElement) {\r\n    let table = divVakken.querySelector(\"table\");\r\n    if(!document.getElementById(TXT_FILTER_ID))\r\n        table.parentElement.insertBefore(createScearchField(TXT_FILTER_ID, onSearchInput, savedSearch), table);\r\n\r\n    onSearchInput();\r\n}\r\n\r\nfunction onSearchInput() {\r\n    savedSearch = (document.getElementById(TXT_FILTER_ID) as HTMLInputElement).value;\r\n\r\n    function getRowText(tr: HTMLTableRowElement) {\r\n        let instrumentName = tr.cells[0].querySelector(\"label\").textContent.trim();\r\n        let strong = tr.cells[0].querySelector(\"strong\")?.textContent.trim();\r\n        return instrumentName + \" \" + strong;\r\n    }\r\n\r\n    let rowFilter = createTextRowFilter(savedSearch, getRowText);\r\n    filterTable(document.querySelector(\"#div_table_vakgroepen_vakken table\") as HTMLTableElement, rowFilter);\r\n}", "import {HashObserver} from \"../pageObserver\";\r\n\r\nexport default new HashObserver(\"#leerlingen-verwittigen\", onMutation);\r\n\r\nconst CHAR_COUNTER = \"charCounterClass\";\r\nconst COUNTER_ID = \"charCounter\"\r\nfunction onMutation (mutation: MutationRecord) {\r\n    // console.log(mutation)\r\n    let txtSms = document.getElementById(\"leerlingen_verwittigen_bericht_sjabloon\");\r\n    if(txtSms && !txtSms?.classList.contains(CHAR_COUNTER)) {\r\n        txtSms.classList.add(CHAR_COUNTER);\r\n        txtSms.addEventListener(\"input\", onSmsChanged);\r\n        let span = document.createElement(\"span\");\r\n        span.id = COUNTER_ID;\r\n        txtSms.parentElement.appendChild(span);\r\n        onSmsChanged(undefined);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction onSmsChanged(event: Event) {\r\n    let txtSms = document.getElementById(\"leerlingen_verwittigen_bericht_sjabloon\") as HTMLTextAreaElement;\r\n    let spanCounter: HTMLSpanElement =  document.getElementById(COUNTER_ID);\r\n    spanCounter.textContent = txtSms.value.length.toString();\r\n}\r\n", "import {findFirstNavigation} from \"./tableNavigation\";\r\nimport {TableDef, TableRef} from \"./tableDef\";\r\nimport {SimpleTableHandler} from \"../pageHandlers\";\r\nimport {getChecksumHandler} from \"./observer\";\r\nimport {setViewFromCurrentUrl} from \"../globals\";\r\n\r\nexport async function getTableFromHash(hash: string, divInfoContainer: HTMLDivElement, clearCache: boolean) {\r\n    let page = await fetch(\"https://administratie.dko3.cloud/#\"+hash).then(res => res.text());\r\n\r\n    // call to changeView() - assuming this is always the same, so no parsing here.\r\n    let view = await fetch(\"view.php?args=\"+hash).then(res => res.text());\r\n    let index_viewUrl = getDocReadyLoadUrl(view);\r\n\r\n    //get the htmlTableId (from index.view.php\r\n    let index_view = await fetch(index_viewUrl).then(res => res.text());\r\n    let scanner = new TokenScanner(index_view);\r\n    let htmlTableId =  getDocReadyLoadScript(index_view)\r\n        .find(\"$\", \"(\", \"'#\")\r\n        .clipTo(\"'\")\r\n        .result();\r\n    if(!htmlTableId) {\r\n        htmlTableId = getDocReadyLoadScript(index_view)\r\n            .find(\"$\", \"(\", \"\\\"#\")\r\n            .clipTo(\"\\\"\")\r\n            .result();\r\n    }\r\n    let someUrl = getDocReadyLoadUrl(index_view); //NOT SURE THIS IS datatable.php !!!\r\n    //>> keep going unti we get to datatable.php...\r\n    if (!someUrl.includes(\"ui/datatable.php\")) {\r\n        //fetch again. Don't loop to avoid dead loop.\r\n        let someCode = await fetch(someUrl).then(res => res.text());\r\n        someUrl = getDocReadyLoadUrl(someCode); //NOT SURE THIS IS datatable.php !!!\r\n    }\r\n    let datatableUrl = someUrl; //hope and pray...\r\n    //get datatable id an url from datatable.php\r\n    let datatable = await fetch(datatableUrl).then(result => result.text());\r\n    scanner = new TokenScanner(datatable);\r\n    let datatable_id = \"\";\r\n    let tableNavUrl = \"\";\r\n    scanner\r\n        .find(\"var\", \"datatable_id\", \"=\")\r\n        .getString(res => { datatable_id = res; })\r\n        .clipTo(\"</script>\")\r\n        .find(\".\", \"load\", \"(\")\r\n        .getString(res => tableNavUrl = res)\r\n        .result();\r\n    tableNavUrl += datatable_id + '&pos=top';\r\n    let tableNavText = await fetch(tableNavUrl).then(res => res.text().then());\r\n\r\n    let div = document.createElement(\"div\");\r\n    div.innerHTML = tableNavText;\r\n    let tableNav = findFirstNavigation(div);\r\n    console.log(tableNav);\r\n    let buildFetchUrl = (offset: number) => `/views/ui/datatable.php?id=${datatable_id}&start=${offset}&aantal=0`;\r\n\r\n    let tableRef = new TableRef(htmlTableId, tableNav, buildFetchUrl);\r\n    console.log(tableRef);\r\n    let prebuildPageHandler = new SimpleTableHandler(undefined, undefined);\r\n\r\n    let tableDef = new TableDef(\r\n        tableRef,\r\n        prebuildPageHandler,\r\n        getChecksumHandler(tableRef.htmlTableId)\r\n    );\r\n    tableDef.divInfoContainer = divInfoContainer;\r\n    if(clearCache)\r\n        tableDef.clearCache();\r\n    let fetchedTable = await tableDef.getTableData();\r\n    await setViewFromCurrentUrl();\r\n    return fetchedTable;\r\n}\r\n\r\nfunction findDocReady(scanner: TokenScanner) {\r\n    return scanner.find(\"$\", \"(\", \"document\", \")\", \".\", \"ready\", \"(\");\r\n}\r\n\r\nfunction getDocReadyLoadUrl(text: string) {\r\n    let scanner = new TokenScanner(text);\r\n    while(true) {\r\n        let docReady = findDocReady(scanner);\r\n        if(!docReady.valid)\r\n            return undefined;\r\n        let url = docReady\r\n            .clone()\r\n            .clipTo(\"</script>\")\r\n            .find(\".\", \"load\", \"(\")\r\n            .clipString()\r\n            .result();\r\n        if(url)\r\n            return url;\r\n        scanner = docReady;\r\n    }\r\n}\r\n\r\nfunction getLoadUrl(text: string) {\r\n    let scanner = new TokenScanner(text);\r\n    return scanner\r\n        .find(\".\", \"load\", \"(\")\r\n        .clipString()\r\n        .result();\r\n}\r\n\r\nfunction getDocReadyLoadScript(text: string) {\r\n    let scanner = new TokenScanner(text);\r\n    while(true) {\r\n        let docReady = findDocReady(scanner);\r\n        if(!docReady.valid)\r\n            return undefined;\r\n        let script = docReady\r\n            .clone()\r\n            .clipTo(\"</script>\");\r\n        let load = script\r\n            .clone()\r\n            .find(\".\", \"load\", \"(\");\r\n        if(load.valid)\r\n            return script;\r\n        scanner = docReady;\r\n    }\r\n}\r\n\r\n\r\nfunction escapeRegexChars(text: string): string {\r\n    return text\r\n        .replaceAll(\"\\\\\", \"\\\\\\\\\")\r\n        .replaceAll(\"^\", \"\\\\^\")\r\n        .replaceAll(\"$\", \"\\\\$\")\r\n        .replaceAll(\".\", \"\\\\.\")\r\n        .replaceAll(\"|\", \"\\\\|\")\r\n        .replaceAll(\"?\", \"\\\\?\")\r\n        .replaceAll(\"*\", \"\\\\*\")\r\n        .replaceAll(\"+\", \"\\\\+\")\r\n        .replaceAll(\"(\", \"\\\\(\")\r\n        .replaceAll(\")\", \"\\\\)\")\r\n        .replaceAll(\"[\", \"\\\\[\")\r\n        .replaceAll(\"]\", \"\\\\]\")\r\n        .replaceAll(\"{\", \"\\\\{\")\r\n        .replaceAll(\"}\", \"\\\\}\")\r\n}\r\n\r\nclass ScannerElse {\r\n    scannerIf: ScannerIf;\r\n\r\n    constructor(scannerIf: ScannerIf) {\r\n        this.scannerIf = scannerIf;\r\n    }\r\n\r\n    not(callback?: (scanner: TokenScanner) => TokenScanner) {\r\n        if(!this.scannerIf.yes) {\r\n            callback?.(this.scannerIf.scanner);\r\n        }\r\n        return this.scannerIf.scanner;\r\n    }\r\n}\r\n\r\nclass ScannerIf {\r\n    yes: boolean;\r\n    scanner: TokenScanner;\r\n\r\n    constructor(yes: boolean, scanner: TokenScanner) {\r\n        this.yes = yes;\r\n        this.scanner = scanner;\r\n    }\r\n\r\n    then(callback: (scanner: TokenScanner) => TokenScanner) : ScannerElse {\r\n        if(this.yes) {\r\n            callback(this.scanner);\r\n        }\r\n        return new ScannerElse(this);\r\n    }\r\n}\r\n\r\nclass TokenScanner {\r\n    valid: boolean;\r\n    source: string;\r\n    cursor: string;\r\n    constructor(text: string) {\r\n        this.valid = true;\r\n        this.source = text;\r\n        this.cursor = text;\r\n    }\r\n\r\n    result(): string | undefined {\r\n        if(this.valid)\r\n            return this.cursor;\r\n        return undefined;\r\n    }\r\n\r\n    find(...tokens: string[]) {\r\n        return this.#find(\"\", tokens);\r\n    }\r\n\r\n    match(...tokens: string[]) {\r\n        return this.#find(\"^\\\\s*\", tokens);\r\n    }\r\n\r\n    #find(prefix: string, tokens: string[]) {\r\n        if(!this.valid)\r\n            return this;\r\n        let rxString = prefix + tokens\r\n            .map(token => escapeRegexChars(token) + \"\\\\s*\")\r\n            .join(\"\");\r\n        let match = RegExp(rxString).exec(this.cursor);\r\n        if (match) {\r\n            this.cursor = this.cursor.substring(match.index + match[0].length);\r\n            return this;\r\n        }\r\n        this.valid = false;\r\n        return this;\r\n    }\r\n\r\n    ifMatch(...tokens: string[]) : ScannerIf {\r\n        if(!this.valid)\r\n            return new ScannerIf(true, this); //never mind the yes: the scanner is invalid.\r\n\r\n        this.match(...tokens);\r\n        if(this.valid) {\r\n            return new ScannerIf(true, this);\r\n        } else {\r\n            this.valid = true;\r\n            return new ScannerIf(false, this);\r\n        }\r\n    }\r\n\r\n    clip(len: number) {\r\n        if(!this.valid)\r\n            return this;\r\n        this.cursor = this.cursor.substring(0, len);\r\n        return this;\r\n    }\r\n\r\n    clipTo(end: string) {\r\n        if(!this.valid)\r\n            return this;\r\n        let found = this.cursor.indexOf(end);\r\n        if(found < 0) {\r\n            this.valid = false;\r\n            return this;\r\n        }\r\n        this.cursor = this.cursor.substring(0, found);\r\n        return this;\r\n    }\r\n\r\n    clone() : TokenScanner {\r\n        let newScanner = new TokenScanner(this.cursor);\r\n        newScanner.valid = this.valid;\r\n        return newScanner;\r\n    }\r\n\r\n    clipString() {\r\n        let isString = false;\r\n        this.ifMatch(\"'\")\r\n            .then(result => {\r\n                isString = true;\r\n                return result.clipTo(\"'\");\r\n            })\r\n            .not()\r\n        .ifMatch(\"\\\"\")\r\n            .then(result => {\r\n                isString = true;\r\n                return result.clipTo(\"\\\"\")\r\n            })\r\n            .not();\r\n        this.valid = this.valid && isString;\r\n        return this;\r\n    }\r\n\r\n    getString(callback: (res: string) => void) {\r\n        let subScanner = this.clone();\r\n        let result = subScanner\r\n            .clipString()\r\n            .result();\r\n        if(result) {\r\n            callback(result);\r\n            //now skip the string in <this>.\r\n            this\r\n                .ifMatch(\"'\")\r\n                .then(result => result.find(\"'\"))\r\n                .not()\r\n                .ifMatch(\"\\\"\")\r\n                .then(result => result.find(\"\\\"\"))\r\n                .not();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nlet x = \"<script type=\\\"text/javascript\\\">\\n\" +\r\n    \"    $(document).ready(function() {\\n\" +\r\n    \"\\n\" +\r\n    \"        load_datatable_lijst_awi_leerlingen_inschrijvingen_3weken();\\n\" +\r\n    \"    });\\n\" +\r\n    \"\\n\" +\r\n    \"    function load_datatable_lijst_awi_leerlingen_inschrijvingen_3weken() {\\n\" +\r\n    \"        $('#table_lijst_awi_leerlingen_inschrijvingen_3weken_table').load('views/ui/datatable.php?id=lijst_awi_leerlingen_inschrijvingen_3weken');\\n\" +\r\n    \"    }\\n\" +\r\n    \"</script>\";\r\n\r\nexport function testScanner() {\r\n\r\n    let text = \"$(document).ready(function() {\\n\" +\r\n        \"        $('[data-toggle=\\\"tooltip\\\"]').tooltip();\\n\" +\r\n        \"\\n\" +\r\n        \"        var datatable_id = 'lijst_awi_leerlingen_inschrijvingen_3weken';\\n\" +\r\n        \"\\n\" +\r\n        \"        var nanobar = new Nanobar({\\n\" +\r\n        \"            target: document.getElementById('table_' + datatable_id + '_nanobar')\\n\" +\r\n        \"        });\\n\" +\r\n        \"\\n\" +\r\n        \"        nanobar.go(50);\\n\" +\r\n        \"\\n\" +\r\n        \"        $('#tablenav_' + datatable_id + '_top').load('views/ui/datatablenav.php?id=' + datatable_id + '&pos=top');\\n\" +\r\n        \"        $('#tablenav_' + datatable_id + '_bottom').load('views/ui/datatablenav.php?id=' + datatable_id + '&pos=bottom');\\n\" +\r\n        \"\\n\" +\r\n        \"        nanobar.go(100);\\n\" +\r\n        \"\\n\" +\r\n        \"        $(\\\"input[data-type='date']\\\").off('blur').on('change', function() {\\n\" +\r\n        \"            datatable_lijst_awi_leerlingen_inschrijvingen_3weken_settablefilter($(this).data('col_id'), $(this).val())\\n\" +\r\n        \"        });\\n\" +\r\n        \"        jQuery(function($) {\\n\" +\r\n        \"            $(\\\"input[data-type='date']\\\").datepicker({\\n\" +\r\n        \"                altFormat: \\\"yy-mm-dd\\\",\\n\" +\r\n        \"                dateFormat: \\\"yy-mm-dd\\\"\\n\" +\r\n        \"            });\\n\" +\r\n        \"        });\\n\" +\r\n        \"\\n\" +\r\n        \"    });\\n\" +\r\n        \"    ...\\n\" +\r\n        \"    </script>\";\r\n\r\n    let scanner = new TokenScanner(text);\r\n    let datatable_id = \"\";\r\n    let tableNavUrl =  scanner\r\n        .find(\"var\", \"datatable_id\", \"=\")\r\n        .getString(res => { datatable_id = res; })\r\n        .clipTo(\"</script>\")\r\n        .find(\".\", \"load\", \"(\")\r\n        .clipString()\r\n        .result();\r\n    console.log(datatable_id);\r\n    console.log(tableNavUrl);\r\n    console.log(\"v2\");\r\n}", "import * as def from \"../def.js\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport {addTableNavigationButton, getBothToolbars} from \"../globals\";\r\nimport {SimpleTableHandler} from \"../pageHandlers\";\r\nimport {findTableRefInCode, TableDef} from \"../table/tableDef\";\r\nimport {getTableFromHash} from \"../table/loadAnyTable\";\r\nimport {getChecksumHandler} from \"../table/observer\";\r\n\r\nexport default new HashObserver(\"#leerlingen-lijsten-awi-percentages_leerling_vak\", onMutationAanwezgheden);\r\n\r\nfunction onMutationAanwezgheden(mutation: MutationRecord) {\r\n    let tableId = document.getElementById(\"table_lijst_awi_percentages_leerling_vak_table\") as HTMLTableElement;\r\n    if (!tableId) {\r\n        return false;\r\n    }\r\n    let navigationBars = getBothToolbars();\r\n    if(!navigationBars)\r\n        return; //wait for top and bottom bars.\r\n    addTableNavigationButton(navigationBars, def.COPY_TABLE_BTN_ID, \"copy table to clipboard\", copyTable, \"fa-clipboard\");\r\n    return true;\r\n}\r\n\r\ninterface Aanwezigheid {\r\n    naam: string,\r\n    voornaam: string,\r\n    vakReduced: string,\r\n    vak: string,\r\n    percentFinancierbaar: number,\r\n    percentTotaal: number,\r\n    percentFinancierbaarAP: number,\r\n    percentTotaalAP: number,\r\n    weken: string,\r\n    codeP: number\r\n}\r\n\r\ninterface Weken {\r\n    naam: string,\r\n    voornaam: string,\r\n    weken: number\r\n}\r\n\r\ninterface Pees {\r\n    naam: string,\r\n    voornaam: string,\r\n    code: string,\r\n    vak: string,\r\n    leraar: string\r\n}\r\n\r\ninterface Attest {\r\n    datum: string,\r\n    leerling: string,\r\n    vak: string,\r\n    leraar: string,\r\n    reden: string\r\n}\r\n\r\nfunction showInfoMessage(message: string, click_element_id?: string, callback?: () => void) {\r\n    let div = document.querySelector(\"#\"+def.INFO_MSG_ID);\r\n    if(!div)\r\n        return; //meh...\r\n\r\n    div.innerHTML = message;\r\n    if(click_element_id) {\r\n        document.getElementById(click_element_id).onclick = callback;\r\n    }\r\n}\r\n\r\n\r\nasync function copyTable() {\r\n    let prebuildPageHandler = new SimpleTableHandler(undefined, undefined);\r\n\r\n    let tableRef = findTableRefInCode();\r\n    let tableDef = new TableDef(\r\n        tableRef,\r\n        prebuildPageHandler,\r\n        getChecksumHandler(tableRef.htmlTableId)\r\n    );\r\n\r\n    // tableDef.setupInfoBar();\r\n    let div = tableRef.createElementAboveTable(\"div\");\r\n    let msgDiv = div.appendChild(document.createElement(\"div\"));\r\n    msgDiv.classList.add(\"infoMessage\");\r\n    msgDiv.id = def.INFO_MSG_ID;\r\n    tableDef.divInfoContainer = div.appendChild(document.createElement(\"div\"));\r\n\r\n    showInfoMessage(\"Fetching 3-weken data...\");\r\n\r\n    let wekenLijst = await getTableFromHash(\"leerlingen-lijsten-awi-3weken\", tableDef.divInfoContainer, true).then(bckTableDef => {\r\n``        // convert table to text\r\n        let rowsArray = bckTableDef.getRowsAsArray();\r\n        return rowsArray\r\n            .map(row => {\r\n                let namen = row.cells[0].textContent.split(\", \");\r\n                return { naam: namen[0], voornaam: namen[1], weken: parseInt(row.cells[2].textContent)} as Weken;\r\n            });\r\n    });\r\n    console.log(wekenLijst);\r\n\r\n    showInfoMessage(\"Fetching attesten...\");\r\n\r\n    let attestenLijst = await getTableFromHash(\"leerlingen-lijsten-awi-ontbrekende_attesten\", tableDef.divInfoContainer, true).then(bckTableDef => {\r\n        return bckTableDef.getRowsAsArray().map(tr => {\r\n                return {\r\n                    datum: tr.cells[0].textContent,\r\n                    leerling: tr.cells[1].textContent,\r\n                    vak: tr.cells[2].textContent,\r\n                    leraar: tr.cells[3].textContent,\r\n                    reden: tr.cells[4].textContent,\r\n                } as Attest;\r\n            }\r\n        )\r\n    });\r\n    console.log(attestenLijst);\r\n\r\n    showInfoMessage(\"Fetching afwezigheidscodes...\");\r\n\r\n    let pList = await getTableFromHash(\"leerlingen-lijsten-awi-afwezigheidsregistraties\", tableDef.divInfoContainer, true).then(bckTableDef => {\r\n        let rowsArray = bckTableDef.getRowsAsArray();\r\n\r\n        return rowsArray\r\n            .map(row => {\r\n                let namen = row.cells[1].querySelector(\"strong\").textContent.split(\", \");\r\n                let vakTxt = Array.from(row.cells[1].childNodes).filter(node => node.nodeType === Node.TEXT_NODE).map(node => node.textContent).join(\"\");\r\n                let vak =  reduceVaknaam(vakTxt.substring(3));\r\n                let leraar = row.cells[1].querySelector(\"small\").textContent.substring(16); //remove \"Klasleerkracht: \"\r\n                return { naam: namen[0], voornaam: namen[1], code: row.cells[2].textContent[0], vak, leraar} as Pees;\r\n            });\r\n    });\r\n    console.log(pList);\r\n\r\n    tableDef.clearCache();\r\n    tableDef.getTableData().then((fetchedTable) => {\r\n\r\n        let wekenMap: Map<string, Weken> = new Map();\r\n\r\n        for(let week of wekenLijst) {\r\n            wekenMap.set(week.naam+\",\"+week.voornaam, week);\r\n        }\r\n\r\n        // convert table to text\r\n        let rowsArray = fetchedTable.getRowsAsArray();\r\n        let nu = new Date();\r\n        let text = \"data:\"+ nu.toLocaleDateString() +\"\\n\";\r\n        let aanwList = rowsArray\r\n            .map(row => {\r\n                let percentFinancierbaar =  parseFloat(row.cells[1].querySelector(\"strong\")?.textContent?.replace(\",\", \".\") ?? \"0\")/100;\r\n                let percentTotaal =  parseFloat(row.cells[2].querySelector(\"strong\")?.textContent?.replace(\",\", \".\") ?? \"0\")/100;\r\n                let vak = row.cells[0].querySelector(\"br\")?.nextSibling?.textContent;\r\n                let namen = row.cells[0].querySelector(\"strong\").textContent.split(\", \");\r\n                let aanw: Aanwezigheid = {\r\n                    naam: namen[0],\r\n                    voornaam: namen[1],\r\n                    vak,\r\n                    vakReduced: reduceVaknaam(vak),\r\n                    percentFinancierbaar,\r\n                    percentTotaal,\r\n                    percentFinancierbaarAP: 0,\r\n                    percentTotaalAP: 0,\r\n                    weken: \"\",\r\n                    codeP: 0\r\n                };\r\n                let week = wekenMap.get(aanw.naam+\",\"+aanw.voornaam);\r\n                if(week) {\r\n                    if (aanw.weken) {\r\n                        aanw.weken += \" + \" + week.weken;\r\n                    } else {\r\n                        aanw.weken = week.weken.toString();\r\n                    }\r\n                }\r\n                return aanw;\r\n            });\r\n\r\n        let studentVakPees = new Map<string, number>();\r\n        let leraarPees = new Map<string, number>();\r\n\r\n        pList\r\n            .filter(line => line.code === \"P\")\r\n            .forEach(p => {\r\n               studentVakPees.set(p.naam+\",\"+p.voornaam+\",\"+p.vak, (studentVakPees.get(p.naam+\",\"+p.voornaam+\",\"+p.vak)??0)+1);\r\n               leraarPees.set(p.leraar, (leraarPees.get(p.leraar)??0)+1);\r\n            });\r\n\r\n        console.log(studentVakPees);\r\n        console.log(leraarPees);\r\n\r\n        aanwList.forEach(aanw => {\r\n            let newP = studentVakPees.get(aanw.naam+\",\"+aanw.voornaam+\",\"+aanw.vakReduced)??0;\r\n            if(newP > aanw.codeP)\r\n                aanw.codeP = newP;\r\n        });\r\n\r\n        aanwList.forEach(aanw => {\r\n            text += \"lln: \" + aanw.naam + \",\" + aanw.voornaam + \",\" + aanw.vakReduced + \",\" + aanw.percentFinancierbaar + \",\" + aanw.weken + \",\" + aanw.codeP + \"\\n\";\r\n        });\r\n        leraarPees.forEach((leraarP , key)=> {\r\n            text += \"leraar: \" + key + \",\" + leraarP + \"\\n\";\r\n        });\r\n        attestenLijst.forEach((attest)=> {\r\n            text += \"attest: \" + attest.datum + \",\" + attest.leerling + \",\" + attest.vak + \",\" + attest.leraar + \",\" + attest.reden + \"\\n\";\r\n        });\r\n        console.log(text);\r\n        window.sessionStorage.setItem(def.AANW_LIST, text);\r\n        aanwezighedenToClipboard();\r\n\r\n        //replace the visible table\r\n        tableDef.tableRef.getOrgTable()\r\n            .querySelector(\"tbody\")\r\n            .replaceChildren(...fetchedTable.getRows());\r\n    });\r\n}\r\n\r\nfunction aanwezighedenToClipboard() {\r\n    let text = window.sessionStorage.getItem(def.AANW_LIST);\r\n    navigator.clipboard.writeText(text)\r\n        .then(r => {\r\n            showInfoMessage(\"Data copied to clipboard. <a id=\"+def.COPY_AGAIN+\" href='javascript:void(0);'>Copy again</a>\", def.COPY_AGAIN, () => {\r\n                aanwezighedenToClipboard();\r\n            });\r\n        })\r\n        .catch(reason => {\r\n            showInfoMessage(\"Could not copy to clipboard!!! <a id=\"+def.COPY_AGAIN+\" href='javascript:void(0);'>Copy again</a>\", def.COPY_AGAIN, () => {\r\n                aanwezighedenToClipboard();\r\n            });\r\n        });\r\n}\r\n\r\nfunction reduceVaknaam(vaknaam: string) : string {\r\n    let vak = reduceVaknaamStep1(vaknaam);\r\n    return vak\r\n        .replace(\"orkestslagwerk\", \"slagwerk\")\r\n        .replace(\"jazz pop rock)\", \"JPR\")\r\n        .replace(\"koor\", \"GM\")\r\n        .replace(\": musical\", \"\")\r\n        .replace(\" (musical)\", \"\");\r\n}\r\n\r\nfunction reduceVaknaamStep1(vaknaam: string) : string {\r\n    vaknaam = vaknaam.toLowerCase();\r\n    if (vaknaam.includes(\"culturele vorming\")) {\r\n        if(vaknaam.includes(\"3.\"))\r\n            return \"ML\";\r\n        else\r\n            return \"MA\";\r\n    }\r\n    if (vaknaam.includes(\"uziekatelier\")) {\r\n        return \"MA\";\r\n    }\r\n    if (vaknaam.includes(\"uzieklab\")) {\r\n        return \"ML\";\r\n    }\r\n    if (vaknaam.includes(\"roepsmusiceren\")) {\r\n        return \"GM\";\r\n    }\r\n    if (vaknaam.includes(\"theorie\")) {\r\n        return \"MT\";\r\n    }\r\n    if (vaknaam.includes(\"geleidingspraktijk\")) {\r\n        return \"BP\";\r\n    }\r\n    if (vaknaam.includes(\"oordatelier\")) {\r\n        return \"WA\";\r\n    }\r\n    if (vaknaam.includes(\"oordlab\")) {\r\n        return \"WL\";\r\n    }\r\n    if (vaknaam.includes(\"mprovisatie\")) {\r\n        return \"impro\";\r\n    }\r\n    if (vaknaam.includes(\"omeinoverschrijdende\")) {\r\n        return \"KB\";\r\n    }\r\n    if (vaknaam.includes(\"unstenbad\")) {\r\n        return \"KB\";\r\n    }\r\n    if (vaknaam.includes(\"ramalab\")) {\r\n        return \"DL\";\r\n    }\r\n    if (vaknaam.includes(\"oordstudio\")) {\r\n        return \"WS\";\r\n    }\r\n    if (vaknaam.includes(\"ramastudio\")) {\r\n        return \"DS\";\r\n    }\r\n    if (vaknaam.includes(\"ompositie\")) {\r\n        return \"compositie\";\r\n    }\r\n    if (vaknaam.includes(\" saz\")) {\r\n        return \"saz\";\r\n    }\r\n    if (vaknaam.includes(\"instrument: klassiek: \")) {\r\n        let rx = /instrument: klassiek: (\\S*)/;\r\n        let matches = vaknaam.match(rx);\r\n        if(matches.length > 1)\r\n            return matches[1];\r\n        else\r\n            return vaknaam;\r\n    }\r\n    if (vaknaam.includes(\"instrument: jazz-pop-rock: \")) {\r\n        let rx = /instrument: jazz-pop-rock: (\\S*)/;\r\n        let matches = vaknaam.match(rx);\r\n        if(matches.length > 1) {\r\n            if(matches[1].includes(\"elektrische\"))\r\n                return \"gitaar JPR\"\r\n            else\r\n                return matches[1] + \" JPR\";\r\n        }\r\n        else\r\n            return vaknaam;\r\n    }\r\n\r\n    if (vaknaam.includes(\"rrangeren\") || vaknaam.includes(\"opname\") || vaknaam.includes(\"electronics\")) {\r\n        return \"elektronische muziek\";\r\n    }\r\n    let rx2 = /(.*).\u2022./;\r\n    let matches = vaknaam.match(rx2);\r\n    if(matches.length > 1)\r\n        return matches[1];\r\n    return \"??\";\r\n}", "import {ExactHashObserver} from \"../pageObserver\";\r\nimport {fetchStudentsSearch, rxEmail, setViewFromCurrentUrl, whoAmI} from \"../globals\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\n\r\nexport default new ExactHashObserver(\"#extra-tickets?h=afwezigheden\", onMutation, true);\r\n\r\nfunction onMutation (mutation: MutationRecord) {\r\n    if (mutation.target === document.getElementById(\"ticket_payload\")){\r\n        // noinspection JSIgnoredPromiseFromCall\r\n        onTicket();\r\n        return true;\r\n    }\r\n    if (mutation.target === document.getElementById(\"dko3_modal_contents\")){\r\n        onAddMelding();\r\n        return true;\r\n    }\r\n\r\n    if (mutation.target === document.getElementById(\"div_tickets_afwezigheid_toevoegen_leerling\")\r\n        && mutation.addedNodes.length > 0) {\r\n        setTimeout(gotoVolgende, 10); //wait for document.ready\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction gotoVolgende() {\r\n    let table = document.querySelector(\"#div_tickets_afwezigheid_toevoegen_leerling table\") as HTMLTableElement;\r\n    let tableHasOneStudent = table.querySelectorAll(\"i.fa-square\").length === 1;\r\n    if(tableHasOneStudent) {\r\n        let tr = document.querySelector(\".tr-ticket-afwezigheidsmelding-leerling\") as HTMLTableRowElement;\r\n        tr.click();\r\n        document.getElementById(\"btn_opslaan_tickets_afwezigheid_toevoegen\").click();\r\n    }\r\n}\r\n\r\nfunction addMatchingStudents() {\r\n    let leerlingLabel = document.querySelector(\"#form_field_tickets_afwezigheid_toevoegen_leerling_zoeken > label\") as HTMLLabelElement;\r\n    if (leerlingLabel && !leerlingLabel.dataset.filled) {\r\n        leerlingLabel.dataset.filled = \"true\";\r\n        leerlingLabel.textContent = \"Leerling:   reeds gevonden: \";\r\n        let target = leerlingLabel as HTMLElement;\r\n        for (let lln of matchingLeerlingen) {\r\n            let anchorClasses = lln.winner ? \".bold\" : \"\";\r\n            function hook(el: HTMLElement) {\r\n                if(el.tagName == \"A\") {\r\n                    el.onclick = () => fillAndClick(lln.name);\r\n                }\r\n            }\r\n            target = emmet.insertAfter(target, `a[href=\"#\"].leerlingLabel${anchorClasses}{${lln.name}}`, undefined, hook).first as HTMLElement;\r\n        }\r\n    }\r\n}\r\n\r\nfunction addEmailText() {\r\n    let emailDiv  = emmet.create('div.modal-body>div>button#btnShowEmail{Show email}.btn.btn-sm.btn-outline-success+div#showEmail.collapsed').last;\r\n    emailDiv.innerHTML = currentEmailHtml;\r\n    document.getElementById(\"btnShowEmail\").addEventListener(\"click\", showEmail);\r\n}\r\n\r\nfunction showEmail() {\r\n    document.getElementById(\"showEmail\").classList.toggle(\"collapsed\");\r\n}\r\n\r\nfunction onAddMelding() {\r\n    addMatchingStudents();\r\n    addEmailText();\r\n}\r\n\r\nfunction fillAndClick(name: string) {\r\n    let formDiv = document.querySelector(\"#form_field_tickets_afwezigheid_toevoegen_leerling_zoeken\") as HTMLDivElement;\r\n    let input = formDiv.querySelector(\"input\");\r\n    input.value = name;\r\n    let button = formDiv.querySelector(\"button\");\r\n    button.click();\r\n    return false;\r\n}\r\n\r\nlet matchingLeerlingen: MatchingLeerling[] = [];\r\n\r\ninterface MatchingLeerling {\r\n    id: string\r\n    name: string\r\n    weight: number,\r\n    winner: boolean\r\n}\r\n\r\nlet currentEmailHtml = \"\";\r\n\r\nasync function onTicket() {\r\n    let card_bodyDiv = document.querySelector(\".card-body\");\r\n    if(!card_bodyDiv)\r\n        return;\r\n    let emailText = card_bodyDiv.textContent;\r\n    currentEmailHtml = card_bodyDiv.innerHTML;\r\n\r\n    let matches = [...emailText.matchAll(rxEmail)];\r\n    let uniqueEmails = [...new Set(matches.map(match => match[0]))];\r\n    \r\n    let {email: myEmail} = whoAmI();\r\n    uniqueEmails = uniqueEmails.filter(m => m != myEmail);\r\n    console.log(uniqueEmails);\r\n\r\n    let template = document.createElement(\"div\");\r\n    template.innerHTML = await fetchStudentsSearch(uniqueEmails.join(\" \"));\r\n    let tdLln = [...template.querySelectorAll(\"td\")];\r\n    matchingLeerlingen = tdLln.map(td => {\r\n        let id = td.querySelector(\"small\").textContent;\r\n        let name = td.querySelector(\"strong\").textContent;\r\n        setViewFromCurrentUrl();\r\n        return <MatchingLeerling>{id, name, weight: 0, winner: false};\r\n    });\r\n    findUniqueMatch(emailText, matchingLeerlingen);\r\n}\r\n\r\nfunction findUniqueMatch(emailText: string, matchingLeerlingen: MatchingLeerling[]) {\r\n    if(matchingLeerlingen.length === 1)\r\n        return matchingLeerlingen[0];\r\n\r\n    //lln: [Erik Pierre Bongers, Iris Marlies Bongers]\r\n    // \"Onzen Erik is ziek.\"\r\n    // Erik: weight:2, Iris: 1\r\n    let mailLowerCase = emailText.toLowerCase();\r\n    for(let lln of matchingLeerlingen) {\r\n        let nameParts = lln.name.split(\" \");\r\n        for(let namePart of nameParts) {\r\n            if(emailText.includes(\" \"+namePart+\" \")) {\r\n                lln.weight++;\r\n            }\r\n            if(mailLowerCase.includes(\" \"+namePart.toLowerCase()+\" \")) {\r\n                lln.weight++;\r\n            }\r\n        }\r\n    }\r\n    //do we have a winner?\r\n    matchingLeerlingen.sort((a, b) => b.weight - a.weight);\r\n    if(matchingLeerlingen[0].weight > matchingLeerlingen[1].weight)\r\n        matchingLeerlingen[0].winner = true;\r\n}", "import {calculateSchooljaar, clamp, createShortSchoolyearString, isAlphaNumeric} from \"./globals\";\r\nimport * as def from \"./def\";\r\nimport {getPageStateOrDefault, Goto, PageName, savePageState} from \"./pageState\";\r\n\r\nlet powerQueryItems: QueryItem[] = [];\r\nlet popoverVisible = false;\r\nlet selectedItem = 0;\r\ntype GotoFunc = (queryItem: QueryItem) => void;\r\n\r\nexport interface QueryItem {\r\n    headerLabel: string;\r\n    label: string;\r\n    href: string;\r\n    weight: number;\r\n    longLabel: string;\r\n    lowerCase: string;\r\n    func?: GotoFunc;\r\n}\r\n\r\nexport function saveQueryItems(page: string, queryItems: QueryItem[]) {\r\n    let savedPowerQueryString = localStorage.getItem(def.POWER_QUERY_ID);\r\n    if(!savedPowerQueryString) {\r\n        savedPowerQueryString = \"{}\";\r\n    }\r\n    let savedPowerQuery = JSON.parse(savedPowerQueryString);\r\n    savedPowerQuery[page] = queryItems;\r\n    localStorage.setItem(def.POWER_QUERY_ID, JSON.stringify(savedPowerQuery));\r\n}\r\n\r\nfunction getSavedQueryItems(): QueryItem[] {\r\n    let savedPowerQueryString = localStorage.getItem(def.POWER_QUERY_ID);\r\n    if(!savedPowerQueryString) {\r\n        return [];\r\n    }\r\n    let allItems = [];\r\n    let savedPowerQuery = JSON.parse(savedPowerQueryString);\r\n    for(let page in savedPowerQuery) {\r\n        allItems.push(...savedPowerQuery[page]);\r\n    }\r\n    return allItems;\r\n}\r\n\r\nfunction screpeDropDownMenu(headerMenu: Element) {\r\n    let headerLabel = headerMenu.querySelector(\"a\").textContent.trim();\r\n\r\n    let newItems = Array.from(headerMenu.querySelectorAll(\"div.dropdown-menu > a\") as NodeListOf<HTMLAnchorElement>)\r\n        .map((item) => {\r\n            let queryItem: QueryItem = {\r\n                func: undefined,\r\n                headerLabel,\r\n                label: item.textContent.trim(),\r\n                href: item.href,\r\n                weight: 0,\r\n                longLabel: \"\",\r\n                lowerCase: \"\"\r\n            };\r\n            queryItem.longLabel = queryItem.headerLabel + \" > \" + queryItem.label;\r\n            queryItem.lowerCase = queryItem.longLabel.toLowerCase();\r\n            return queryItem;\r\n        })\r\n        .filter((item) => item.label != \"\" && item.href != \"\" && item.href != \"https://administratie.dko3.cloud/#\");\r\n    powerQueryItems.push(...newItems);\r\n}\r\n\r\nfunction scrapeMainMenu() {\r\n    powerQueryItems = [];\r\n    let menu = document.getElementById(\"dko3_navbar\");\r\n    let headerMenus = menu.querySelectorAll(\"#dko3_navbar > ul.navbar-nav > li.nav-item.dropdown\");\r\n    for(let headerMenu of headerMenus.values()) {\r\n        screpeDropDownMenu(headerMenu);\r\n    }\r\n}\r\n\r\nexport function setupPowerQuery() {\r\n    //don' do nottin' - just initialize this module, below.\r\n}\r\n\r\nfunction gotoWerklijstUrenNextYear(_queryItem: QueryItem) {\r\n    let pageState = getPageStateOrDefault(PageName.Werklijst);\r\n    pageState.goto = Goto.Werklijst_uren_nextYear;\r\n    savePageState(pageState);\r\n    location.href = \"/#leerlingen-werklijst\";\r\n}\r\n\r\nfunction gotoWerklijstUrenPrevYear(_queryItem: QueryItem) {\r\n    let pageState = getPageStateOrDefault(PageName.Werklijst);\r\n    pageState.goto = Goto.Werklijst_uren_prevYear;\r\n    savePageState(pageState);\r\n    location.href = \"/#leerlingen-werklijst\";\r\n}\r\n\r\nfunction getHardCodedQueryItems() {\r\n    let items: QueryItem[] = [];\r\n    let item: QueryItem = {\r\n        headerLabel: \"Werklijst\", href: \"\", label: \"Lerarenuren \" +createShortSchoolyearString(calculateSchooljaar()), longLabel: \"\", lowerCase: \"\", weight: 0\r\n    }\r\n    item.longLabel = item.headerLabel + \" > \" + item.label;\r\n    item.lowerCase = item.longLabel.toLowerCase();\r\n    item.func = gotoWerklijstUrenPrevYear;\r\n    items.push(item);\r\n\r\n    item = {\r\n        headerLabel: \"Werklijst\", href: \"\", label: \"Lerarenuren \" +createShortSchoolyearString(calculateSchooljaar()+1), longLabel: \"\", lowerCase: \"\", weight: 0\r\n    }\r\n    item.longLabel = item.headerLabel + \" > \" + item.label;\r\n    item.lowerCase = item.longLabel.toLowerCase();\r\n    item.func = gotoWerklijstUrenNextYear;\r\n    items.push(item);\r\n    return items;\r\n}\r\n\r\ndocument.body.addEventListener(\"keydown\", showPowerQuery);\r\n\r\nfunction showPowerQuery(ev: KeyboardEvent) {\r\n    if (ev.key === \"q\" && ev.ctrlKey && !ev.shiftKey && !ev.altKey) {\r\n        scrapeMainMenu();\r\n        powerQueryItems.push(...getSavedQueryItems());\r\n        powerQueryItems.push(...getHardCodedQueryItems());\r\n        popover.showPopover();\r\n    } else {\r\n        if (popoverVisible === false)\r\n            return;\r\n        if (isAlphaNumeric(ev.key) || ev.key === ' ') {\r\n            searchField.textContent += ev.key;\r\n            selectedItem = 0; //back to top.\r\n        } else if (ev.key == \"Escape\") {\r\n            if(searchField.textContent !== \"\") {\r\n                searchField.textContent = \"\";\r\n                selectedItem = 0;\r\n                ev.preventDefault();\r\n            }\r\n            //else: default behaviour: close popup.\r\n        } else if (ev.key == \"Backspace\") {\r\n            searchField.textContent = searchField.textContent.slice(0, -1);\r\n        } else if (ev.key == \"ArrowDown\") {\r\n            selectedItem++;\r\n            ev.preventDefault();\r\n        } else if (ev.key == \"ArrowUp\") {\r\n            selectedItem--;\r\n            ev.preventDefault();\r\n        } else if (ev.key == \"Enter\") {\r\n            let item = powerQueryItems.find((item) => item.longLabel === (list.children[selectedItem] as HTMLElement).dataset.longLabel);\r\n            popover.hidePopover();\r\n            if (item.func) {\r\n                item.func(item);\r\n            } else {\r\n                location.href = item.href;\r\n            }\r\n            ev.preventDefault();\r\n        }\r\n    }\r\n    filterItems(searchField.textContent);\r\n}\r\n\r\nlet popover = document.createElement(\"div\");\r\ndocument.querySelector(\"main\").appendChild(popover);\r\npopover.setAttribute(\"popover\", \"auto\");\r\npopover.id = \"powerQuery\";\r\npopover.addEventListener(\"toggle\", (ev) => {\r\n    // @ts-ignore\r\n    popoverVisible = ev.newState === \"open\";\r\n});\r\nlet searchField = document.createElement(\"label\");\r\npopover.appendChild(searchField);\r\nlet list = document.createElement(\"div\");\r\npopover.appendChild(list);\r\nlist.classList.add(\"list\");\r\n\r\nfunction filterItems(needle: string) {\r\n    for (const item of powerQueryItems) {\r\n        item.weight = 0;\r\n        //exact match\r\n        if (item.lowerCase.includes(needle))\r\n            item.weight += 1000;\r\n\r\n        //exact match of each word in needle.\r\n        let needleWordsWithSeparator = needle.split(/(?= )/g);\r\n        if (needleWordsWithSeparator.every(word => item.lowerCase.includes(word)))\r\n            item.weight += 500;\r\n\r\n        //all chars match  in order\r\n        let indices = needle.split('')\r\n            .map(char => item.lowerCase.indexOf(char));\r\n        if(indices.every(num => num !== -1) && isSorted(indices))\r\n            item.weight += 50;\r\n\r\n        //all chars match\r\n        if (needle.split('')\r\n            .every(char => item.lowerCase.includes(char)))\r\n            item.weight += 20;\r\n    }\r\n\r\n    const MAX_VISIBLE_QUERY_ITEMS = 30;\r\n    list.innerHTML = powerQueryItems\r\n        .filter((item) => item.weight != 0)\r\n        .sort((a, b) => b.weight - a.weight)\r\n        .map((item) => `<div data-long-label=\"${item.longLabel}\">${item.longLabel}</div>`)\r\n        .slice(0, MAX_VISIBLE_QUERY_ITEMS)\r\n        .join(\"\\n\");\r\n    selectedItem = clamp(selectedItem, 0, list.children.length - 1);\r\n    list.children[selectedItem]?.classList.add(\"selected\");\r\n}\r\n\r\nfunction isSorted(arr: number[]) {\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n        if (arr[i] > arr[i + 1]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}", "import {ExactHashObserver, HashObserver} from \"../pageObserver\";\r\nimport {QueryItem, saveQueryItems} from \"../setupPowerQuery\";\r\n\r\nexport let extraInschrijvingenObserver = new ExactHashObserver(\"#extra-inschrijvingen\", onMutationExtraInschrijvingen);\r\nexport let allLijstenObserver = new ExactHashObserver(\"#leerlingen-lijsten\", onMutationAlleLijsten);\r\nexport let financialObserver = new ExactHashObserver(\"#extra-financieel\", onMutationFinancial);\r\nexport let assetsObserver = new ExactHashObserver(\"#extra-assets\", onMutationAssets);\r\nexport let evaluatieObserver = new ExactHashObserver(\"#extra-evaluatie\", onMutationEvaluatie);\r\nexport let academieMenuObserver = new ExactHashObserver(\"#extra-academie\", onMutationAcademie);\r\n\r\ntype LinkToQueryConverter = (headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) => QueryItem;\r\n\r\nfunction onMutationAcademie(_mutation: MutationRecord) {\r\n    saveQueryItems(\"Academie\", scrapeMenuPage(\"Academie > \", defaultLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction onMutationAssets(_mutation: MutationRecord) {\r\n    saveQueryItems(\"Assets\", scrapeMenuPage(\"Assets > \", defaultLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction onMutationEvaluatie(_mutation: MutationRecord) {\r\n    saveQueryItems(\"Evaluatie\", scrapeMenuPage(\"Evaluatie > \", defaultLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction onMutationFinancial(_mutation: MutationRecord) {\r\n    saveQueryItems(\"Financieel\", scrapeMenuPage(\"Financieel > \", defaultLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction onMutationAlleLijsten(_mutation: MutationRecord) {\r\n    saveQueryItems(\"Lijsten\", scrapeMenuPage(\"Lijsten > \", defaultLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction onMutationExtraInschrijvingen(_mutation: MutationRecord) {\r\n    saveQueryItems(\"ExtraInschrijvingen\", scrapeMenuPage(\"Inschrijvingen > \", inschrijvingeLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction inschrijvingeLinkToQueryItem(headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) {\r\n    let item: QueryItem = {\r\n        headerLabel, href: link.href, label: link.textContent.trim(), longLabel: \"\", lowerCase: \"\", weight: 0\r\n    };\r\n    if (item.label.toLowerCase().includes(\"inschrijving\")) {\r\n        item.longLabel = item.headerLabel + \" > \" + item.label;\r\n    } else {\r\n        item.longLabel = longLabelPrefix + item.headerLabel + \" > \" + item.label;\r\n    }\r\n    item.lowerCase = item.longLabel.toLowerCase();\r\n    return item;\r\n}\r\n\r\nfunction defaultLinkToQueryItem(headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) {\r\n    let item: QueryItem = {\r\n        headerLabel, href: link.href, label: link.textContent.trim(), longLabel: \"\", lowerCase: \"\", weight: 0\r\n    };\r\n    item.longLabel = longLabelPrefix + item.label;\r\n    item.lowerCase = item.longLabel.toLowerCase();\r\n    return item;\r\n}\r\n\r\nfunction scrapeMenuPage(longLabelPrefix: string, linkConverter: LinkToQueryConverter) {\r\n    let queryItems: QueryItem[] = [];\r\n    let blocks = document.querySelectorAll(\"div.card-body\");\r\n    for(let block of blocks){\r\n        let header = block.querySelector('h5');\r\n        if(!header) {\r\n            continue;\r\n        }\r\n        let headerLabel = header.textContent.trim();\r\n        let links = block.querySelectorAll(\"a\");\r\n        for(let link of links) {\r\n            if(!link.href)\r\n                continue;\r\n            let item = linkConverter(headerLabel, link, longLabelPrefix);\r\n            queryItems.push(item);\r\n        }\r\n    }\r\n    return queryItems;\r\n}\r\n", "//to avoid \"unused function\" errors in linters, this file is called as a module.\r\nimport {equals, fetchGlobalSettings, getGlobalSettings, observers, options, registerObserver, setGlobalSetting, settingsObservers} from \"./globals\";\r\nimport leerlingObserver from \"./leerling/observer\";\r\nimport lessenObserver from \"./lessen/observer\";\r\nimport lesObserver from \"./les/observer\";\r\nimport academieObserver from \"./academie/observer\";\r\nimport werklijstObserver from \"./werklijst/observer\";\r\nimport tableObserver from \"./table/observer\";\r\nimport vakgroepObserver from \"./vakgroep/observer\";\r\nimport smsObserver from \"./verwittigen/observer\";\r\nimport aanwezighedenObserver from \"./aanwezigheden/observer\";\r\nimport afwezighedenObserver from \"./afwezigheden/observer\";\r\nimport {setupPowerQuery} from \"./setupPowerQuery\";\r\nimport {academieMenuObserver, allLijstenObserver, assetsObserver, evaluatieObserver, extraInschrijvingenObserver, financialObserver} from \"./pages/observer\";\r\n\r\ninit();\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nfunction init() {\r\n    getOptions()\r\n        .then(() => {\r\n        // @ts-ignore\r\n        chrome.storage.onChanged.addListener((_changes: any, area: string) => {\r\n            if (area === 'sync') {\r\n                getOptions().then(r => {\r\n                    onSettingsChanged();\r\n                });\r\n            }\r\n        });\r\n\r\n        // @ts-ignore\r\n        window.navigation.addEventListener(\"navigatesuccess\", () => {\r\n            checkGlobalSettings();\r\n            onPageChanged();\r\n        });\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            onPageChanged();\r\n        });\r\n\r\n        //do registrations here to get all these observers/pages into the same compilation unit.\r\n        registerObserver(leerlingObserver);\r\n        registerObserver(lessenObserver);\r\n        registerObserver(lesObserver);\r\n        registerObserver(academieObserver);\r\n        registerObserver(werklijstObserver);\r\n        registerObserver(tableObserver);\r\n        registerObserver(extraInschrijvingenObserver);\r\n        registerObserver(allLijstenObserver);\r\n        registerObserver(financialObserver);\r\n        registerObserver(assetsObserver);\r\n        registerObserver(evaluatieObserver);\r\n        registerObserver(vakgroepObserver);\r\n        registerObserver(smsObserver);\r\n        registerObserver(academieMenuObserver);\r\n        registerObserver(aanwezighedenObserver);\r\n        registerObserver(afwezighedenObserver);\r\n        onPageChanged();\r\n        setupPowerQuery();\r\n    });\r\n}\r\n\r\nlet lastCheckTime = Date.now();\r\nfunction checkGlobalSettings() {\r\n    if(Date.now() > (lastCheckTime+10*1000)) {\r\n        lastCheckTime = Date.now();\r\n        console.log(\"Re-fetching global settings.\");\r\n        fetchGlobalSettings(getGlobalSettings()).then(r => {\r\n            if(!equals(getGlobalSettings(), r)) {\r\n                setGlobalSetting(r);\r\n                onSettingsChanged();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction onSettingsChanged() {\r\n    console.log(\"on settings changed.\");\r\n    for(let observer of settingsObservers) {\r\n        observer();\r\n    }\r\n}\r\n\r\nexport function onPageChanged() {\r\n    if(getGlobalSettings().globalHide) {\r\n        return;\r\n    }\r\n    for(let observer of observers) {\r\n        observer.onPageChanged();\r\n    }\r\n}\r\n\r\nasync function getOptions() {\r\n    // @ts-ignore\r\n    let items = await chrome.storage.sync.get(null); //get all\r\n    // @ts-ignore\r\n    Object.assign(options, items);\r\n    setGlobalSetting(await fetchGlobalSettings(getGlobalSettings()));\r\n}\r\n\r\n"],
  "mappings": ";;AAAO,MAAI,aAAa;AACjB,MAAI,kBAAkB;AACtB,MAAI,mBAAmB;AACvB,MAAI,mBAAmB;AACvB,MAAI,cAAc;AAClB,MAAI,wBAAwB;AAC5B,MAAI,oBAAoB;AACxB,MAAM,sBAAsB;AAC5B,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,kBAAkB;AACxB,MAAM,uBAAuB;AAC7B,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AACvB,MAAM,cAAc;AACpB,MAAM,WAAW;AACjB,MAAM,gBAAiB;AACvB,MAAM,cAAe;AACrB,MAAM,cAAe;AACrB,MAAM,YAAa;AACnB,MAAM,2BAA4B;AAElC,WAAS,oBAAoB,UAAkB;AAClD,WAAO,SAAS,eAAe,QAAQ,GAAG,UAAU,SAAS,SAAS;AAAA,EAC1E;AAEO,MAAM,oBAAoB;AAC1B,MAAM,iBAAiB;AACvB,MAAM,yBAAyB;AAG/B,MAAM,wBAAwB;;;AC7B9B,MAAI,QAAQ;AAAA,IACf,MAAM;AAAA,MACF,OAAO;AAAA,MACP,QAAQ;AAAA,IACZ;AAAA,EACJ;AAEA,iBAAsB,UAAU,UAAkB;AAC9C,WAAO,MAAU,WAAW,eAAa,UAAU,EAAC,QAAQ,MAAK,CAAC,EAC7D,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC;AAAA,EACjC;AAEA,iBAAsB,WAAW,UAAkB,MAAW;AAC1D,QAAI,MAAM,MAAM,MAAU,WAAW,eAAe,UAAU;AAAA,MAC1D,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,IAAI;AAAA,IAC7B,CAAC;AACD,WAAO,MAAM,IAAI,KAAK;AAAA,EAC1B;;;ACVO,MAAM,UAAmB;AAAA,IAC5B,WAAW;AAAA,IACX,aAAa;AAAA,IACb,wBAAwB;AAAA,IACxB,oBAAoB;AAAA,EACxB;AAEO,MAAI,YAAY,CAAC;AACjB,MAAI,oBAAoC,CAAC;AAEzC,WAAS,IAAI,SAAc;AAC9B,QAAI,SAAS,WAAW;AACpB,cAAQ,IAAI,OAAO;AACnB,cAAQ,IAAI,MAAM,EAAE,MAAM,MAAM,IAAI,EAAE,CAAC,CAAC;AAAA,IAC5C;AAAA,EACJ;AAEO,WAAS,cAAc,IAAY;AACtC,WAAO,GACF,WAAW,KAAK,EAAE,EAClB,UAAU,KAAK,EAAE,QAAQ,oBAAoB,EAAE,EAC/C,QAAQ,OAAM,EAAE;AAAA,EACzB;AAGO,WAAS,iBAAiB,UAAoB;AACjD,cAAU,KAAK,QAAQ;AACvB,QAAG,UAAU,SAAS;AAClB,cAAQ,MAAM,qBAAqB;AAAA,EAC3C;AAEO,WAAS,yBAAyB,UAAsB;AAC3D,sBAAkB,KAAK,QAAQ;AAC/B,QAAG,kBAAkB,SAAS;AAC1B,cAAQ,MAAM,6BAA6B;AAAA,EACnD;AAUO,WAAS,qBAAqB,UAAkB,MAAe;AAClE,QAAI,MAAM;AACN,eAAS,eAAe,QAAQ,EAAE,UAAU,IAAI,SAAS;AAAA,IAC7D,OAAO;AACH,eAAS,eAAe,QAAQ,EAAE,UAAU,OAAO,SAAS;AAAA,IAChE;AAAA,EACJ;AAEO,WAAS,UAAU,eAA4B,UAAkB,OAAe,eAA0C,SAAiB,WAAqB,OAAO,IAAI,QAAwB,eAAe;AACrN,QAAI,SAAS,SAAS,eAAe,QAAQ;AAC7C,QAAI,WAAW,MAAM;AACjB,YAAMA,UAAS,SAAS,cAAc,QAAQ;AAC9C,MAAAA,QAAO,UAAU,IAAI,OAAuD,GAAG,SAAS;AACxF,MAAAA,QAAO,KAAK;AACZ,MAAAA,QAAO,MAAM,YAAY;AACzB,MAAAA,QAAO,UAAU;AACjB,MAAAA,QAAO,QAAQ;AACf,UAAG,MAAM;AACL,YAAI,OAAO,SAAS,cAAc,MAAM;AACxC,QAAAA,QAAO,YAAY,IAAI;AACvB,aAAK,YAAY;AAAA,MACrB;AACA,YAAM,gBAAgB,SAAS,cAAc,GAAG;AAChD,MAAAA,QAAO,YAAY,aAAa;AAChC,UAAG;AACC,sBAAc,UAAU,IAAI,OAAO,OAAO;AAC9C,oBAAc,sBAAsB,OAAOA,OAAM;AAAA,IACrD;AAAA,EACJ;AAEO,WAAS,6BAA6B;AACzC,QAAI,UAAU,SAAS,iBAAiB,QAAQ;AAChD,WAAO,MAAM,KAAK,OAAO,EACpB,OAAO,CAAC,YAAY,QAAQ,GAAG,SAAS,YAAY,CAAC,EACrD,IAAI;AAAA,EACb;AAEO,WAAS,gCAAgC;AAC5C,QAAI,KAAK,2BAA2B;AACpC,QAAG,CAAC;AACA,aAAO;AACX,WAAO,MAAM,KAAK,GAAG,iBAAiB,QAAQ,CAAC,EAC1C,IAAI,YAAU,OAAO,KAAK,EAC1B,KAAK,EACL,IAAI;AAAA,EACb;AAEO,WAAS,iBAAiB;AAC7B,QAAI,KAAK,2BAA2B;AACpC,QAAG;AACC,aAAO,GAAG;AACd,SAAK,SAAS,cAAc,mBAAmB;AAC/C,WAAO,GAAG,YAAY,MAAM,8BAA8B,EAAE,CAAC;AAAA,EACjE;AAEO,WAAS,sBAAsB;AAClC,QAAI,MAAM,oBAAI,KAAK;AACnB,QAAI,OAAO,IAAI,YAAY;AAC3B,QAAI,QAAQ,IAAI,SAAS;AACzB,QAAG,QAAQ;AACP,aAAO,OAAK;AAChB,WAAO;AAAA,EACX;AAEO,WAAS,uBAAuB,WAAmB;AACtD,WAAO,GAAG,SAAS,IAAI,YAAU,CAAC;AAAA,EACtC;AAEO,WAAS,4BAA4B,WAAmB;AAC3D,WAAO,GAAG,YAAU,GAAI,IAAK,YAAU,MAAM,CAAC;AAAA,EAClD;AAEO,WAAS,uBAAuB;AACnC,QAAI,SAAS,SAAS,cAAc,sDAAsD;AAC1F,UAAM,eAAe;AACrB,UAAMC,SAAQ,OAAO,YAAY,MAAM,YAAY;AACnD,QAAIA,QAAO,WAAW,GAAG;AACrB,YAAM,IAAI,MAAM,kCAAkC,OAAO,WAAW,GAAG;AAAA,IAC3E;AACA,QAAI,WAAWA,OAAM,CAAC;AACtB,QAAI,aAAaA,OAAM,CAAC;AACxB,WAAO,EAAC,UAAU,WAAU;AAAA,EAChC;AAEO,WAAS,oBAAoB;AAChC,QAAI,EAAC,WAAU,IAAI,qBAAqB;AACxC,iBAAa,WACR,QAAQ,aAAa,EAAE,EACvB,QAAQ,UAAU,GAAG,EACrB,QAAQ,SAAS,GAAG,EACpB,YAAY;AACjB,WAAO,cAAc,UAAU;AAAA,EACnC;AAEO,WAAS,eAAe,UAAkB;AAC7C,QAAI,UAAU,KAAK,MAAO,WAAW,MAAQ,EAAE;AAC/C,QAAI,UAAU,KAAK,MAAO,YAAY,MAAO,MAAO,EAAE;AACtD,QAAI,QAAQ,KAAK,MAAO,YAAY,MAAO,KAAK,MAAO,EAAE;AACzD,QAAI,OAAO,KAAK,MAAO,YAAY,MAAO,KAAK,KAAK,GAAI;AAExD,QAAI,OAAO;AACP,aAAO,QAAQ,SAAS,IAAI,SAAS;AAAA,aAChC,QAAQ;AACb,aAAO,QAAQ;AAAA,aACV,UAAU;AACf,aAAO,WAAW,YAAY,IAAI,YAAY;AAAA,aACzC,UAAU;AACf,aAAO,UAAU;AAAA,QAChB,QAAO;AAAA,EAChB;AAEO,WAAS,MAAM,OAAe,KAAa,KAAa;AAC3D,WAAO,KAAK,IAAI,KAAK,IAAI,OAAO,GAAG,GAAG,GAAG;AAAA,EAC7C;AAEO,WAAS,eAAe,KAAa;AACxC,QAAI,IAAI,SAAS;AACb,aAAO;AACX,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,SAAK,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK;AACxC,aAAO,IAAI,WAAW,CAAC;AACvB,UAAI,EAAE,OAAO,MAAM,OAAO;AAAA,MACtB,EAAE,OAAO,MAAM,OAAO;AAAA,MACtB,EAAE,OAAO,MAAM,OAAO,MAAM;AAC5B,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAEO,WAAS,eAAe,OAAe,MAAc,OAAO,GAAa;AAC5E,WAAO,MAAM,KAAK,MAAM,OAAO,SAAS,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,IAAI,IAAI;AAAA,EACzF;AAEO,WAAS,mBAAmB,IAAYC,gBAAmC,OAAe;AAC7F,QAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,UAAM,OAAO;AACb,UAAM,KAAK;AACX,UAAM,UAAU,IAAI,aAAa;AACjC,UAAM,UAAUA;AAChB,UAAM,QAAQ;AACd,UAAM,cAAc;AACpB,WAAO;AAAA,EACX;AAQA,WAAS,qBAAqB,YAAoB,SAAiB;AAC/D,QAAI,kBAAkB,WAAW,MAAM,GAAG,EAAE,IAAI,SAAO,IAAI,KAAK,CAAC;AACjE,aAAQ,UAAU,iBAAiB;AAC/B,UAAI,WAAW;AACf,UAAI,WAAW,OAAO,YAAY,GAAG;AACjC,mBAAW,QAAQ,YAAY;AAAA,MACnC;AACA,UAAI,CAAC,SAAS,SAAS,MAAM;AACzB,eAAO;AAAA,IACf;AACA,WAAO;AAAA,EACX;AAEO,WAAS,gBAAgB,OAAoC,WAAqB;AACrF,QAAG,OAAO,UAAU;AAChB,cAAQ,SAAS,eAAe,KAAK;AACzC,WAAO,MAAM,KAAK,MAAM,QAAQ,CAAC,EAAE,IAAI,EAClC,OAAO,QAAM,UAAU,UAAU,IAAI,UAAU,OAAO,CAAC;AAAA,EAChE;AAEO,WAAS,YAAY,OAAoC,WAAqB;AACjF,QAAG,OAAO,UAAU;AAChB,cAAQ,SAAS,eAAe,KAAK;AACzC,aAAQ,MAAM,MAAM,QAAQ,CAAC,EAAE,MAAM;AACjC,SAAG,MAAM,aAAa;AACtB,SAAG,MAAM,cAAc;AAAA,IAC3B;AACA,aAAS,MAAM,gBAAgB,OAAO,SAAS,GAAG;AAC9C,UAAG,CAAC,GAAG,QAAQ,YAAY;AACvB,WAAG,MAAM,aAAa;AACtB,WAAG,MAAM,cAAc;AAAA,MAC3B;AAAA,IACJ;AAAA,EACJ;AAKO,WAAS,oBAAoB,YAAoB,kBAAkE;AACtH,QAAI,iBAAiB,WAAW,MAAM,GAAG,EAAE,IAAI,SAAO,IAAI,KAAK,CAAC;AAChE,QAAI,UAAU;AAAA,MACV;AAAA,MACA;AAAA,IACJ;AACA,QAAI,YAAY,SAAU,IAAyBC,UAAc;AAC7D,eAAQ,UAAUA,SAAQ,gBAAgB;AACtC,YAAI,UAAUA,SAAQ,iBAAiB,EAAE;AACzC,YAAI,qBAAqB,QAAQ,OAAO;AACpC,iBAAO;AAAA,MACf;AACA,aAAO;AAAA,IACX;AACA,WAAO,EAAC,SAAS,UAAS;AAAA,EAC9B;AAOO,WAAS,kBAAkB;AAC9B,QAAI,iBAAiB,SAAS,iBAAiB,kCAAkC;AACjF,QAAI,eAAe,SAAS;AACxB,aAAO;AACX,WAAO;AAAA,EACX;AAEO,WAAS,yBAAyB,gBAAqC,OAAe,OAAe,SAAc,YAAoB;AAC1I,cAAU,eAAe,CAAC,EAAE,kBAAiC,OAAO,OAAO,SAAS,YAAY,CAAC,eAAe,GAAG,IAAI,UAAU;AACjI,WAAO;AAAA,EACX;AAEO,WAAS,SAAe,OAAuB;AAClD,WAAO,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC;AAAA,EAC7B;AAEA,iBAAsB,oBAAoB,QAAgB;AACtD,WAAO,MAAM,gCAAgC,mBAAmB,MAAM,CAAC,EAClE,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAAC,UAAU,MAAM,8BAA8B,CAAC,EACrD,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,MAAM,SAAO;AACV,cAAQ,MAAM,kBAAkB,GAAG;AACnC,aAAO;AAAA,IACX,CAAC;AAAA,EACT;AAEA,iBAAsB,wBAAwB;AAC1C,QAAI,OAAO,OAAO,SAAS,KAAK,QAAQ,KAAK,EAAE;AAC/C,QAAI,OAAO,MAAM,MAAM,uCAAuC,IAAI,EAAE,KAAK,SAAO,IAAI,KAAK,CAAC;AAE1F,QAAI,OAAO,MAAM,MAAM,mBAAmB,IAAI,EAAE,KAAK,SAAO,IAAI,KAAK,CAAC;AAAA,EAC1E;AAMO,WAAS,OAAO,IAAoB,IAAmB;AAC1D,WACI,GAAG,eAAe,GAAG;AAAA,EAE7B;AAMA,iBAAsB,oBAAoB,iBAAiC;AACvE,WAAO,MAAM,MAAM,KAAK,MAAM,wBAAwB,EACjD,MAAM,SAAO;AACV,cAAQ,IAAI,GAAG;AACf,aAAO;AAAA,IACX,CAAC;AAAA,EACT;AAEA,MAAI,iBAAiC;AAAA,IACjC,YAAY;AAAA,EAChB;AAEO,WAAS,oBAAoB;AAChC,WAAO;AAAA,EACX;AACO,WAAU,iBAAiB,UAA0B;AACxD,qBAAiB;AAAA,EACrB;AAEO,MAAI,UAAU;AAEd,WAAS,SAAS;AACrB,QAAI,aAAa,SAAS,iBAAiB,QAAQ;AACnD,QAAI,cAAc,CAAC,GAAG,UAAU,EAAE,IAAI,OAAK,EAAE,WAAW,EAAE,KAAK;AAC/D,QAAI,QAAQ,YAAY,MAAM,OAAO,EAAE,CAAC;AACxC,QAAI,SAAS;AACb,QAAI,OAAO,YAAY,MAAM,MAAM,EAAE,CAAC;AACtC,WAAO,EAAC,OAAO,KAAI;AAAA,EACvB;AAEO,WAAS,iBAAiB,MAAsB;AACnD,WAAO,KAAK,WAAW,YAAY,GAAG,EAAE,WAAW,MAAM,GAAG;AAAA,EAChE;;;ACzVO,MAAM,iBAAN,MAA0C;AAAA,IAE7C,YAAY,SAAiB;AACzB,WAAK,UAAU;AAAA,IACnB;AAAA,IAEA,QAAQ;AACJ,aAAO,OAAO,SAAS,KAAK,WAAW,KAAK,OAAO;AAAA,IACvD;AAAA,EACJ;AAEO,MAAM,sBAAN,MAA+C;AAAA,IAElD,YAAY,SAAiB;AACzB,WAAK,UAAU;AAAA,IACnB;AAAA,IAEA,QAAQ;AACJ,aAAO,OAAO,SAAS,SAAS,KAAK;AAAA,IACzC;AAAA,EACJ;AAEO,MAAM,gBAAN,MAAyC;AAAA,IAC5C,cAAc;AAAA,IACd;AAAA,IAEA,QAAQ;AACJ,aAAO;AAAA,IACX;AAAA,EACJ;AAEO,MAAM,eAAN,MAAmB;AAAA,IAMtB,YAAY,uBAAmC,YAAwB,oBAA2D,aAAsB,OAAO;AAC3J,WAAK,wBAAwB;AAC7B,WAAK,aAAa;AAClB,WAAK,aAAa;AAClB,WAAK,aAAa;AAClB,UAAI,oBAAoB;AACpB,aAAK,WAAW,IAAI,iBAAiB,CAAC,cAAc,aAAa,KAAK,iBAAiB,cAAc,QAAQ,CAAC;AAAA,MAClH;AAAA,IACJ;AAAA,IAEA,iBAAiB,cAAiC,WAA6B;AAC3E,iBAAW,YAAY,cAAc;AACjC,YAAI,SAAS,SAAS,aAAa;AAC/B;AAAA,QACJ;AACA,YAAI,KAAK,WAAW,QAAQ,GAAG;AAC3B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,gBAAgB;AACZ,UAAI,CAAC,KAAK,WAAW,MAAM,GAAG;AAC1B,aAAK,WAAW;AAChB;AAAA,MACJ;AACA,UAAI,KAAK,uBAAuB;AAC5B,aAAK,sBAAsB;AAAA,MAC/B;AACA,UAAI,CAAC,KAAK;AACN;AACJ,WAAK,eAAe,SAAS,cAAc,MAAM,CAAC;AAClD,UAAG,KAAK;AACJ,aAAK,eAAe,SAAS,eAAe,YAAY,CAAC;AAAA,IACjE;AAAA,IAEA,eAAe,SAAsB;AACjC,UAAI,CAAC,SAAS;AACV,gBAAQ,MAAM,mCAAmC;AACjD;AAAA,MACJ;AAEA,YAAM,SAAS;AAAA,QACX,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,SAAS;AAAA,MACb;AACA,WAAK,SAAS,QAAQ,SAAS,MAAM;AAAA,IACzC;AAAA,IAEA,aAAa;AACT,WAAK,UAAU,WAAW;AAAA,IAC9B;AAAA,EACJ;AAMO,MAAM,eAAN,MAAuC;AAAA;AAAA,IAG1C,YAAY,SAAiB,oBAA2D,aAAsB,OAAO;AACjH,WAAK,eAAe,IAAI,aAAa,QAAW,IAAI,eAAe,OAAO,GAAG,oBAAoB,UAAU;AAAA,IAC/G;AAAA,IAEA,gBAAgB;AACZ,WAAK,aAAa,cAAc;AAAA,IACpC;AAAA,EACJ;AACO,MAAM,oBAAN,MAA4C;AAAA;AAAA,IAG/C,YAAY,SAAiB,oBAA2D,aAAsB,OAAO;AACjH,WAAK,eAAe,IAAI,aAAa,QAAW,IAAI,oBAAoB,OAAO,GAAG,oBAAoB,UAAU;AAAA,IACpH;AAAA,IAEA,gBAAgB;AACZ,WAAK,aAAa,cAAc;AAAA,IACpC;AAAA,EACJ;AAEO,MAAM,eAAN,MAAuC;AAAA,IAE1C,YAAY,uBAAmC;AAC3C,WAAK,eAAe,IAAI,aAAa,uBAAuB,IAAI,cAAc,GAAG,QAAW,KAAK;AAAA,IACrG;AAAA,IAEA,gBAAgB;AACZ,WAAK,aAAa,cAAc;AAAA,IACpC;AAAA,EACJ;;;ACjIA,MAAO,mBAAQ,IAAI,aAAa,wBAAwB,UAAU;AAElE,WAAS,WAAW,UAA0B;AAC1C,QAAI,kBAAkB,SAAS,eAAe,kCAAkC;AAChF,QAAI,SAAS,WAAW,iBAAiB;AACrC,4BAAsB,eAAe;AACrC,aAAO;AAAA,IACX;AACA,QAAK,SAAS,OAAuB,GAAG,SAAS,oBAAoB,GAAE;AACnE,2BAAqB,SAAS,MAAqB;AACnD,aAAO;AAAA,IACX;AACA,QAAI,cAAc,SAAS,eAAe,UAAU;AACpD,QAAI,SAAS,WAAW,aAAa;AACjC,wBAAkB,eAAe;AACjC,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAEA,WAAS,kBAAkB,kBAA+B;AACtD,uBAAmB;AAAA,EACvB;AAEA,WAAS,qBAAqB,kBAA+B;AACzD,QAAI,aAA+C,iBAAiB,iBAAiB,6BAA6B;AAClH,aAAQ,QAAQ,YAAY;AACxB,UAAI,KAAK,UAAU,SAAS,YAAY,GAAG;AACvC;AAAA,MACJ;AACA,UAAI,SAAS,SAAS,cAAc,GAAG;AACvC,aAAO,YAAY,KAAK;AACxB,aAAO,aAAa,QAAQ,6CAA2C,OAAO,SAAS;AACvF,WAAK,cAAc;AACnB,WAAK,YAAY,MAAM;AAAA,IAC3B;AAAA,EACJ;AAEA,WAAS,gCAAgC;AACrC,QAAI,aAAa,2BAA2B;AAC5C,QAAI,YAAY;AAChB,QAAG,CAAC,YAAY,UAAU,SAAS,SAAS,GAAE;AAC1C,kBAAY,UAAU,IAAI,SAAS;AACnC,kBAAY,iBAAiB,SAAS,MAAM;AACzC,2BAAmB;AAAA,MACtB,CAAC;AAAA,IACL;AACA,WAAO;AAAA,EACX;AAEA,WAAS,eAAe;AACpB,QAAI,sBAAsB,8BAA8B;AACxD,QAAG,CAAC;AACA,aAAO;AACX,QAAI,eAAe,SAAS,oBAAoB,KAAK;AACrD,QAAI,MAAM,oBAAI,KAAK;AACnB,QAAI,QAAQ,IAAI,SAAS;AACzB,QAAI,8BAA8B,IAAI,YAAY;AAClD,QAAI,SAAS,GAAG;AACZ;AAAA,IACJ;AACA,WAAO,iBAAiB;AAAA,EAC5B;AAEA,WAAS,qBAAqB;AAC1B,QAAI,OAAO,SAAS,eAAe,eAAe;AAClD,QAAI,aAAa,aAAa;AAC9B,QAAI,YAAY;AACZ,WAAK,UAAU,OAAO,SAAS;AAAA,IACnC,OAAO;AACH,WAAK,UAAU,IAAI,SAAS;AAAA,IAChC;AACA,QAAG,CAAC,YAAY;AACZ,UAAI,oBAAoB,SAAS,iBAAiB,0CAA0C;AAC5F,YAAM,KAAK,iBAAiB,EACvB,OAAO,CAAC,OAAQ,GAAG,gBAAgB,gBAAkB,GAAG,gBAAgB,cAAe,EACvF,QAAQ,CAAC,QAAQ,IAAI,UAAU,IAAI,SAAS,CAAC;AAAA,IACtD;AAAA,EACJ;AAEA,WAAS,sBAAsB,iBAA8B;AACzD,QAAI,6BAA6B;AAEjC,uBAAmB;AAGnB,QAAI,gBAAgB,gBAAgB,iBAAiB,6BAA6B;AAClF,aAAQ,OAAO,eAAe;AAC1B,UAAI,UAAU,IAAI,aAAa,SAAS;AACxC,UAAI,KAAK,IAAI,WAAW;AACxB,gBAAU,QAAQ,UAAU,IAAI,QAAQ,SAAQ,CAAC;AACjD,UAAI,OAAO,QACN,MAAM,IAAI,EACV,IAAI,CAAC,QAAQ,IAAI,WAAW,KAAK,EAAE,CAAC;AAEzC,iBAAW,GAAG,IAAI,EACb,KAAK,CAAC,aAAa;AAChB,YAAI,iBAAiB;AACrB,YAAG,SAAS,QAAQ;AAChB,UAAC,GAAG,SAAS,CAAC,EAA2B,aAAa;AACtD,cAAI,UAAU;AACd,cAAI,SAAS;AACb,cAAI,cAAc;AAClB,4BAAkB,SACb,IAAI,aAAW;AACZ,gBAAI,UAAU,QAAQ,MAAM,MAAM;AAClC,gBAAI,SAAS,UAAU,GAAG;AACtB,qBAAO,QAAQ,CAAC,EAAE,KAAK,IAAI,QAAQ,QAAQ,CAAC,EAAE,KAAK;AAAA,YACvD;AACA,sBAAU,QAAQ,MAAM,OAAO;AAC/B,gBAAI,SAAS,UAAU,GAAG;AACtB,qBAAO,QAAQ,CAAC,EAAE,KAAK;AAAA,YAC3B;AACA,sBAAU,QAAQ,MAAM,WAAW;AACnC,gBAAI,SAAS,UAAU,GAAG;AACtB,qBAAO,QAAQ,CAAC,EAAE,KAAK;AAAA,YAC3B;AACA,mBAAO;AAAA,UACX,CAAC,EACA,KAAK,IAAI;AAAA,QAClB;AACA,YAAI,OAAO,SAAS,cAAc,MAAM;AACxC,WAAG,SAAS,CAAC,EAAE,YAAY,IAAI;AAC/B,YAAG,SAAS,SAAS,GAAG;AACpB,eAAK,UAAU,IAAI,eAAe;AAAA,QACtC;AACA,aAAK,YAAY;AAAA,MACrB,CAAC;AAAA,IACT;AAEA,QAAG,QAAQ,wBAAwB;AAC/B,wBAAkB;AAAA,IACtB;AAAA,EAEJ;AAEA,WAAS,oBAAoB;AACzB,QAAI,YAAY,SAAS,iBAAiB,sCAAsC;AAChF,QAAI,aAAa,MAAM,KAAK,SAAS,EAChC,OAAO,SAAO,IAAI,cAAc,aAAa,MAAM,IAAI,EACvD,IAAI,SAAO,IAAI,SAAS,KAAK,IAAI,SAAS,SAAS,CAAC,CAAC;AAE1D,aAAS,MAAM,YAAY;AACvB,UAAI,YAAY,GAAG,cAAc,iBAAiB;AAClD,UAAI,CAAC;AACD;AACJ,UAAI,UAAU,gBAAgB;AAC1B;AACJ,eAAS,OAAO,GAAG,cAAc,UAAU;AACvC,YAAI,IAAI,UAAU,SAAS,YAAY,GAAG;AACtC,cAAI,UAAU,IAAI,gBAAgB;AAAA,QACtC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,iBAAe,WAAW,MAAK,OAAM,MAAK,MAAM;AAW5C,QAAI,OAAO,MAAM,MAAM,8EAA4E,IAAI;AAEvG,QAAI,QAAQ,MAAM,KAAK,KAAK;AAC5B,UAAM,WAAW,SAAS,cAAc,UAAU;AAClD,aAAS,YAAY;AACrB,QAAI,SAAS,SAAS,QAAQ,iBAAiB,mBAAmB;AAClE,WAAO,MAAM,KAAK,MAAM,EACnB,IAAI,WAAS,MAAM,WAAW,WAAW,WAAW,cAAc,QAAQ,EAAE,WAAW;AAAA,EAChG;;;AChLO,WAAS,wBAAwB;AACpC,QAAI,QAAQ,SAAS,eAAe,8BAA8B;AAClE,QAAI,OAAO,MAAM,QAAQ,CAAC;AAC1B,QAAI,SAAgB,CAAC;AACrB,eAAW,OAAO,KAAK,MAAM;AACzB,UAAI,UAAU,IAAI,MAAM,CAAC;AACzB,UAAI,eAAe,IAAI,MAAM,CAAC;AAC9B,UAAI,MAAM,cAAc,OAAO;AAC/B,UAAI,WAAW;AACf,UAAI,gBAAgB,aAAa,iBAAiB,OAAO,EAAE,CAAC;AAC5D,UAAI,YAAY,aAAa,iBAAiB,OAAO;AAErD,UAAI,wBAAwB,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE,OAAO,CAAC,QAAQ,IAAI,SAAS,YAAY,CAAC;AAC5H,UAAI,sBAAsB,SAAS,GAAG;AAClC,YAAI,cAAc;AAClB,YAAI,UAAU,sBAAsB,CAAC,EAAE,MAAM,WAAW;AACxD,YAAI,SAAS,SAAS,QAAQ,CAAC,CAAC;AAChC,YAAI,YAAY,SAAS,QAAQ,CAAC,CAAC;AAAA,MACvC;AAEA,UAAI,QAAQ,MAAM,KAAK,SAAS,EAAE,KAAK,CAAC,SAAS,KAAK,UAAU,SAAS,aAAa,CAAC;AACvF,UAAI,KAAK,MAAM;AAEf,UAAI,aAAa;AACjB,UAAI,kBAAkB,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE,OAAO,CAAC,QAAQ,IAAI,SAAS,YAAY,CAAC;AACtH,UAAI,gBAAgB,SAAS,GAAG;AAC5B,YAAI,eAAe;AACnB,YAAI,UAAU,gBAAgB,CAAC,EAAE,MAAM,YAAY;AACnD,YAAI,aAAa,SAAS,QAAQ,CAAC,CAAC;AAAA,MACxC;AAEA,aAAO,KAAK,GAAG;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAEO,WAAS,gBAAgB;AAC5B,QAAI,SAAS,sBAAsB;AACnC,WAAO;AAAA,MACH,kBAAkB,uBAAuB,MAAM;AAAA,MAC/C,aAAa,kBAAkB,MAAM;AAAA,IACzC;AAAA,EACJ;AAEA,WAAS,uBAAuB,QAAgB;AAC5C,QAAI,UAAU,OAAO,OAAO,CAAC,QAAQ,IAAI,YAAY,uBAAuB;AAE5E,QAAI,mBAA0B,CAAC;AAE/B,aAAS,UAAU,SAAS;AACxB,aAAO,WAAW,eAAe,OAAO,aAAa;AAGrD,YAAM,eAAe;AACrB,YAAMC,SAAQ,OAAO,KAAK,MAAM,YAAY;AAC5C,UAAIA,QAAO,WAAW,GAAG;AACrB,gBAAQ,MAAM,uCAAuC,OAAO,IAAI,MAAM,OAAO,EAAE,IAAI;AACnF;AAAA,MACJ;AACA,aAAO,iBAAiBA,OAAM,CAAC;AAC/B,aAAO,cAAc,SAASA,OAAM,CAAC,CAAC;AACtC,uBAAiB,KAAK,MAAM;AAAA,IAChC;AAEA,QAAI,gBAAgB;AACpB,WAAO;AAAA,EACX;AAEA,WAAS,kBAAkB,QAAgB;AACvC,QAAI,UAAU,OAAO,OAAO,CAAC,QAAQ,IAAI,YAAY,kBAAkB;AAEvE,QAAI,cAAqB,CAAC;AAE1B,aAAS,UAAU,SAAS;AACxB,aAAO,WAAW,eAAe,OAAO,aAAa;AAGrD,YAAM,eAAe;AACrB,YAAMA,SAAQ,OAAO,KAAK,MAAM,YAAY;AAC5C,UAAIA,QAAO,WAAW,GAAG;AACrB,gBAAQ,MAAM,kCAAkC,OAAO,IAAI,MAAM,OAAO,EAAE,IAAI;AAC9E;AAAA,MACJ;AACA,aAAO,iBAAiBA,OAAM,CAAC;AAC/B,aAAO,cAAc,SAASA,OAAM,CAAC,CAAC;AACtC,kBAAY,KAAK,MAAM;AAAA,IAC3B;AAEA,QAAI,WAAW;AACf,WAAO;AAAA,EACX;AAEO,MAAM,cAAN,MAAkB;AAAA,EAWzB;AAEA,WAAS,eAAe,cAAgC;AACpD,QAAI,WAA0B,CAAC;AAC/B,QAAG,aAAa,QAAQ,WAAW,GAAG;AAClC,aAAO;AAAA,IACX;AACA,eAAW,OAAO,aAAa,QAAQ,CAAC,EAAE,MAAM;AAC5C,UAAI,cAAc,IAAI,YAAY;AAClC,kBAAY,YAAY,IAAI,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE;AACjD,kBAAY,OAAO,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC,EAAE;AAC9C,UAAI,QAAQ,YAAY,KAAK,MAAM,IAAI;AACvC,kBAAY,OAAO,MAAM,CAAC;AAC1B,kBAAY,WAAW,MAAM,CAAC;AAC9B,eAAS,KAAK,WAAW;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AAIO,MAAM,MAAN,MAAU;AAAA,EAoBjB;AAEA,WAAS,cAAc,SAAsB;AACzC,QAAI,MAAM,IAAI,IAAI;AAClB,QAAI,CAAC,KAAK,IAAI,QAAQ,qBAAqB,QAAQ;AACnD,QAAI,UAAU,MAAM;AACpB,QAAI,YAAY,QAAQ,uBAAuB,OAAO;AACtD,QAAI,gBAAgB,QAAQ,uBAAuB,eAAe;AAClE,QAAI,MAAM,MAAM,KAAK,SAAS,EAAE,KAAK,CAAC,OAAO,GAAG,gBAAgB,KAAK;AACrE,QAAI,UAAU,QAAQ,uBAAuB,cAAc,EAAE,WAAW;AACxE,QAAI,OAAO,MAAM,KAAK,aAAa,EAC9B,IAAI,CAAC,OAAO,GAAG,WAAW,EAC1B,OAAO,CAAC,QAAQ,QAAQ,KAAK,EAC7B,OAAO,CAAC,QAAQ,GAAG;AACxB,QAAI,aAAa,QAAQ,iBAAiB,iBAAiB;AAI3D,QAAG,WAAW,SAAS,GAAG;AACtB,UAAI,OAAO,WAAW,KAAK,CAAC,EAAE;AAAA,IAClC,OAAO;AACH,UAAI,OAAO,QAAQ,SAAS,CAAC,EAAE;AAAA,IACnC;AACA,QAAG,MAAM,KAAK,SAAS,EAAE,KAAK,CAAC,OAAO,GAAG,gBAAgB,QAAQ,GAAG;AAChE,UAAG,IAAI,KAAK,SAAS,MAAM;AACvB,YAAI,UAAU;AAAA,eACV,IAAI,KAAK,SAAS,UAAU;AAChC,YAAI,UAAU;AAAA;AAEd,YAAI,UAAU;AAAA,IACtB,OACI;AACA,UAAI,UAAU;AAAA,IAClB;AACA,QAAI,WAAW,SAAS,GAAG;AACvB,UAAI,UAAU,MAAM,KAAK,UAAU,EAAE,IAAI,EAAE;AAAA,IAC/C;AACA,QAAI,YAAY,MAAM,KAAK,QAAQ,UAAU,EAAE,OAAO,CAAC,SAAS,KAAK,aAAa,KAAK,SAAS;AAChG,QAAI,CAAC,UAAW,QAAO;AAEvB,QAAI,YAAY,UAAU,CAAC,EAAE;AAC7B,QAAI,YAAY,UAAU,CAAC,EAAE;AAC7B,WAAO;AAAA,EACX;;;AC7LO,MAAM,gBAAgB;AACtB,MAAM,eAAe;AAErB,MAAM,OAAO;AAEb,WAAS,SAAS,gBAAwB;AAC7C,QAAI,SAAmB,CAAC;AACxB,QAAI,MAAM,eAAe,WAAW,OAAO,aAAa,EAAE,WAAW,OAAO,YAAY;AACxF,QAAI,MAAM;AACV,QAAI,QAAQ;AAEZ,aAAS,YAAY;AACjB,UAAI,SAAS;AACT,eAAO,KAAK,SAAS,IAAI,UAAU,OAAO,GAAG,CAAC,CAAC;AACnD,cAAQ;AAAA,IACZ;AAEA,aAAS,MAAM,IAAY;AACvB,gBAAU;AACV,SAAG;AACC;AAAA,MACJ,SAAS,MAAM,IAAI,UAAU,IAAI,GAAG,KAAK;AACzC,UAAI,OAAO,IAAI;AACX,cAAM,YAAY,EAAE,0BAA0B,KAAK;AACvD;AACA,gBAAU;AAAA,IACd;AAEA,aAAS,UAAU;AACf,gBAAU;AACV;AACA,gBAAU;AAAA,IACd;AAEA,WAAO,MAAM,IAAI,QAAQ;AAErB,cAAQ,IAAI,GAAG,GAAG;AAAA,QACd,KAAK;AACD,gBAAM,GAAG;AACT;AAAA,QACJ,KAAK;AACD,gBAAM,GAAG;AACT;AAAA,QACJ,KAAK;AACD,oBAAU;AACV;AACA;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,kBAAQ;AACR;AAAA,QACJ,KAAK;AACD,oBAAU;AACV,kBAAQ,EAAE;AACV;AAAA,QACJ;AACI;AAAA,MACR;AAAA,IACJ;AACA,cAAU;AACV,WAAO;AAAA,EACX;;;AChEO,MAAI,QAAQ;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,EACJ;AAgCA,MAAI,SAAmB;AACvB,MAAI,cAA2B;AAE/B,WAAS,WAAW,MAAY;AAC5B,QAAG,EAAE,SAAS,OAAO;AACjB,YAAM;AAAA,IACV;AACA,QAAI,WAAW;AACf,QAAG,KAAK;AACJ,kBAAY,KAAK;AACrB,QAAG,KAAK;AACJ,kBAAY,MAAM,KAAK;AAC3B,QAAG,KAAK,UAAU,SAAO,GAAG;AACxB,kBAAY,MAAM,KAAK,UAAU,KAAK,GAAG;AAAA,IAC7C;AACA,WAAO;AAAA,EACX;AAEA,WAAS,OAAO,MAAc,SAAqC,MAAkC;AACjG,aAAS,SAAS,IAAI;AACtB,QAAI,OAAO,MAAM;AACjB,QAAI,SAAS,SAAS,cAAc,WAAW,IAAI,CAAC;AACpD,QAAG,SAAS,MAAM;AACd,aAAO,KAAK;AAAA,IAChB,OAAO;AACH,YAAM;AAAA,IACV;AACA,iBAAa,QAAQ,MAAM,GAAG,SAAS,IAAI;AAC3C,WAAO,EAAC,MAAM,QAAQ,MAAM,YAAW;AAAA,EAC3C;AAEA,WAAS,OAAO,MAAmB,MAAc,SAAqC,MAAkC;AACpH,aAAS,SAAS,IAAI;AACtB,WAAO,cAAc,MAAM,SAAS,IAAI;AAAA,EAC5C;AAEA,WAAS,aAAa,QAAqB,MAAc,SAAqC,MAAkC;AAC5H,WAAO,SAAS,eAAe,QAAQ,MAAM,SAAS,IAAI;AAAA,EAC9D;AAEA,WAAS,YAAY,QAAqB,MAAc,SAAqC,MAAkC;AAC3H,WAAO,SAAS,YAAY,QAAQ,MAAM,SAAS,IAAI;AAAA,EAC3D;AAEA,WAAS,YAAY,QAAqB,MAAc,SAAqC,MAAkC;AAC3H,WAAO,SAAS,aAAa,QAAQ,MAAM,SAAS,IAAI;AAAA,EAC5D;AAEA,WAAS,SAAS,UAA0B,QAAqB,MAAc,SAAqC,MAAkC;AAClJ,aAAS,SAAS,IAAI;AACtB,QAAI,WAAW,SAAS,cAAc,KAAK;AAC3C,QAAI,SAAS,cAAc,UAAU,SAAS,IAAI;AAClD,QAAI,QAAQ;AACZ,aAAQ,SAAS,SAAS,UAAU;AAChC,UAAIC,UAAS,OAAO,sBAAsB,UAAU,KAAK;AACzD,UAAG,CAAC;AACA,gBAAQA;AAAA,IAChB;AACA,WAAO,EAAC,QAAQ,OAAO,MAAM,OAAO,KAAI;AAAA,EAC5C;AAEA,WAAS,cAAc,MAAmB,SAAoC,MAAiC;AAC3G,iBAAa,MAAM,MAAM,GAAG,GAAG,SAAS,IAAI;AAC5C,WAAO,EAAC,MAAM,MAAM,YAAW;AAAA,EACnC;AAEA,WAAS,UAAU,MAAoB;AACnC,aAAS,SAAS,IAAI;AACtB,WAAO,MAAM;AAAA,EACjB;AAEA,WAAS,QAAQ;AACb,WAAO,UAAU;AAAA,EACrB;AAGA,WAAS,YAAkB;AACvB,QAAIC,QAAO,CAAC;AACZ,WAAM,MAAM;AACR,UAAI,KAAK,UAAU;AACnB,UAAI,CAAC;AACD,eAAOA,MAAK,WAAS,IAAIA,MAAK,CAAC,IAAI,EAAC,MAAAA,MAAI;AAC5C,MAAAA,MAAK,KAAK,EAAE;AACZ,UAAG,CAAC,MAAM,GAAG;AACT,eAAOA,MAAK,WAAS,IAAIA,MAAK,CAAC,IAAI,EAAC,MAAAA,MAAI;AAAA,IAChD;AAAA,EACJ;AAEA,WAAS,YAAmB;AACxB,QAAI,KAAK,aAAa;AACtB,QAAG,CAAC;AACA,aAAO;AACX,QAAG,MAAM,GAAG,GAAG;AACX,UAAI,QAAQ,SAAS,OAAO,MAAM,CAAC;AAEnC,aAAQ;AAAA,QACJ;AAAA,QACA,OAAO;AAAA,MACX;AAAA,IACJ,OAAO;AACH,aAAO;AAAA,IACX;AAAA,EACJ;AAGA,WAAS,eAAqB;AAC1B,QAAI;AACJ,QAAG,MAAM,GAAG,GAAG;AACX,WAAK,UAAU;AACf,UAAG,CAAC,MAAM,GAAG;AACT,cAAM;AACV,aAAO;AAAA,IACX,OAAO;AACH,UAAI,OAAO,gBAAgB,GAAG;AAC9B,UAAI,MAAM;AACN,eAAO,sBAAsB,IAAI;AACjC,eAAgB,EAAC,KAAI;AAAA,MACzB,OAAO;AACH,eAAO,cAAc;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,gBAA4B;AACjC,QAAI,MAAM,OAAO,MAAM;AACvB,QAAI,KAAK;AACT,QAAI,OAAiB,CAAC;AACtB,QAAI,YAAsB,CAAC;AAC3B,QAAI,OAAO;AAEX,WAAM,OAAO,QAAQ;AACjB,UAAI,MAAM,GAAG,GAAG;AACZ,kBAAU,KAAK,OAAO,MAAM,CAAC;AAAA,MACjC,WAAW,MAAM,GAAG,GAAG;AACnB,eAAO,cAAc;AAAA,MACzB,OAAO;AACH,YAAI,QAAQ,gBAAgB,GAAG;AAC/B,YAAG,OAAO;AACN,eAAK,MAAM,UAAU,CAAC;AAAA,QAC1B,OAAO;AACH,cAAIC,SAAQ,gBAAgB,GAAG;AAC/B,cAAIA,QAAO;AACP,mBAAO,sBAAsBA,MAAK;AAAA,UACtC,OAAO;AACH;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,EAAC,KAAK,IAAI,MAAM,WAAW,WAAW,MAAM,OAAO,UAAU,EAAC;AAAA,EACzE;AAGA,WAAS,YAAmB;AACxB,QAAG,MAAM,GAAG,GAAG;AACX,aAAO,UAAU;AAAA,IACrB;AACA,WAAO;AAAA,EACX;AAEA,WAAS,gBAAgB;AAErB,QAAI,SAAmB,CAAC;AACxB,WAAM,OAAO,QAAQ;AACjB,UAAI,OAAO,OAAO,MAAM;AACxB,UAAG,QAAQ;AACP;AACJ,aAAO,KAAK,IAAI;AAAA,IACpB;AAEA,QAAI,UAAoB,CAAC;AAEzB,WAAM,OAAO,QAAQ;AACjB,UAAI,OAAO,OAAO,MAAM;AACxB,UAAI,KAAK,OAAO,MAAM;AACtB,UAAI,MAAM;AACV,UAAG,OAAO,KAAK;AACX,cAAM,OAAO,MAAM;AACnB,aAAK,OAAO,MAAM;AAAA,MACtB;AACA,UAAI,MAAM,KAAK;AACX,cAAM;AAAA,MACV;AACA,UAAI,QAAQ,OAAO,MAAM;AACzB,UAAG,MAAM,CAAC,MAAM,KAAK;AACjB,gBAAQ,sBAAsB,KAAK;AAAA,MACvC;AACA,UAAI,CAAC;AACD,cAAM;AACN,cAAQ,KAAK,EAAC,MAAM,KAAK,MAAK,CAAC;AACnC,UAAG,CAAC,OAAO;AACP;AAAA,IACR;AACA,WAAO;AAAA,EACX;AAEA,WAAS,MAAM,UAAkB;AAC7B,QAAI,OAAO,OAAO,MAAM;AACxB,QAAG,SAAS;AACR,aAAO;AACX,QAAG;AACC,aAAO,QAAQ,IAAI;AACvB,WAAO;AAAA,EACX;AAEA,WAAS,gBAAgB,UAAkB;AACvC,QAAI,OAAO,OAAO,MAAM;AACxB,QAAG,KAAK,WAAW,QAAQ;AACvB,aAAO;AACX,QAAG;AACC,aAAO,QAAQ,IAAI;AACvB,WAAO;AAAA,EACX;AAEA,WAAS,sBAAsB,MAAc;AACzC,QAAG,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM;AACjD,aAAO,KAAK,UAAU,GAAG,KAAK,SAAO,CAAC;AAC1C,WAAO;AAAA,EACX;AAGA,WAAS,cAAc,QAAqB,KAAiB,OAAe,SAAoC,MAAkC;AAC9I,QAAI,KAAK,OAAO,YAAY,SAAS,cAAc,IAAI,GAAG,CAAC;AAC3D,QAAI,IAAI;AACJ,SAAG,KAAK,SAAS,IAAI,IAAI,OAAO,OAAO;AAC3C,aAAQ,SAAS,IAAI,WAAW;AAC5B,SAAG,UAAU,IAAI,SAAS,OAAO,OAAO,OAAO,CAAC;AAAA,IACpD;AACA,aAAS,OAAO,IAAI,MAAM;AACtB,UAAI,IAAI;AACJ,WAAG,SAAS,IAAI,MAAM,OAAO,OAAO,CAAC,EAAE,SAAS,IAAI,KAAK,OAAO,OAAO,CAAC,IAAI,SAAS,IAAI,OAAO,OAAO,OAAO;AAAA,WAC7G;AACD,WAAG,aAAa,SAAS,IAAI,MAAM,OAAO,OAAO,GAAG,SAAS,IAAI,OAAO,OAAO,OAAO,CAAC;AAAA,MAC3F;AAAA,IACJ;AACA,QAAG,IAAI,WAAW;AACd,SAAG,YAAY,SAAS,eAAe,SAAS,IAAI,WAAW,OAAO,OAAO,CAAC,CAAC;AAAA,IACnF;AACA,kBAAc;AACd,QAAG;AACC,WAAK,EAAE;AACX,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,QAAqB,IAAU,OAAe,SAAoC,MAAkC;AACtI,QAAG,SAAS,IAAI;AACZ,UAAI,UAAU,cAAc,QAAQ,IAAI,OAAO,SAAS,IAAI;AAC5D,UAAG,GAAG;AACF,qBAAa,SAAS,GAAG,OAAO,OAAO,SAAS,IAAI;AACxD;AAAA,IACJ;AACA,QAAG,UAAU,IAAI;AACb,eAAS,OAAO,GAAG,MAAM;AACrB,qBAAa,QAAQ,KAAK,OAAO,SAAS,IAAI;AAAA,MAClD;AAAA,IACJ;AACA,QAAG,WAAW,IAAI;AACd,eAAQ,IAAI,GAAG,IAAI,GAAG,OAAO,KAAK;AAC9B,qBAAa,QAAQ,GAAG,OAAO,GAAG,SAAS,IAAI;AAAA,MACnD;AAAA,IACJ;AACA,QAAG,UAAU,IAAI;AACb,aAAO,YAAY,SAAS,eAAe,SAAS,GAAG,MAAM,OAAO,OAAO,CAAC,CAAC;AAC7E;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,SAAS,MAAc,OAAe,SAAoC;AAC/E,QAAG,SAAS;AACR,UAAI,SAAS,QAAQ,KAAK;AAC1B,aAAO,KAAK,QAAQ,MAAM,MAAM;AAAA,IACpC;AACA,WAAO,KAAK,QAAQ,MAAM,QAAM,GAAG,SAAS,CAAC;AAAA,EACjD;;;AClTA,MAAI,mBAAmB;AAEhB,WAAS,oBAAoB,SAAsB;AACtD,uBAAmB;AAAA,EACvB;AAEO,WAAS,sBAAsB;AAClC,WAAO;AAAA,EACX;AAWO,WAAS,oBAAoB,WAAsB,kBAAqC;AAC3F,cAAU,OAAO,KAAK,CAAC,QAAQ,WAAW,OAAO,eAAe,cAAc,OAAO,cAAc,CAAC;AACpG,QAAI,UAAe,MAAM,OAAO,IAAI,WAAW,qEAAqE,EAAE;AAEtH,YAAQ,QAAQ,gBAAe,oBAAoB,oBAAoB,IAAI,SAAS;AAEpF,QAAI,EAAE,MAAM,UAAU,MAAM,SAAS,IAAS,MAAM,OAAO,gDAAgD;AAE3G,QAAI,eAAe,SAAS,cAAc,OAAO;AAEjD,QAAI,UAAU,CAAC,GAAE,GAAE,CAAC;AACpB,aAAS,SAAS,UAAU,QAAQ;AAChC,UAAI,UAAU,MAAM,YAAY,IAAI,SAAO,IAAI,SAAS,MAAM,EAAE,OAAO,CAAC,MAAM,SAAS,OAAO,MAAM,CAAC;AACrG,eAAQ,UAAU,CAAC,GAAE,GAAE,CAAC,GAAG;AACvB,gBAAQ,MAAM,KAAK,WAAW,MAAM,WAAW,MAAM,EAAE,CAAC,GAAG,UAAU,UAAU;AAAA,MACnF;AAAA,IACJ;AAEA,IAAK,MAAM,OAAO,UAAU,2DAA2D,CAAC,UAAU,QAAQ,KAAK,EAAE,SAAS,CAAC;AAC3H,YAAO,kBAAkB;AAAA,MACrB,KAAK;AACD,iBAAS,CAAC,gBAAgB,UAAU,KAAK,UAAU,aAAa;AAC5D,qBAAW,cAAc,WAAW,QAAQ,gBAAgB,CAAC,UAAU,MAAM,SAAS,eAAsB,gBAAuB;AAAA,QACvI;AACA;AAAA,MACJ,KAAK;AACD,iBAAS,CAAC,aAAa,OAAO,KAAK,UAAU,UAAU;AACnD,qBAAW,cAAc,QAAQ,QAAQ,aAAa,CAAC,UAAU,MAAM,gBAAgB,eAAsB,gBAAuB;AAAA,QACxI;AACA;AAAA,MACJ,KAAK;AACD,iBAAS,CAAC,aAAa,OAAO,KAAK,UAAU,UAAU;AACnD,wBAAc,cAAc,WAAW;AACvC,mBAAS,CAAC,MAAM,KAAK,KAAK,QAAQ,aAAa;AAC3C,uBAAW,cAAc,OAAO,aAAa,CAAC,WAAW,MAAM,gBAAuB;AAAA,UAC1F;AAAA,QACJ;AACA;AAAA,MACJ,KAAK;AACD,iBAAS,CAAC,gBAAgB,UAAU,KAAK,UAAU,aAAa;AAC5D,wBAAc,cAAc,cAAc;AAC1C,mBAAS,CAAC,MAAM,KAAK,KAAK,WAAW,aAAa;AAC9C,uBAAW,cAAc,OAAO,gBAAgB,CAAC,WAAW,MAAM,gBAAuB;AAAA,UAC7F;AAAA,QACJ;AACA;AAAA,MACJ,KAAK;AACD,iBAAS,CAAC,gBAAgB,UAAU,KAAK,UAAU,aAAa;AAC5D,wBAAc,cAAc,cAAc;AAC1C,mBAAS,CAAC,EAAE,KAAK,KAAK,WAAW,cAAc;AAC3C,uBAAW,cAAc,OAAO,gBAAgB,QAAW,eAAsB,mBAA0B,eAAsB;AAAA,UACrI;AAAA,QACJ;AACA;AAAA,MACJ,KAAK;AACD,iBAAS,CAAC,aAAa,OAAO,KAAK,UAAU,UAAU;AACnD,wBAAc,cAAc,WAAW;AACvC,mBAAS,CAAC,EAAE,KAAK,KAAK,QAAQ,cAAc;AACxC,uBAAW,cAAc,OAAO,aAAa,QAAW,eAAsB,mBAA0B,kBAAyB;AAAA,UACrI;AAAA,QACJ;AACA;AAAA,IACR;AAAA,EACJ;AAEA,WAAS,WAAW,cAAuC,QAAqB,SAAiB,eAA6C,gBAAgC;AAC1K,kBAAc,cAAc,OAAO;AACnC,aAAS,SAAS,QAAQ;AACtB,iBAAW,cAAc,OAAO,SAAS,eAAe,cAAc;AAAA,IAC1E;AAAA,EACJ;AAEA,WAAS,iBAAiB,WAAoC,UAAkB,SAAiB;AAC7F,QAAI,MAAM,aAAa,OAAO;AAC9B,cAAU,YAAY,GAAG;AACzB,QAAI,UAAU,IAAI,QAAQ;AAC1B,QAAI,QAAQ,eAAe;AAC3B,WAAO;AAAA,EACX;AAyBA,WAAS,WAAW,cAAuC,OAAkB,SAAiB,eAA6D,gBAAgC;AACvL;AAEA,QAAI,cAAc,mBAAmB,KAAK;AAE1C,QAAI,mBAAmB,CAAC,GAAE,GAAE,CAAC,EAAG,IAAI,YAAU;AAC1C,UAAG,YAAY,kBAAkB,MAAM,EAAE,SAAS,KAAK,YAAY,aAAa,MAAM,IAAI;AACtF,eAAO;AACX,aAAO,GAAG,YAAY,kBAAkB,MAAM,EAAE,MAAM,QAAQ,YAAY,aAAa,MAAM,CAAC;AAAA,IAClG,CAAC;AAED,QAAI,UAAU,gBAAgB,cAAc,OAAO,eAAe,OAAO;AACzE,QAAI,aAAa,iBAAiB,cAAc,OAAO,SAAS,kBAAkB,cAAc;AAChG,QAAI,kBAAkB,aAAa,SAAS;AAE5C,QAAG;AACC,cAAQ,QAAQ,eAAe;AACnC,eAAW,cAAc,QAAQ,eAAe;AAChD,QAAI,eAAe;AAanB,QAAI,iBAAiB;AACjB,iBAAa,YAAY,YAAY;AACrC,aAAQ,WAAW,YAAY,cAAc;AACzC,UAAI,MAAM,iBAAiB,cAAc,WAAW,OAAO;AAC3D,eAAS,SAAS,GAAG,SAAS,GAAG,UAAU;AACvC,YAAI,OAAO,iBAAiB,OAAO;AACnC,YAAI,YAAY,IAAI;AACpB,aAAK,UAAU,IAAI,aAAa;AAChC,YAAI,YAAY,aAAa,MAAM,KAAK,gBAAgB;AACpD,eAAK,UAAU,IAAI,MAAM;AAAA,QAC7B;AAAA,MAKJ;AACA;AAAA,IACJ;AAGJ,aAAS,QAAQ,GAAG,QAAS,YAAY,kBAAkB,gBAAiB,SAAS;AACjF,UAAI,MAAM,iBAAiB,cAAa,gBAAgB,OAAO;AAE/D,eAAS,SAAS,GAAG,SAAS,GAAG,UAAU;AACvC,YAAI,YAAY,YAAY,kBAAkB,MAAM;AACpD,qBAAa,SAAS;AACtB,YAAI,UAAuB;AAC3B,YAAI,WAAW;AACX,oBAAU,UAAU,KAAK;AACzB,cAAI,sBAAsB,KAAK,IAAI,YAAY,aAAa,MAAM,GAAG,YAAY,mBAAmB;AACpG,cAAI,UAAU,SAAS,KAAK,UAAU,UAAU,qBAAqB;AACjE,gBAAI,QAAQ,eAAe;AAC3B,2BAAe;AAAA,UACnB;AAAA,QACJ;AACA,YAAI,OAAO,iBAAiB,OAAO;AACnC,YAAI,YAAY,IAAI;AACpB,aAAK,UAAU,IAAI,kBAAkB;AACrC,YAAI,YAAY,aAAa,MAAM,KAAK,OAAO;AAC3C,eAAK,UAAU,IAAI,MAAM;AAAA,QAC7B;AACA,YAAG,SAAS,sBAAsB;AAC9B,cAAI,SAAS,qBAAqB,MAAM,EAAE,SAAS,GAAG;AAClD,iBAAK,UAAU,IAAI,cAAc;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,QAAG,cAAc;AACb,UAAG;AACC,gBAAQ,QAAQ,eAAe;AACnC,iBAAW,cAAc,QAAQ,eAAe;AAAA,IACpD;AACA,QAAI,CAAC,YAAY,eAAe;AAC5B;AAAA,IACJ;AAGA,aAAS,UAAU,CAAC,GAAE,GAAE,CAAC,GAAG;AACxB,UAAI,MAAM,aAAa,SAAS,aAAa,SAAS,SAAO,CAAC;AAC9D,UAAI,UAAU,IAAI,YAAY;AAC9B,UAAI,OAAO,IAAI,SAAS,MAAM;AAC9B,UAAI,YAAY,aAAa,MAAM,MAAM,GAAG;AACxC;AAAA,MACJ;AACA,YAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,WAAK,YAAY,KAAK;AACtB,YAAM,YAAY,SAAS,eAAe,IAAI,YAAY,aAAa,MAAM,CAAC,iBAAiB,CAAC;AAChG,YAAM,UAAU,IAAI,aAAa;AAGjC,UAAI,YAAY,aAAa,MAAM,IAAI,KAAK,YAAY,kBAAkB,MAAM,EAAE,SAAS,YAAY,aAAa,MAAM,GAAG;AACzH,aAAK,cAAc,OAAO,EAAE,UAAU,IAAI,cAAc;AACxD,qBAAa,SAAS,kBAAkB,YAAY,kBAAkB,MAAM,EAAE,MAAM,EAAE,SAAS,MAAM,EAAE,UAAU,IAAI,cAAc;AAAA,MACvI;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,eAAe;AAEnB,WAAS,aAAa,SAAiB;AACnC,QAAI,KAAK,SAAS,cAAc,IAAI;AACpC,OAAG,QAAQ,UAAU,UAAQ;AAC7B,OAAG,QAAQ,UAAU;AACrB,WAAO;AAAA,EACX;AAEA,WAAS,cAAc,cAAuC,OAAe;AACzE,UAAM,UAAU,aAAa,KAAK;AAClC,YAAQ,QAAQ,UAAU;AAC1B,iBAAa,YAAY,OAAO;AAChC,YAAQ,UAAU,IAAI,YAAY,aAAa;AAC/C,YAAQ,QAAQ,UAAU;AAE1B,UAAM,UAAU,SAAS,cAAc,IAAI;AAC3C,YAAQ,YAAY,OAAO;AAC3B,YAAQ,UAAU,IAAI,WAAW;AACjC,YAAQ,aAAa,WAAW,GAAG;AAEnC,QAAI,WAAW,SAAS,cAAc,KAAK;AAC3C,YAAQ,YAAY,QAAQ;AAC5B,aAAS,UAAU,IAAI,YAAY;AACnC,aAAS,YAAY,SAAS,eAAe,KAAK,CAAC;AACnD,WAAO,EAAC,SAAS,SAAQ;AAAA,EAC7B;AAEA,WAAS,gBAAgB,cAAuC,OAAkB,eAA6D,SAAiB;AAC5J,QAAG,CAAC,iBAAiB,CAAC,MAAM;AACxB,aAAO;AACX,UAAM,eAAe,aAAa,YAAY,aAAa,OAAO,CAAC;AACnE,iBAAa,UAAU,IAAI,UAAU;AAErC,QAAI,EAAC,MAAM,cAAa,IAAS,MAAM,OAAO,cAAc,uCAAuC;AACnG,QAAG,eAAe;AACd,YAAM,YAAY,eAAe,mBAAmB,cAAc,KAAK,CAAC,GAAG;AAAA,IAC/E;AAEA,aAAS,cAAc,MAAM,aAAa;AACtC,oBAAc,YAAY,kBAAkB,KAAK,WAAW,IAAI,KAAK,CAAC;AAAA,IAC1E;AAEA,QAAG,MAAM,QAAQ;AACb,UAAI,YAAY,SAAS,cAAc,MAAM;AAC7C,gBAAU,YAAY,SAAS,eAAe,MAAM,MAAM,CAAC;AAC3D,gBAAU,UAAU,IAAI,UAAU;AAClC,oBAAc,YAAY,SAAS;AAAA,IACvC;AACA,WAAO;AAAA,EACX;AASA,WAAS,aAAa,cAAuC,MAAc,MAAe,SAAiB;AACvG,UAAM,cAAc,aAAa,YAAY,aAAa,OAAO,CAAC;AAClE,gBAAY,UAAU,IAAI,UAAU;AACpC,QAAG,SAAO;AACN,kBAAY,QAAQ,aAAa;AAErC,WAAY,MAAM,OAAO,aAAa,uCAAuC;AAAA,EACjF;AAEA,WAAS,qBAAqB,cAAuC,MAAe,SAAiB,MAAe;AAChH,QAAI,EAAC,MAAM,GAAE,IAAI,aAAa,cAAc,IAAI,MAAM,OAAO;AAC7D,OAAG,YAAY,SAAS,eAAe,IAAI,CAAC;AAAA,EAChD;AAEA,WAAS,iBAAiB,cAAuC,OAAkB,SAAiB,kBAA4B,gBAAgC;AAE5J,yBAAqB,cAAc,QAAS,kBAAyB,cAAe,GAAG,SAAS,MAAM,OAAO;AAC7G,yBAAqB,cAAc,QAAS,qBAA4B,cAAe,GAAG,SAAS,MAAM,cAAc;AACvH,yBAAqB,cAAc,QAAS,eAAsB,cAAe,GAAG,SAAS,MAAM,SAAS;AAC5G,yBAAqB,cAAc,QAAS,mBAA0B,cAAe,GAAG,SAAS,MAAM,SAAS;AAChH,QAAG,MAAM,KAAK,SAAS,GAAG;AACtB,UAAI,EAAC,MAAM,GAAE,IAAI,aAAa,cAAc,MAAM,KAAK,KAAK,GAAG,MAAM,OAAO;AAC5E,YAAM,YAAY,IAAI,MAAM,KAAK,IAAI,SAAO,sCAAsC,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA,IACvG;AAGA,UAAM,gBAAgB,aAAa,OAAO;AAC1C,iBAAa,YAAY,aAAa;AACtC,kBAAc,UAAU,IAAI,UAAU;AACtC,UAAM,UAAU,SAAS,cAAc,IAAI;AAC3C,kBAAc,YAAY,OAAO;AACjC,YAAQ,YAAY,SAAS,eAAe,iBAAiB,CAAC,CAAC,CAAC;AAChE,QAAI,MAAM,WAAW,CAAC,EAAE,CAAC,GAAG;AACxB,cAAQ,YAAY,kBAAkB,KAAK,MAAM,WAAW,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC;AAAA,IAC/E;AACA,UAAM,UAAU,SAAS,cAAc,IAAI;AAC3C,kBAAc,YAAY,OAAO;AACjC,YAAQ,YAAY,SAAS,eAAe,iBAAiB,CAAC,CAAC,CAAC;AAChE,QAAI,MAAM,WAAW,CAAC,EAAE,CAAC,GAAG;AACxB,cAAQ,YAAY,kBAAkB,KAAK,MAAM,WAAW,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC;AAAA,IAC/E;AACA,UAAM,UAAU,SAAS,cAAc,IAAI;AAC3C,kBAAc,YAAY,OAAO;AACjC,YAAQ,YAAY,SAAS,eAAe,iBAAiB,CAAC,CAAC,CAAC;AAChE,QAAI,MAAM,WAAW,CAAC,EAAE,CAAC,GAAG;AACxB,cAAQ,YAAY,kBAAkB,KAAK,MAAM,WAAW,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC;AAAA,IAC/E;AACA,WAAO;AAAA,MACH;AAAA,MACA,SAAS;AAAA,IACb;AAAA,EACJ;AAEA,WAAS,kBAAkB,YAAoB,IAAY,YAAqB;AAC5E,UAAM,SAAS,SAAS,cAAc,GAAG;AACzC,WAAO,OAAO;AACd,WAAO,aAAa,WAAW,gCAAgC,EAAE,mBAAmB;AACpF,WAAO,UAAU,IAAI,WAAW;AAChC,QAAG;AACC,aAAO,UAAU,IAAI,aAAa;AACtC,WAAO,YAAY;AACnB,WAAO;AAAA,EACX;AAEA,WAAS,iBAAiB,SAAsB;AAC5C,UAAM,OAAO,SAAS,cAAc,IAAI;AACxC,QAAI,cAAc,SAAS,cAAc,MAAM;AAC/C,QAAI,cAAc,OAAO,aAAa,IAAI;AAC1C,gBAAY,YAAY,SAAS,eAAe,WAAW,CAAC;AAC5D,SAAK,YAAY,WAAW;AAC5B,QAAI,CAAC,SAAS;AACV,aAAO;AAAA,IACX;AAEA,QAAG,qBAAqB;AACpB,oBAAc,QAAQ,OAAO,MAAM,QAAQ;AAAA;AAE3C,oBAAc,QAAQ,WAAW,MAAM,QAAQ;AACnD,gBAAY,cAAc;AAE1B,QAAI,QAAQ,aAAa;AACrB,kBAAY,UAAU,IAAI,SAAS;AAAA,IACvC;AAEA,UAAM,SAAS,SAAS,cAAc,GAAG;AACzC,SAAK,YAAY,MAAM;AACvB,WAAO,OAAO;AACd,WAAO,UAAU,IAAI,MAAM;AAC3B,WAAO,QAAQ,QAAQ;AACvB,WAAO,UAAS,iBAAkB;AAC9B,UAAI,KAAK,MAAM,eAAe,QAAQ,IAAI;AAC1C,UAAG,MAAM;AACL,eAAO,SAAS,OAAO,oBAAmB,iBAAiB,QAAQ,IAAI;AAAA,WACtE;AACD,cAAM,MAAM,2EAAyE,EAAE;AACvF,cAAM,MAAM,yFAAyF;AACrG,eAAO,SAAS,OAAO,+BAA+B,KAAK;AAAA,MAC/D;AACA,aAAO;AAAA,IACX;AACA,UAAM,OAAO,SAAS,cAAc,GAAG;AACvC,WAAO,YAAY,IAAI;AACvB,SAAK,UAAU,IAAI,OAAO,aAAa;AACvC,QAAI,QAAQ,6BAA6B;AACrC,WAAK,UAAU,IAAI,UAAU;AAAA,IACjC;AACA,WAAO;AAAA,EACX;AAEA,iBAAe,eAAe,aAAqB;AAC/C,QAAI,sBAAsB,iBAAiB,WAAW;AACtD,WAAO,MAAM,gCAA8B,mBAAmB,mBAAmB,CAAC,EAC7E,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAAC,UAAU,MAAM,8BAA8B,CAAC,EACrD,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAAC,SAAS,cAAc,aAAa,IAAI,CAAC,EAC/C,MAAM,SAAO;AACV,cAAQ,MAAM,kBAAkB,GAAG;AACnC,aAAO;AAAA,IACX,CAAC;AAAA,EACT;AAEA,WAAS,cAAc,aAAqB,MAAc;AACtD,kBAAc,YAAY,WAAW,KAAK,EAAE;AAC5C,QAAI,WAAW;AACf,QAAI,IAAI;AACR,QAAI,UAAU,KAAK,QAAQ,WAAW;AACtC,QAAI,UAAU,GAAG;AACb,aAAO;AAAA,IACX;AAEA,QAAI,QAAQ,KAAK,UAAU,GAAG,OAAO,EAAE,YAAY,QAAQ,OAAO;AAClE,QAAI,KAAK,KAAK,UAAU,OAAO,QAAM,EAAE;AACvC,QAAI,QAAQ,GAAG,MAAM,KAAK;AAC1B,QAAG,OAAO;AACN,aAAO,SAAS,MAAM,CAAC,CAAC;AAC5B,UAAM,2BAA2B,WAAW;AAAA,EAChD;;;AClbO,MAAMC,aAAN,MAAgB;AAAA,IAWnB,OAAO,aAAa;AAChB,aAAkB;AAAA,QACd,SAAS;AAAA,QACT,WAAW;AAAA,QACX,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,WAAW;AAAA,QACX,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAA,QACvB,aAAa,CAAC;AAAA,QACd,QAAQ;AAAA,QACR,MAAM,CAAC;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AA2BA,WAAS,gBAAgB,gCAAuC;AAC5D,QAAI,mBAA0C,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACzD,mCACK,OAAO,YAAU,OAAO,mCAAmC,EAC3D,QAAQ,YAAU;AACnB,uBAAiB,OAAO,cAAY,CAAC,EAAE,KAAK,MAAM;AAAA,IACtD,CAAC;AACD,WAAO;AAAA,EACX;AAEA,WAAS,eAAe,SAAgB;AACpC,QAAI,cAAc,QAAQ,IAAI,CAAC,WAAW,OAAO,kBAAkB;AACnE,WAAO,CAAC,GAAG,IAAI,IAAI,WAAW,CAAC;AAAA,EACnC;AAEA,WAAS,aAAa,SAAgB;AAClC,WAAO,QACF,IAAI,CAAC,WAAW,OAAO,SAAS,EAChC;AAAA,MAAO,CAAC,MAAM,SAAS;AAChB,eAAO,OAAO,OAAO,OAAO;AAAA,MAChC;AAAA,IACJ;AAAA,EACR;AAEA,WAAS,eAAe,SAAgB;AACpC,QAAI,cAAc,QAAQ,IAAI,CAAC,WAAW,OAAO,SAAS;AAC1D,QAAI,oBAAoB,CAAC,GAAG,IAAI,IAAI,WAAW,CAAC;AAChD,WAAO,kBAAkB,SAAS;AAAA,EACtC;AAEO,WAAS,mBAAmB,cAAqB;AACpD,QAAI,cAAc;AAClB,aAAQ,UAAU,cAAa;AAC3B,UAAG,OAAO,cAAc,uBAAuB;AAC3C,eAAO,qBAAqB,OAAO;AACnC;AAAA,MACJ;AACA,UAAI,UAAU,OAAO,UAAU,MAAM,WAAW;AAChD,UAAI,SAAS,WAAW,GAAG;AACvB,gBAAQ,MAAM,gCAAgC,OAAO,SAAS,qBAAqB,OAAO,cAAc,IAAI;AAC5G,eAAO,qBAAsB;AAAA,MACjC,OAAO;AACH,eAAO,qBAAqB,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC;AAAA,MAC/E;AAEA,aAAO,qBAAsB,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC;AAAA,IAChF;AAAA,EACJ;AAEA,WAAS,oBAAoB,SAAsB;AAC/C,YAAQ,OAAO;AACf,QAAI,CAAC,QAAQ;AACT;AACJ,aAAS,UAAU,QAAQ,sBAAsB;AAC7C,UAAI,OAAO,QAAQ;AACf,gBAAQ,QAAQ,OAAO,CAAC,EAAE,cAAc,OAAO,OAAO,IAAI,WAAS,MAAM,cAAc,IAAI;AAAA,MAC/F,OAAO;AACH,gBAAQ,QAAQ;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,oCAAoC,SAAsB;AAC/D,QAAG,CAAC,QAAQ;AACR;AACJ,QAAI,cAAc,QAAQ,qBAAqB,KAAK;AACpD,QAAI,YAAY,SAAS,GAAG;AACxB,cAAQ,cAAc;AACtB;AAAA,IACJ;AACA,YAAQ,cAAc,YACjB,MAAM,CAAC,UAAe,MAAM,oBAAoB,SAAS,qBAAqB,CAAC,EAAE,CAAC,GAAG,kBAAkB,MAAM;AAAA,EACtH;AAEA,WAAS,kCAAkC,SAAsB;AAC7D,QAAG,CAAC,QAAQ;AACR;AACJ,YAAQ,8BAA8B;AACtC,aAAQ,QAAQ,QAAQ,sBAAsB;AAC1C,UAAG,KAAK,UAAU;AACd,gBAAQ,8BAA8B;AAAA,IAC9C;AAAA,EACJ;AAEO,WAAS,eAAe,cAAiC;AAC5D,uBAAmB,YAAY;AAE/B,QAAI,YAAuB;AAAA,MACvB,UAAU,oBAAI,IAAI;AAAA,MAClB,aAAa,oBAAI,IAAI;AAAA,MACrB,UAAU,oBAAI,IAAI;AAAA,MAClB,QAAQ,CAAC;AAAA,IACb;AAIA,QAAI,cAAc,SAAS,aAAa,IAAI,CAAC,WAAW,OAAO,cAAc,CAAC;AAC9E,aAAS,kBAAkB,aAAa;AACpC,UAAI,oBAAoB,aAAa,OAAO,CAAC,WAAW,OAAO,mBAAmB,cAAc;AAGhG,UAAIC,YAAW,SAAS,kBAAkB,IAAI,CAAC,WAAW,OAAO,OAAO,CAAC;AACzE,eAAQ,WAAWA,WAAU;AACzB,YAAI,2BAA2B,kBAAkB,OAAO,YAAU,OAAO,YAAY,OAAO;AAG5F,YAAI,cAAc,SAAS,eAAe,wBAAwB,CAAC;AACnE,iBAAQ,aAAa,aAAa;AAC9B,cAAI,iCAAiC,yBAAyB,OAAO,YAAU,OAAO,uBAAuB,SAAS;AAEtH,cAAI,QAAmBD,WAAU,WAAW;AAC5C,gBAAM,iBAAiB;AACvB,gBAAM,UAAU;AAChB,gBAAM,YAAY;AAClB,gBAAM,YAAY,aAAa,8BAA8B;AAC7D,gBAAM,YAAY,eAAe,8BAA8B;AAC/D,gBAAM,OAAO,SAAS,+BAA+B,IAAI,SAAO,IAAI,IAAI,EAAE,KAAK,CAAC;AAEhF,gBAAM,aAAa,gBAAgB,8BAA8B;AACjE,gBAAM,cAAc,+BAA+B,OAAO,YAAU,OAAO,8BAA8B;AACzG,8BAAoB,KAAK;AACzB,oBAAU,OAAO,KAAK,KAAK;AAE3B,mBAAS,QAAQ,MAAM,YAAY;AAC/B,8CAAkC,UAAU,UAAU,IAAI;AAAA,UAC9D;AACA,mBAAS,cAAc,MAAM,aAAa;AACtC,yCAA6B,UAAU,UAAU,UAAU;AAAA,UAC/D;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,aAAQ,WAAW,UAAU,SAAS,OAAO,GAAG;AAC5C,0BAAoB,OAAO;AAC3B,0CAAoC,OAAO;AAC3C,wCAAkC,OAAO;AAAA,IAC7C;AAGA,QAAI,kBAAkB,SAAS,UAAU,OAAO,IAAI,OAAK,EAAE,cAAc,CAAC,EAAE,KAAK,CAAC,GAAE,MAAM;AAAE,aAAO,EAAE,cAAc,CAAC;AAAA,IAAE,CAAC;AACvH,aAAQ,SAAS,iBAAiB;AAC9B,gBAAU,YAAY,IAAI,OAAmB,EAAC,MAAM,OAAO,QAAQ,CAAC,EAAC,CAAC;AAAA,IAC1E;AACA,aAAQ,SAAS,UAAU,QAAQ;AAC/B,gBAAU,YAAY,IAAI,MAAM,cAAc,EAAE,OAAO,KAAK,KAAK;AAAA,IACrE;AAGA,QAAI,WAAW,SAAS,UAAU,OAAO,IAAI,OAAK,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,GAAE,MAAM;AAAE,aAAO,EAAE,cAAc,CAAC;AAAA,IAAE,CAAC;AACzG,aAAQ,KAAK,UAAU;AACnB,gBAAU,SAAS,IAAI,GAAY,EAAC,MAAM,GAAG,QAAQ,CAAC,EAAC,CAAC;AAAA,IAC5D;AACA,aAAQ,SAAS,UAAU,QAAQ;AAC/B,gBAAU,SAAS,IAAI,MAAM,OAAO,EAAE,OAAO,KAAK,KAAK;AAAA,IAC3D;AAGA;AAAA,MACI,UAAU,SAAS,OAAO;AAAA,MAC1B,CAAC,UAAU,MAAM;AAAA,MACjB,CAAC,SAAkB,cAAc;AAAE,gBAAQ,cAAc;AAAA,MAAW;AAAA,IACxE;AAGA;AAAA,MACI,UAAU,YAAY,OAAO;AAAA,MAC7B,CAAC,UAAU,MAAM;AAAA,MACjB,CAAC,SAAkB,cAAc;AAAE,gBAAQ,cAAc;AAAA,MAAW;AAAA,IACxE;AAGA;AAAA,MACI,UAAU,SAAS,OAAO;AAAA,MAC1B,CAAC,UAAU,MAAM;AAAA,IACrB;AAGA;AAAA,MACI,UAAU,YAAY,OAAO;AAAA,MAC7B,CAAC,UAAU,MAAM;AAAA,IACrB;AAEA,QAAI,SAAS;AACb,WAAO;AAAA,EACX;AAEA,WAAS,qBAAqB,eAAoC,iBAA+C,mBAAgF;AAC7L,aAAS,WAAW,eAAe;AAC/B,UAAI,SAAS,QAAQ;AACrB,UAAI,gBAAgB,SAAS,OAAO,IAAI,eAAe,CAAC;AACxD,UAAI,iBAAiB,IAAI,IAAI,cAAc,IAAI,SAAO,CAAC,KAAKA,WAAU,WAAW,CAAC,CAAC,CAAC;AAEpF,eAAS,SAAS,QAAQ;AACtB,mBAAW,eAAe,IAAI,gBAAgB,KAAK,CAAC,GAAG,KAAK;AAAA,MAChE;AACA,qBAAe,QAAQ,WAAS;AAC5B,0BAAkB,KAAK;AAAA,MAC3B,CAAC;AACD,wBAAkB,SAAS,cAAc;AAAA,IAC7C;AAAA,EACJ;AAEA,WAAS,YAAY,eAAoC,eAA6C;AAClG,aAAS,WAAW,eAAe;AAC/B,UAAI,SAAS,QAAQ;AACrB,UAAI,OAAO,SAAS,OAAO,IAAI,aAAa,CAAC;AAC7C,cAAQ,eAAe,IAAI,IAAI,KAAK,IAAI,SAAO,CAAC,KAAKA,WAAU,WAAW,CAAC,CAAC,CAAC;AAE7E,eAAS,SAAS,QAAQ;AACtB,mBAAW,QAAQ,aAAa,IAAI,cAAc,KAAK,CAAC,GAAG,KAAK;AAAA,MACpE;AACA,cAAQ,aAAa,QAAQ,WAAS;AAClC,0BAAkB,KAAK;AAAA,MAC3B,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,WAAS,WAAW,gBAA2B,QAAmB;AAAC;AAC/D,qBAAe,YAAY,KAAK,GAAG,OAAO,WAAW;AACrD,eAAS,UAAU,CAAC,GAAG,GAAG,CAAC,GAAG;AAC1B,uBAAe,WAAW,MAAM,EAAE,KAAK,OAAO,WAAW,MAAM,EAAE,CAAC,CAAC;AAAA,MACvE;AACA,qBAAe,UAAU,OAAO;AAChC,aAAO;AAAA,IACX;AAAA,EAAC;AAED,WAAS,kBAAkB,OAAkB;AACzC,QAAI,YAAY,MAAM,WAAW,KAAK,EAAE,OAAO,MAAM,WAAW;AAChE,UAAM,YAAY,CAAC,GAAG,IAAI,IAAI,UAAU,OAAO,SAAO,GAAG,EAAE,IAAI,SAAO,IAAI,SAAS,CAAC,CAAC,EAAE,KAAK,IAAI;AAChG,UAAM,UAAU,CAAC,GAAG,IAAI,IAAI,UAAU,OAAO,SAAO,GAAG,EAAE,IAAI,SAAO,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,IAAI;AAC5F,UAAM,YAAY,CAAC,GAAG,IAAI,IAAI,UAAU,OAAO,SAAO,GAAG,EAAE,IAAI,SAAO,IAAI,SAAS,CAAC,CAAC,EAAE,KAAK,IAAI;AAChG,UAAM,iBAAkB,CAAC,GAAG,IAAI,IAAI,UAAU,OAAO,SAAO,GAAG,EAAE,IAAI,SAAO,IAAI,cAAc,CAAC,CAAC,EAAE,KAAK,IAAI;AAC3G,UAAM,OAAO,SAAS,UAAU,OAAO,SAAO,GAAG,EAAE,IAAI,SAAO,IAAI,IAAI,EAAE,KAAK,CAAC;AAAA,EAClF;AAEA,WAAS,oBAAoB,OAAkB;AAC3C,QAAI,iBAAiB,MAAM,YACtB,IAAI,YAAU,OAAO,YAAY,aAAa,EAC9C,SAAS,IAAI;AAClB,QAAG,CAAC,gBAAgB;AAChB,uBAAiB,MAAM,WAAW,KAAK,EAClC,IAAI,YAAU,QAAQ,YAAY,aAAa,EAC/C,SAAS,IAAI;AAAA,IACtB;AACA,QAAG;AACC,YAAM,UAAU,sBAAsB;AAAA,EAC9C;AAEA,WAAS,kCAAkC,aAAuC,kBAAyB;AACvG,aAAQ,mBAAmB,kBAAkB;AACzC,UAAI,CAAC;AACD;AACJ,eAAS,WAAW,gBAAgB,UAAU;AAC1C,YAAI,CAAC,YAAY,IAAI,QAAQ,IAAI,GAAG;AAChC,kBAAQ,uBAAuB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1C,sBAAY,IAAI,QAAQ,MAAM,OAAO;AAAA,QACzC;AACA,YAAI,OAAO,YAAY,IAAI,QAAQ,IAAI;AACvC,aAAK,qBAAqB,gBAAgB,cAAc,CAAC,EAAE,KAAK,eAAe;AAAA,MACnF;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,6BAA6B,UAAoC,YAAiB;AACvF,QAAG,CAAC,WAAY;AAChB,aAAS,WAAW,WAAW,UAAU;AACrC,UAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,GAAG;AAC7B,gBAAQ,kBAAkB,CAAC;AAC3B,iBAAS,IAAI,QAAQ,MAAM,OAAO;AAAA,MACtC;AACA,UAAI,OAAO,SAAS,IAAI,QAAQ,IAAI;AACpC,WAAK,gBAAgB,KAAK,UAAU;AAAA,IACxC;AAEA,eAAW,WAAW,WAAW,SAC5B,IAAI,CAAC,YAAY,SAAS,IAAI,QAAQ,IAAI,CAAC;AAAA,EACpD;AAEO,WAAS,aAAa,UAAyB;AAClD,QAAG,CAAC,SAAU;AACd,QAAI,aAAa,IAAI,KAAK,SAAS;AACnC,QAAI,UAAU,oBAAoB;AAClC,aAEK,KAAK,CAAC,GAAE,MAAM;AACX,UAAI,EAAE,eAAgB,CAAC,EAAE,aAAc;AACnC,eAAO;AAAA,MACX,WAAY,CAAC,EAAE,eAAgB,EAAE,aAAa;AAC1C,eAAO;AAAA,MACX,OAAO;AACH,YAAI,QAAQ,+BAAmC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE;AACpF,YAAI,QAAQ,+BAAmC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE;AACpF,eAAO,WAAW,QAAQ,OAAO,KAAK;AAAA,MAC1C;AAAA,IACJ,CAAC;AAAA,EACT;AAYO,MAAM,gBAAgB;AAEtB,WAAS,mBAAmB,OAAkB;AACjD,QAAI,eAAe,MAAM,YAAY,IAAI,SAAO,IAAI,QAAQ,EAAE,KAAK;AACnE,QAAI,oBAAoB;AAAA,MACpB,MAAM,WAAW,CAAC,EAAE,IAAI,SAAO,KAAK,YAAY,CAAC,CAAC,EAAE,KAAK;AAAA,MACzD,MAAM,WAAW,CAAC,EAAE,IAAI,SAAO,KAAK,YAAY,CAAC,CAAC,EAAE,KAAK;AAAA,MACzD,MAAM,WAAW,CAAC,EAAE,IAAI,SAAO,KAAK,YAAY,CAAC,CAAC,EAAE,KAAK;AAAA,IAC7D;AAEA,sBAAkB,QAAS,UAAQ,aAAa,IAAI,CAAC;AAErD,QAAI,eAAe,MAAM,WACpB,IAAI,CAAC,eAAe;AACjB,UAAG,WAAW,WAAW;AACrB,eAAO;AACX,aAAO,WACF,IAAI,SAAO,KAAK,aAAa,CAAC,EAC9B,IAAI,eAAa,YAAY,gBAAgB,IAAI,SAAS,EAC1D,OAAO,CAAC,GAAE,MAAM,IAAE,CAAC;AAAA,IAC5B,CAAC;AAEL,QAAI,kBAAkB,KAAK;AAAA,MACvB,GAAG;AAAA,MACH,GAAG,kBAAkB,IAAI,UAAQ,KAAK,MAAM;AAAA,IAChD;AACA,QAAI,eAAe,MAAM,WACpB,IAAI,CAAC,eAAe;AACjB,UAAG,WAAW,WAAW;AACrB,eAAO;AACX,aAAO,WACF,IAAI,SAAO,KAAK,cAAc,CAAC,EAC/B,OAAO,CAAC,GAAE,MAAM,IAAI,CAAC;AAAA,IAC9B,CAAC;AAEL,QAAI,gBAAgB,aACf,KAAK,gBAAc,aAAW,CAAC;AACpC,QAAI,eAAe;AACf;AAAA,IACJ;AAEA,QAAI,sBAAsB,MAAM,YAC3B,IAAI,SAAO,IAAI,SAAS,EACxB,OAAO,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;AACvC,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EAEJ;;;AC1ZA,MAAOE,oBAAQ,IAAI,aAAa,qBAAqBC,WAAU;AAE/D,WAASA,YAAY,UAA0B;AAC3C,QAAI,kBAAkB,SAAS,eAAmB,mBAAmB;AACrE,QAAI,SAAS,WAAW,iBAAiB;AACrC,aAAO;AAAA,IACX;AAGA,QAAI,cAAc,SAAS,eAAe,4BAA4B;AACtE,QAAI,CAAC,aAAa;AACd,aAAO;AAAA,IACX;AACA,QAAI,mBAAmB,YAAY,cAAc,cAAc,4BAA4B;AAC3F,QAAG,kBAAkB,UAAU,IAAI;AAC/B,uBAAiB,QAAQ,iBAAiB,YAAY,WAAW,MAAM,GAAG,EAAE,WAAW,UAAU,GAAG,EAAE,WAAW,SAAS,GAAG,EAAE,WAAW,QAAQ,GAAG,EAAE,WAAW,OAAO,GAAG,EAAE,WAAW,MAAM,GAAG;AAClM,uBAAiB,WAAW,QAAQ,UAAQ;AACxC,YAAG,KAAK,aAAa,KAAK;AACtB,eAAK,OAAO;AAAA,MACpB,CAAC;AACD,uBAAiB,cAAc,QAAQ,GAAG,OAAO;AACjD,uBAAiB,MAAM,kBAAkB;AACzC,uBAAiB,MAAM,QAAQ;AAAA,IACnC;AACA,6BAAyB,WAAW;AACpC,WAAO;AAAA,EACX;AAEA,WAAS,yBAAyB,aAAgC;AAE9D,QAAI,eAAe,SAAS,eAAmB,mBAAmB;AAClE,QAAI,UAAU,SAAS,eAAmB,WAAW;AACrD,QAAI,CAAC,SAAS;AACV,UAAIC,WAAU,SAAS,cAAc,KAAK;AAC1C,UAAI,gBAAgB,SAAS,eAAe,8BAA8B;AAC1E,oBAAc,sBAAsB,YAAYA,QAAO;AACvD,MAAAA,SAAQ,KAAS;AAAA,IACrB;AACA,iBAAa,QAAQ,oBAAoB;AAEzC,QAAI,SAAS,SAAS,uBAAuB,OAAO;AACpD,QAAI,aAAa,MAAM,KAAK,MAAM,EAAE,KAAK,CAAC,OAAO,GAAG,gBAAgB,QAAQ;AAC5E,QAAI,SAAS,MAAM,KAAK,MAAM,EAAE,KAAK,CAAC,OAAO,GAAG,gBAAgB,KAAK;AACrE,QAAI,WAAW,SAAS,uBAAuB,cAAc;AAC7D,QAAI,cAAc,SAAS,WAAU;AAErC,QAAI,iBAAiB,MAAM,KAAK,QAAQ,EAAE,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE,KAAK,CAAC,QAAQ,IAAI,SAAS,YAAY,CAAC;AAElH,QAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB;AAC3D;AAAA,IACJ;AACA,QAAI,YAAY;AACZ,MAAAC,WAAU,aAAiB,gBAAgB,mBAAmB,uBAAuB,YAAY;AAAA,IACrG;AACA,QAAG,UAAU,aAAa;AACtB,MAAAA,WAAU,aAAiB,kBAAkB,+BAA+B,qBAAqB,gBAAgB;AAAA,IACrH;AACA,QAAG,gBAAgB;AACf,MAAAA,WAAU,aAAiB,sBAAsB,wBAAwB,oBAAoB,mBAAmB;AAAA,IACpH;AAEA,mBAAe;AAAA,EACnB;AAEA,MAAM,gBAAgB;AAEtB,MAAI,cAAc;AAClB,MAAI;AAEJ,WAAS,iBAAiB;AACtB,QAAI,qBAAqB,SAAS,cAAc,kCAAkC;AAClF,QAAG,CAAC,SAAS,eAAe,aAAa;AACrC,yBAAmB,sBAAsB,YAAY,mBAAmB,eAAe,eAAe,WAAW,CAAC;AAEtH,kBAAc;AAAA,EAClB;AAEA,WAAS,gBAAgB;AACrB,kBAAe,SAAS,eAAe,aAAa,EAAuB;AAC3E,QAAG,wBAAwB,GAAG;AAU1B,UAAS,6BAAT,SAAoC,IAAyB,SAAc;AAEvE,YAAc,QAAQ,eAAgB,SAAS,GAAG,QAAQ,OAAO;AAC7D,iBAAO;AAEX,YAAc,QAAQ,SAAU,SAAS,GAAG,QAAQ,OAAO;AACvD,iBAAO;AAEX,eAAkB,QAAQ,SAAU,SAAS,GAAG,QAAQ,OAAO,KAAK,GAAG,UAAU,SAAS,aAAa;AAAA,MAC3G;AAlBA,UAAI,YAAY,oBAAoB,aAAa,CAAC,OAAO,GAAG,WAAW;AACvE,UAAI,eAAe,gBAAoB,eAAe,SAAS;AAG/D,UAAI,WAAW,CAAC,GAAG,IAAI,IAAI,aAAa,OAAO,QAAM,GAAG,QAAQ,YAAY,YAAY,EAAE,IAAI,QAAM,GAAG,QAAQ,OAAO,CAAC,CAAC;AACxH,UAAI,WAAW,CAAC,GAAG,IAAI,IAAI,aAAa,IAAI,QAAM,GAAG,QAAQ,OAAO,CAAC,CAAC;AAEtE,UAAI,iBAAiB,CAAC,GAAG,IAAI,IAAI,aAAa,OAAO,QAAM,GAAG,QAAQ,YAAY,YAAY,EAAE,IAAI,QAAM,GAAG,QAAQ,OAAO,CAAC,CAAC;AAa9H,kBAAgB,eAAe,EAAC,SAAS,EAAC,UAAU,UAAU,eAAc,GAAG,WAAW,2BAA0B,CAAC;AAAA,IACzH,OAAO;AACH,UAAI,YAAY,oBAAoB,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,WAAW;AAChF,kBAAY,gCAA+B,SAAS;AAAA,IACxD;AAAA,EACJ;AAEA,WAASA,WAAU,aAAgC,UAAkB,OAAe,eAAmE,SAAiB;AACpK,QAAI,SAAS,SAAS,eAAe,QAAQ;AAC7C,QAAI,WAAW,MAAM;AACjB,YAAMC,UAAS,SAAS,cAAc,QAAS;AAC/C,MAAAA,QAAO,UAAU,IAAI,OAAO,UAAU,yBAAyB,OAAO;AACtE,MAAAA,QAAO,KAAK;AACZ,MAAAA,QAAO,MAAM,YAAY;AACzB,MAAAA,QAAO,UAAU;AACjB,MAAAA,QAAO,QAAQ;AACf,YAAM,gBAAgB,SAAS,cAAc,GAAG;AAChD,MAAAA,QAAO,YAAY,aAAa;AAChC,oBAAc,UAAU,IAAI,OAAO,OAAO;AAC1C,kBAAY,sBAAsB,eAAeA,OAAM;AAAA,IAC3D;AAAA,EACJ;AACA,WAAS,sBAAsB;AAC3B,QAAI,SAAS,sBAAsB;AAEnC,QAAI,QAAQ,SAAS,eAAe,8BAA8B;AAElE,QAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,cAAU,KAAK;AACf,cAAU,UAAU,IAAI,eAAe;AAEvC,QAAI,aAAa;AACjB,UAAM,WAAW,aAAa,WAAW,MAAM,eAAe;AAC9D,aAAQ,OAAO,QAAQ;AACnB,UAAI,IAAI,KAAK;AACT,YAAG,IAAI,SAAS;AACZ,wBAAc,mBAAmB,IAAI,IAAI;AAAA,QAC7C;AAAA,MACJ;AAAA,IACJ;AACA,cAAU,YAAY;AAAA,EAC1B;AAEA,WAAS,uBAAuB,UAAmB;AAC/C,QAAI,UAAU,SAAS,eAAmB,WAAW;AACrD,YAAQ,QAAQ,gBAAgB,WAAW,SAAS;AAAA,EACxD;AAEA,WAAS,qBAAqB;AAC1B,QAAI,SAAS,sBAAsB;AACnC,QAAI,eAAe,SAAS,eAAmB,mBAAmB;AAClE,iBAAa,QAAQ,qBAAqB,aAAa,QAAQ,qBAAoB,aAAa,UAAU,SAAS;AACnH,QAAI,eAAe,aAAa,QAAQ,sBAAsB,SAAS,SAAS;AAChF,aAAQ,OAAO,QAAQ;AACnB,UAAI,IAAI,SAAS,IAAI,WAAW;AAC5B,YAAI,SAAS,MAAM,UAAU;AAAA,MACjC;AAAA,IACJ;AACA,yBAAyB,sBAAsB,aAAa,QAAQ,sBAAsB,MAAM;AAChG,2BAAuB,iBAAiB,MAAM;AAAA,EAClD;AAEA,WAAS,wBAAwB;AAC7B,uBAAmB,CAAC,wBAAwB,GAAG,aAAa;AAAA,EAChE;AAEO,WAAS,0BAA0B;AACtC,WAAO,SAAS,eAAe,8BAA8B,EAAE,MAAM,YAAY;AAAA,EACrF;AAEO,WAAS,mBAAmB,MAAe,UAA6B;AAC3E,aAAS,eAAmB,aAAa,GAAG,OAAO;AAEnD,QAAI,CAAC,SAAS,eAAmB,aAAa,GAAG;AAC7C,UAAI,eAAe,cAAc;AACjC,UAAI,YAAY,eAAe,aAAa,iBAAiB,OAAO,aAAa,WAAW,CAAC;AAC7F,0BAAoB,WAAW,QAAQ;AAAA,IAC3C;AAEA,aAAS,eAAe,8BAA8B,EAAE,MAAM,UAAU,OAAO,SAAS;AACxF,aAAS,eAAmB,aAAa,EAAE,MAAM,UAAU,OAAO,UAAU;AAC5E,aAAS,eAAmB,cAAc,EAAE,QAAQ,OAAO,iBAAiB;AAC5E,yBAAyB,gBAAgB,IAAI;AAC7C,mBAAe,MAAM,QAAQ;AAC7B,kBAAc;AAAA,EAClB;AAEA,WAAS,yBAAyB;AAC9B,QAAI,aAAa,SAAS,eAAe,gBAAgB;AACzD,eAAW,YAAY;AACvB,QAAG,oBAAoB,yBAA6B;AAChD,MAAK,MAAM,OAAO,YAAY,0CAA4C;AAAA,IAC9E,OAAO;AACH,MAAK,MAAM,OAAO,YAAY,0CAA4C;AAAA,IAC9E;AACA,aAAS,UAAU,WAAW,iBAAiB,GAAG,GAAG;AACjD,aAAO,UAAU,CAAC,eAA2B;AACzC,YAAK,WAAW,OAAuB,gBAAgB;AACnD,8CAAwC;AAAA;AAExC,+CAAyC;AAC7C,2BAAmB,MAAM,aAAa;AACtC,+BAAuB;AACvB,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,eAAe,eAAwB,UAA6B;AACzE,QAAI,iBAAiB,SAAS,cAAc,0BAA0B;AACtE,QAAI,iBAAiB,SAAS,eAAe,iBAAiB;AAC9D,QAAG,CAAC,gBAAgB;AAChB,uBAAiB,SAAS,cAAc,KAAK;AAC7C,qBAAe,KAAK;AACpB,qBAAe,UAAU,IAAI,YAAY;AACzC,qBAAe,WAAW,aAAa,gBAAgB,eAAe,WAAW;AAAA,IACrF;AACA,QAAI,gBAAgB,SAAS,eAAe,gBAAgB;AAC5D,QAAG,CAAC,eAAe;AACf,MAAK,MAAM,aAAa,gBAAgB,+BAA+B;AACvE,6BAAuB;AAAA,IAC3B;AACA,mBAAe,YAAY;AAC3B,mBAAe,MAAM,UAAU,gBAAgB,SAAS;AACxD,mBAAe,MAAM,UAAU,gBAAgB,KAAK;AAEpD,mBAAe,YAAY,0DAAoE,QAAQ,CAAC;AACxG,mBAAe,YAAY,SAAS,eAAe,KAAK,CAAC;AACzD,mBAAe,YAAY,0DAAoE,QAAQ,CAAC;AACxG,mBAAe,YAAY,SAAS,eAAe,KAAK,CAAC;AACzD,mBAAe,YAAY,gDAA0D,QAAQ,CAAC;AAC9F,mBAAe,YAAY,SAAS,eAAe,KAAK,CAAC;AACzD,mBAAe,YAAY,+CAAyD,QAAQ,CAAC;AAC7F,mBAAe,YAAY,SAAS,eAAe,KAAK,CAAC;AACzD,mBAAe,YAAY,4CAAsD,QAAQ,CAAC;AAAA,EAC9F;AAEA,WAAS,2BAA2B,UAA6B,eAAkC;AAC/F,QAAI,cAAc;AAClB,YAAQ,UAAU;AAAA,MACd;AAA8C,sBAAc;AAA4B;AAAA,MACxF;AAA8C,sBAAc;AAA4B;AAAA,MACxF;AAAoC,sBAAc;AAAiB;AAAA,MACnE;AAAuC,sBAAc;AAAqB;AAAA,MAC1E;AAAmC,sBAAc;AAAc;AAAA,MAC/D;AAAgC,sBAAc;AAAU;AAAA,IAC5D;AAEA,QAAI,kBAAkB,UAAU;AAC5B,UAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,aAAO,YAAY,SAAS,eAAe,WAAW,CAAC;AACvD,aAAO;AAAA,IACX,OAAO;AACH,UAAI,SAAS,SAAS,cAAc,GAAG;AACvC,aAAO,YAAY;AACnB,aAAO,OAAO;AACd,aAAO,UAAU,MAAM;AACnB,wBAAgB;AAChB,2BAAmB,MAAM,QAAQ;AACjC,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AAAA,EACJ;;;AC7QA,MAAOC,oBAAQ,IAAI,aAAa,eAAeC,WAAU;AAEzD,WAASA,YAAW,UAA0B;AAC1C,QAAI,gBAAgB,SAAS,eAAe,2BAA2B;AACvE,QAAI,SAAS,WAAW,eAAe;AACnC,0BAAoB;AACpB,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAEA,WAAS,sBAAsB;AAC3B,YAAQ,IAAI,yBAAyB;AACrC,wBAAoB;AAAA,EACxB;AAEA,WAAS,sBAAsB;AAC3B,QAAI;AACA,UAAI,cAAc,SAAS,iBAAiB,mCAAmC;AAC/E,UAAI,WAAW,MAAM,KAAK,WAAW,EAAE,KAAK,CAAC,UAA2B,MAAM,YAAY,SAAS,gBAAgB,CAAC;AACpH,UAAI,cAAc,MAAM,KAAK,SAAS,iBAAiB,GAAG,CAAC,EAAE,KAAK,YAAU,OAAO,gBAAgB,eAAe;AAClH,YAAM,mBAAmB;AACzB,UAAG,SAAS,eAAe,gBAAgB;AACvC;AACJ,UAAI,qBAAqB,SAAS,cAAc,GAAG;AACnD,yBAAmB,KAAK;AACxB,yBAAmB,OAAO;AAC1B,yBAAmB,YAAY;AAC/B,yBAAmB,UAAU,IAAI,YAAY;AAC7C,yBAAmB,UAAU;AAC7B,eAAS,aAAa,oBAAoB,WAAW;AACrD,eAAS,aAAa,SAAS,eAAe,KAAK,GAAG,WAAW;AAAA,IACrE,SACO,GAAG;AAAA,IAAC;AAAA,EACf;AAEA,WAAS,eAAe,OAAmB;AACvC,iBAAa,KAAK;AAClB,uBAAmB,KAAK;AACxB,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,OAAmB;AACrC,QAAI,OAA8B,MAAM,KAAK,SAAS,iBAAiB,iDAAiD,CAAC;AAEzH,SAAK,KAAK,CAAC,KAAK,QAAQ;AACpB,UAAI,QAAQ,IAAI,cAAc,aAAa,EAAE;AAC7C,UAAI,QAAQ,IAAI,cAAc,aAAa,EAAE;AAC7C,UAAI,YAAY,MAAM,MAAM,GAAG,EAAE,IAAI;AACrC,UAAI,YAAY,MAAM,MAAM,GAAG,EAAE,IAAI;AACrC,aAAO,UAAU,cAAc,SAAS;AAAA,IAC5C,CAAC;AAED,QAAI,QAA0B,SAAS,cAAc,oCAAoC;AACzF,SAAK,QAAQ,SAAO,MAAM,QAAQ,CAAC,EAAE,YAAY,GAAG,CAAC;AAErD,UAAM,KAAK,SAAS,iBAAiB,uCAAuC,CAAC,EACxE,QAAQ,CAAC,MAAM,EAAE,UAAU,IAAI,YAAY,CAAC;AACjD,IAAC,MAAM,OAAuB,UAAU,OAAO,YAAY;AAAA,EAC/D;AAEA,WAAS,mBAAmB,OAAmB;AAC3C,QAAI,OAA8B,MAAM,KAAK,SAAS,iBAAiB,iDAAiD,CAAC;AAEzH,SAAK,QAAQ,CAAC,OAAO;AACjB,UAAI,SAAS,GAAG,cAAc,aAAa;AAC3C,UAAI,OAAO,OAAO;AAClB,UAAI,QAAQ,KAAK,MAAM,GAAG;AAC1B,UAAI,WAAW,MAAM,IAAI,KAAK;AAC9B,UAAI,OAAO,MAAM,IAAI,KAAK;AAC1B,aAAO,cAAc,WAAW,MAAM;AAAA,IAC1C,CAAC;AAAA,EACL;;;ACvEA,MAAOC,oBAAQ,IAAI,aAAa,mBAAmB;AAEnD,2BAAyB,mBAAmB;AAE5C,WAAS,sBAAuB;AAC5B,QAAI,EAAC,UAAU,WAAU,IAAI,qBAAqB;AAClD,QAAI,cAAc,QAAQ,YACrB,MAAM,IAAI,EACV,OAAO,CAAC,WAAW,WAAW,EAAE,EAChC,KAAK,CAAC,WAAY,WAAW,SAAS,MAAM,CAAC,KAAK;AACvD,QAAI,QAAQ,gBAAgB,IAAI;AAC5B,oBAAc;AAAA,IAClB;AACA,QAAI,eAAe,kBAAkB,EAAE,eAAe,QAAQ,QAAQ,uBAAuB,OAAO;AAChG,eAAS,KAAK,UAAU,OAAO,aAAa;AAAA,IAChD,OAAO;AACH,eAAS,KAAK,UAAU,IAAI,aAAa;AAAA,IAC7C;AAAA,EACJ;;;ACdA,MAAI,iBAAiB;AACrB,MAAI,cAAc;AAClB,MAAI,eAAe;AAEnB,MAAI,mBAAmB,IAAI,iBAAiB,CAAC,cAAc,aAAa,yBAAyB,cAAc,QAAQ,CAAC;AAExH,cAAY,SAAS,GAAI;AACzB,WAAS,UAAU;AACf,mBAAe,cAAc;AAAA,EACjC;AACA,MAAI,iBAA2B;AAe/B,MAAI,eAA6C;AAAA,IAC7C,EAAC,KAAI,OAAO,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,GAAK,SAAS,CAAC,QAAQ,IAAI,UAAU,IAAG,EAAC;AAAA,IAChG,EAAC,KAAI,UAAU,KAAK,EAAE,OAAM,UAAU,WAAW,CAAC,GAAG,QAAQ,GAAK,SAAS,CAAC,QAAQ,IAAI,UAAU,OAAO,WAAW,KAAK,EAAE,EAAE,WAAW,KAAK,EAAE,EAAC,EAAC;AAAA,IACjJ,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAE5J,EAAC,KAAI,cAAc,KAAK,EAAE,OAAM,eAAe,WAAW,CAAC,QAAQ,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,iBAAiB,KAAK,CAAC,WAAW,WAAW,WAAW,SAAS,CAAC,GAAG,QAAO,MAAM,YAAW,KAAI,EAAC;AAAA,IAExM,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAE5J,EAAC,KAAI,cAAc,KAAK,EAAE,OAAM,eAAe,WAAW,CAAC,QAAQ,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,iBAAiB,KAAK,CAAC,WAAW,WAAW,SAAS,CAAC,GAAG,QAAO,MAAM,YAAW,KAAI,EAAC;AAAA,IAE7L,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC5J,EAAC,KAAI,WAAW,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAE5J,EAAC,KAAI,cAAc,KAAK,EAAE,OAAM,eAAe,WAAW,CAAC,QAAQ,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,iBAAiB,KAAK,CAAC,WAAW,WAAW,SAAS,CAAC,GAAG,QAAO,MAAM,YAAW,KAAI,EAAC;AAAA,IAE7L,EAAC,KAAI,YAAY,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAC7J,EAAC,KAAI,YAAY,KAAK,EAAE,OAAM,OAAO,WAAW,CAAC,GAAG,QAAQ,IAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK,EAAE,OAAO,MAAM,cAAc,EAAC;AAAA,IAE7J,EAAC,KAAI,aAAa,KAAK,EAAE,OAAM,cAAc,WAAW,CAAC,QAAQ,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,iBAAiB,KAAK,CAAC,YAAY,UAAU,CAAC,GAAG,QAAO,MAAM,YAAW,KAAI,EAAC;AAAA,IAElL,EAAC,KAAI,cAAc,KAAK,EAAE,OAAM,eAAe,WAAW,CAAC,SAAS,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,SAAS,KAAK,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,YAAY,UAAU,CAAC,GAAG,QAAO,MAAM,YAAW,KAAI,EAAC;AAAA,IAC3R,EAAC,KAAI,YAAY,KAAK,EAAE,OAAM,aAAa,WAAW,CAAC,OAAO,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,iBAAiB,KAAK,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,YAAY,UAAU,CAAC,GAAG,QAAO,MAAM,YAAW,KAAI,EAAC;AAAA,IAC7R,EAAC,KAAI,QAAQ,KAAK,EAAE,OAAM,QAAQ,WAAW,CAAC,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,SAAS,GAAG,GAAG,YAAW,KAAI,EAAC;AAAA,EACpH;AAEA,MAAI,UAAU,IAAI,IAAI,aAAa,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC;AAEnE,WAAS,YAAY,MAAc;AAC/B,QAAI,SAAS,OAAO,MAAO;AAC3B,QAAI,QAAQ,SAAS;AACrB,QAAI,SAAS,SAAS;AACtB,QAAI,UAAU,QAAQ,MAAM,IAAI,KAAK;AACrC,QAAI,UAAU,QAAQ,KAAK,IAAI,MAAM;AACrC,WAAO,EAAC,QAAQ,OAAO,QAAQ,SAAS,QAAO;AAAA,EACnD;AAEA,WAAS,cAAc,MAAc;AACjC,QAAI,EAAC,QAAQ,OAAO,QAAQ,SAAS,QAAO,IAAI,YAAY,IAAI;AAChE,QAAI,cAAc,oBAAI,IAAI;AAC1B,gBAAY,IAAI,SAAS,EAAE,OAAM;AAAA,EAAS,MAAM,IAAI,KAAK,IAAI,WAAW,CAAC,iBAAiB,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,SAAS,IAAI,KAAK,UAAU,UAAU,IAAI,QAAQ,MAAM,IAAI,KAAK,EAAE,GAAG,IAAI,IAAI,UAAU,EAAE,CAAC,GAAG,QAAO,KAAI,CAAC;AACvO,gBAAY,IAAI,SAAS,EAAE,OAAM;AAAA,EAAS,KAAK,IAAI,MAAM,IAAI,WAAW,CAAC,iBAAiB,GAAG,QAAQ,GAAK,UAAU,CAAC,QAAQ,SAAS,IAAI,KAAK,UAAU,UAAU,IAAI,QAAQ,KAAK,IAAI,MAAM,EAAE,GAAG,IAAI,IAAI,UAAU,EAAE,CAAC,GAAG,QAAO,KAAI,CAAC;AACvO,cAAU,IAAI,IAAI,CAAC,GAAG,aAAa,GAAG,IAAI,IAAI,aAAa,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7F,QAAI,MAAM;AACV,YAAQ,QAAQ,YAAU;AACtB,aAAO,WAAW;AAClB,aAAO,QAAQ;AAAA,IACnB,CAAC;AAAA,EACL;AAGA,WAAS,SAAS,KAAc;AAC5B,QAAI,UAAU,YAAY,KAAK,UAAU;AACzC,QAAI,MAAM,OAAO,GAAG;AAChB,gBAAU;AAAA,IACd;AACA,QAAI,WAAW,YAAY,KAAK,IAAI,OAAO;AAC3C,QAAI,MAAM,QAAQ,GAAG;AACjB,iBAAW;AAAA,IACf;AACA,WAAO,WAAW;AAAA,EAEtB;AAaA,WAAS,YAAY,KAAc,QAAgB;AAE/C,QAAI,SAAkB,EAAC,GAAG,IAAG;AAC7B,WAAO,SAAS;AAEhB,WAAO,SAAS,OAAO,QAAQ,IAAI,MAAM;AACzC,WAAO,OAAO,OAAO,SAAS,MAAM;AAAA,EACxC;AAEA,WAAS,yBAAyB,cAAgC,WAA6B;AAC3F,QAAI,aAAa,MAAM,CAAC,QAAQ,IAAI,SAAS,YAAY;AACrD;AACJ,kBAAc;AAAA,EAClB;AAEO,WAAS,2BAA2B;AACvC,WAAO,kBAAkB,IAAI,kBAAuB,eAAe,EAAE,QAAQ,KAAK,GAAG,IAAI;AAAA,EAC7F;AAEA,WAAS,eAAe,UAAoB;AACxC,QAAG,gBAAgB;AACf;AAAA,IACJ;AACA,QAAG,CAAC,aAAa;AACb;AAAA,IACJ;AACA,kBAAc;AACd,QAAI,UAAU,YAAY,SAAS,IAAI;AACvC,mCAA+B,UAAU,QAAQ,OAAO;AACxD,mCAA+B,UAAU,QAAQ,OAAO;AAExD,UAAM,KAAK;AAAA,MACP,yBAAyB;AAAA,MACzB,SAAS,UAAU,OAAO,QAAQ,SAAS,QAAQ,OAAO;AAAA,IAAC,EAC1D,KAAK,OAAK;AAAE,cAAQ,IAAI,gBAAgB;AAAA,IAAC,CAAC;AAE/C,gBAAY,QAAQ;AAAA,EACxB;AAEA,WAAS,+BAA+B,UAAoB,QAAgB;AACxE,QAAI,SAAS,QAAQ,IAAI,MAAM;AAC/B,aAAQ,MAAM,SAAS,iBAAiB,MAAQ,iBAAe,WAAW,GAAG;AACzE,eAAS,UAAU,UAAU,IAAI,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG,SAAS,OAAO,QAAQ,EAAE,WAAW;AAAA,IAChG;AAAA,EACJ;AAEA,WAAS,aAAa,SAAkB;AACpC,UAAM,SAAS;AAAA,MACX,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,SAAS;AAAA,MACT,eAAe;AAAA,IACnB;AACA,QAAI,QAAQ,SAAS,eAAmB,cAAc;AACtD,QAAG,SAAS;AACR,uBAAiB,YAAY;AAC7B,uBAAiB,QAAQ,OAAO,MAAM;AAAA,IAC1C,OAAO;AACH,uBAAiB,WAAW;AAAA,IAChC;AAAA,EACJ;AAEA,WAAS,SAAS,KAAmC;AACjD,QAAG,IAAI,OAAO,SAAS;AACnB,UAAI,GAAG,YAAY,IAAI,OAAO,QAAQ,GAAG;AACzC,aAAO;AAAA,IACX;AACA,QAAI,IAAI,OAAO,MAAM;AACjB,UAAI,OAAO,KAAK,GAAG;AACnB,aAAO;AAAA,IACX;AACA,QAAI,WAAW,IAAI,OAAO,SAAS,GAAG;AACtC,QAAI,GAAG,YAAY,WAAW,QAAQ;AACtC,WAAO;AAAA,EACX;AAEA,WAAS,oBAAoB,QAAgB,KAAc,YAAqB;AAC5E,QAAI,WAAW;AACf,QAAI,OAAO,cAAc,CAAC;AACtB,iBAAW,SAAS,GAAG;AAC3B,QAAI,OAAO,QAAQ;AACf,UAAI,CAAC;AACD,mBAAW,OAAO,SAAS,GAAG;AAClC,UAAI;AACA,eAAO,SAAS;AAAA,IACxB;AAAA,EACJ;AAEA,WAAS,cAAc;AACnB,aAAS,CAAC,SAAS,MAAM,KAAK,SAAS;AACnC,UAAI,OAAO,QAAQ;AACf,eAAO,QAAQ;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,YAAY,UAAoB;AACrC,qBAAiB;AACjB,iBAAa,KAAK;AAClB,gBAAY;AAEZ,QAAI,UAAU,YAAY,SAAS,IAAI,EAAE;AAEzC,aAAS,CAAC,cAAc,SAAS,KAAK,SAAS,YAAY;AACvD,UAAI,KAAK,SAAS,eAAe,cAAc,YAAY,CAAC;AAC5D,eAAQ,CAAC,QAAQ,MAAM,KAAK,SAAS;AACjC,YAAI,KAAK,GAAG,SAAS,OAAO,QAAQ;AACpC,YAAI,MAAe,EAAC,IAAI,QAAQ,QAAQ,WAAW,IAAI,SAAS,MAAM,UAAU,QAAQ;AACxF,4BAAoB,QAAQ,KAAK,IAAI;AAAA,MACzC;AAAA,IACJ;AACA,QAAI,UAAU,SAAS,eAAe,YAAY;AAClD,aAAQ,CAAC,SAAS,MAAM,KAAK,SAAS;AAClC,UAAI,KAAK,QAAQ,SAAS,OAAO,QAAQ;AACzC,UAAG,OAAO,QAAQ;AACd,WAAG,YAAY,WAAW,OAAO,KAAK;AAAA,MAC1C;AAAA,IACJ;AAEA,kBAAc;AACd,qBAAiB;AACjB,iBAAa,IAAI;AAAA,EACrB;AAEO,WAAS,WAAW,UAAoB,UAAoB;AAC/D,qBAAiB;AACjB,qBAAiB;AACjB,QAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,aAAS,SAAS,YAAY,EAAE,sBAAsB,YAAY,KAAK;AACvE,UAAM,KAAS;AACf,UAAM,UAAU,IAAI,SAAS;AAC7B,kBAAc,SAAS,IAAI;AAC3B,oBAAgB,OAAO,SAAS,UAAU;AAC1C,QAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,UAAM,YAAY,KAAK;AAEvB,QAAI,UAAU;AACd,QAAI,WAAW;AACf,gBAAY;AAEZ,QAAI,UAAU,YAAY,SAAS,IAAI,EAAE;AAEzC,aAAQ,CAAC,cAAc,SAAS,KAAK,SAAS,YAAY;AACtD,UAAI,KAAK,SAAS,cAAc,IAAI;AACpC,YAAM,YAAY,EAAE;AACpB,SAAG,QAAQ,YAAY,IAAI;AAC3B,SAAG,KAAK,cAAc,YAAY;AAClC,UAAG,UAAU,QAAQ,SAAS;AAC1B,mBAAY,aAAa,KAAI,YAAY;AAAA,MAC7C;AACA,UAAG,aAAa;AACZ,WAAG,UAAU,IAAI,QAAQ;AAC7B,gBAAU,UAAU;AACpB,eAAQ,CAAC,QAAQ,MAAM,KAAK,SAAS;AACjC,YAAI,KAAK,SAAS,cAAc,IAAI;AACpC,WAAG,YAAY,EAAE;AACjB,WAAG,UAAU,IAAI,GAAG,OAAO,SAAS;AACpC,YAAI,MAAM,EAAC,IAAI,QAAQ,QAAQ,WAAW,IAAI,SAAS,MAAM,UAAU,QAAO;AAC9E,4BAAoB,QAAQ,KAAK,KAAK;AAAA,MAC1C;AAAA,IACJ;AACA,QAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,UAAM,YAAY,KAAK;AACvB,UAAM,UAAU,IAAI,eAAe;AACnC,QAAI,UAAU,SAAS,cAAc,IAAI;AACzC,UAAM,YAAY,OAAO;AAEzB,YAAQ,KAAK;AACb,aAAQ,CAAC,SAAS,MAAM,KAAK,SAAS;AAClC,UAAI,KAAK,SAAS,cAAc,IAAI;AACpC,cAAQ,YAAY,EAAE;AACtB,UAAG,OAAO,QAAQ;AACd,WAAG,YAAY,WAAW,OAAO,KAAK;AAAA,MAC1C;AAAA,IACJ;AAEA,QAAI,YAAY,MAAM,iBAAiB,oBAAoB;AAC3D,cAAU,QAAQ,CAAC,OAAO,GAAG,aAAa,mBAAmB,MAAM,CAAC;AACpE,iBAAa,IAAI;AACjB,qBAAiB;AAAA,EACrB;AAEA,WAAS,SAAS,KAAc,MAAgB;AAC5C,QAAI,MAAM;AACV,aAAQ,OAAO,MAAM;AACjB,UAAI,SAAS,IAAI,QAAQ,IAAI,GAAG;AAChC,UAAI,MAAM,IAAI,UAAU,SAAS,IAAI,OAAO,KAAK,EAAE,SAAS;AAC5D,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAEA,WAAS,iBAAiB,KAAc,MAAgB;AACpD,QAAI,MAAM;AACV,aAAQ,OAAO,MAAM;AACjB,UAAI,SAAS,IAAI,QAAQ,IAAI,GAAG;AAChC,UAAI,MAAM,IAAI,UAAU,SAAS,IAAI,OAAO,KAAK,EAAE,SAAS;AAC5D,UAAI,SAAS,QAAQ,IAAI,GAAG,EAAE;AAC9B,aAAO,MAAM;AAAA,IACjB;AACA,WAAO;AAAA,EACX;AAEA,WAAS,WAAW,KAAa;AAC7B,QAAG,MAAM,GAAG;AACR,aAAO;AAEX,YAAQ,KAAK,MAAM,MAAM,GAAG,IAAI,KAAK,QAAQ,CAAC,EAAE,QAAQ,OAAO,EAAE;AAAA,EACrE;AAEA,WAAS,gBAAgB,OAAyB,aAAqC;AACnF,QAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,UAAM,YAAY,KAAK;AACvB,QAAI,UAAU,SAAS,cAAc,IAAI;AACzC,UAAM,YAAY,OAAO;AACzB,QAAI,KAAK,SAAS,cAAc,IAAI;AACpC,aAAS,UAAU,QAAQ,OAAO,GAAG;AACjC,WAAK,SAAS,cAAc,IAAI;AAChC,cAAQ,YAAY,EAAE;AACtB,SAAG,YAAY,OAAO;AAAA,IAC1B;AAAA,EACJ;AAEA,WAAS,cAAc,KAAc;AACjC,QAAI,YAAY,IAAI,UAAU,SAAS,IAAI,IAAI,OAAO,KAAK;AAC3D,QAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,QAAI,GAAG,YAAY,MAAM;AACzB,QAAG,UAAU,UAAU;AACnB,aAAO,UAAU;AACrB,WAAO,YAAY,UAAU,MAAM,SAAS;AAC5C;AACA,WAAO,aAAa,iBAAiB,cAAc,YAAY;AAC/D,QAAI,aAAa,SAAS,cAAc,KAAK;AAC7C,QAAI,GAAG,YAAY,UAAU;AAC7B,eAAW,KAAK,cAAc;AAC9B,eAAW,aAAa,WAAW,MAAM;AACzC,aAAS,WAAW,UAAU,UAAU;AACpC,UAAI,aAAa,SAAS,cAAc,KAAK;AAC7C,iBAAW,YAAY,UAAU;AACjC,iBAAW,YAAY,QAAQ,WAAW,MAAM,QAAQ;AACxD,YAAM,SAAS,SAAS,cAAc,GAAG;AACzC,iBAAW,YAAY,MAAM;AAC7B,aAAO,OAAO,+BAA+B,QAAQ,KAAK;AAC1D,aAAO,UAAU,IAAI,MAAM;AAC3B,aAAO,QAAQ,YAAY,QAAQ,GAAG,SAAS;AAE/C,YAAM,OAAO,SAAS,cAAc,GAAG;AACvC,aAAO,YAAY,IAAI;AACvB,WAAK,UAAU,IAAI,OAAO,aAAa;AAAA,IAC3C;AACA,WAAO,UAAU;AAAA,EACrB;;;AC5VO,WAAS,cAAc,UAAoB,IAAyB,YAAiB;AACxF,QAAI,UAAuB,IAAI,YAAY;AAC3C,YAAQ,OAAQ,SAAS,YAA0C,cAAc,IAAI,MAAM;AAC3F,YAAQ,WAAY,SAAS,YAA0C,cAAc,IAAG,UAAU;AAClG,YAAQ,KAAK,SAAS,GAAG,WAAW,SAAS,EAAE,MAAM,QAAQ,4CAA4C,EAAE,CAAC;AAC5G,QAAI,SAAU,SAAS,YAA0C,cAAc,IAAG,gBAAgB;AAClG,QAAI,MAAO,SAAS,YAA0C,cAAc,IAAG,KAAK;AACpF,QAAI,gBAAiB,SAAS,YAA0C,cAAc,IAAG,kBAAkB;AAE3G,QAAI,WAAW,GAAI,UAAS;AAE5B,QAAI,CAAC,aAAa,GAAG,GAAG;AACpB,cAAQ,MAAM,2BAA2B;AACzC,aAAO;AAAA,IACX;AACA,QAAI,eAAe,aAAa,GAAG,IAAI,MAAM;AAE7C,QAAI,CAAC,WAAW,IAAI,YAAY,GAAG;AAC/B,UAAI,WAA8C,oBAAI,IAAI;AAC1D,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,eAAS,IAAI,OAAO,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAC5C,UAAI,kBAAkB;AAAA,QAClB,KAAK,aAAa,GAAG;AAAA,QACrB;AAAA,QACA,IAAI,cAAc,YAAY;AAAA,QAC9B;AAAA,MACJ;AACA,iBAAW,IAAI,cAAc,eAAe;AAAA,IAChD;AACA,QAAI,YAAY,WAAW,IAAI,YAAY;AAC3C,QAAI,CAAC,UAAU,SAAS,IAAI,aAAa,GAAG;AACxC,gBAAU,SAAS,IAAI,eAAe,EAAC,OAAO,GAAG,UAAU,CAAC,EAAC,CAAC;AAAA,IAClE;AACA,QAAI,oBAAoB,WAAW,IAAI,YAAY,EAAE,SAAS,IAAI,aAAa;AAC/E,sBAAkB,SAAS;AAC3B,sBAAkB,SAAS,KAAK,OAAO;AACvC,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,KAAa;AAC/B,YAAQ,KAAK;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,IACf;AACA,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,KAAa;AAC/B,aAAS,iBAAiB,YAAoB;AAC1C,aAAO,WACF,QAAQ,eAAe,UAAU,EACjC,QAAQ,YAAY,YAAY,EAChC,QAAQ,WAAW,YAAY,EAE/B,QAAQ,WAAW,OAAO,EAC1B,QAAQ,yBAAyB,yBAAyB,EAC1D,QAAQ,SAAS,OAAO,EACxB,QAAQ,YAAY,OAAO,EAC3B,QAAQ,SAAS,OAAO,EACxB,QAAQ,YAAY,OAAO,EAE3B,QAAQ,eAAe,UAAU,EACjC,QAAQ,mBAAmB,UAAU,EACrC,QAAQ,iBAAiB,UAAU;AAAA,IAC5C;AAEA,QAAG,IAAI,SAAS,iBAAiB,GAAG;AAChC,aAAO,SAAS,iBAAiB,GAAG,EAAE,QAAQ,mBAAmB,EAAE;AAAA,IACvE;AACA,QAAG,IAAI,SAAS,SAAS,GAAG;AACxB,aAAO,OAAO,iBAAiB,GAAG,EAAE,QAAQ,aAAa,EAAE;AAAA,IAC/D;AACA,QAAG,IAAI,SAAS,cAAc,GAAG;AAC7B,aAAO,QAAQ,iBAAiB,GAAG,EAAE,QAAQ,kBAAkB,EAAE;AAAA,IACrE;AAGA,WAAO,OAAO,iBAAiB,GAAG;AAAA,EACtC;;;ACnHO,MAAM,kBAAN,MAAsB;AAAA,IAKzB,YAAY,MAAc,UAAkB,KAA8C;AACtF,WAAK,OAAO;AACZ,WAAK,WAAW;AAChB,WAAK,MAAM;AAAA,IACf;AAAA,IAEA,QAAQ;AACJ,aAAO,KAAK,KAAK,KAAK,WAAW,KAAK,IAAI;AAAA,IAC9C;AAAA,IAEA,YAAY;AACR,aAAO,KAAK,QAAQ,KAAK;AAAA,IAC7B;AAAA,EACJ;AAIO,WAAS,oBAAoB,SAAuB;AACvD,cAAU,WAAU,SAAS;AAE7B,QAAI,mBAAmB,QAAQ,cAAc,iCAAiC;AAC9E,QAAG,CAAC;AACA,aAAO;AACX,QAAI,kBAAkB,iBAAiB,QAAQ,KAAK;AACpD,QAAG,CAAC,iBAAiB;AACjB,aAAO;AAAA,IACX;AACA,QAAI,KAAK;AACT,QAAI,UAAU,iBAAiB,UAAU,MAAM,EAAE;AACjD,QAAI,UAAU,gBAAgB,iBAAiB,sBAAsB;AACrE,QAAI,UAAU,MAAM,KAAK,OAAO,EAC3B,OAAO,CAAC,QAAQ,IAAI,WAAW,SAAS,GAAG,MAAM,SAAS,OAAO,CAAC,EAClE,OAAO,CAAC,QAAqB,CAAC,IAAI,cAAc,oBAAoB,CAAC,EACrE,IAAI,CAAC,QAAqB,cAAc,IAAI,WAAW,SAAS,EAAE,KAAK,CAAC;AAC7E,QAAI,UAAU,QAAQ,MAAM,CAAC,EAAE,IAAI,CAAC,QAAQ,SAAS,GAAG,CAAC;AACzD,YAAQ,CAAC,IAAI,QAAQ,CAAC,IAAE;AACxB,cAAU,QAAQ,OAAO,OAAO;AAChC,YAAQ,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC;AAC5B,cAAU,CAAC,GAAG,IAAI,IAAI,OAAO,CAAC;AAC9B,WAAO,IAAI,gBAAgB,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,QAAQ,IAAI,GAAG,eAAe;AAAA,EACtF;AAEA,WAAS,cAAc,cAAsB;AACzC,WAAO,SAAS,aAAa,UAAU,aAAa,QAAQ,OAAO,IAAI,CAAC,CAAC;AAAA,EAC7E;;;AC/CO,MAAM,cAAN,MAAkB;AAAA,IAMrB,YAAY,kBAA+B,YAAyB,UAAkB;AAClF,WAAK,aAAa;AAClB,WAAK,mBAAmB;AACxB,WAAK,WAAW;AAChB,WAAK,QAAQ;AACb,eAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,YAAI,QAAQ,SAAS,cAAc,KAAK;AACxC,mBAAW,YAAY,KAAK;AAC5B,cAAM,UAAU,IAAI,eAAe;AAAA,MACvC;AAAA,IACJ;AAAA,IAEA,QAAQ;AACJ,WAAK,iBAAiB,MAAM,aAAa;AACzC,WAAK,KAAK;AAAA,IACd;AAAA,IAEA,OAAO;AACH,WAAK,iBAAiB,MAAM,aAAa;AAAA,IAC7C;AAAA,IAEA,OAAO;AACH,UAAI,KAAK,SAAS,KAAK;AACnB,eAAO;AACX,WAAK,WAAW,SAAS,KAAK,KAAK,EAAE,UAAU,OAAO,SAAS,QAAQ;AACvE,WAAK,WAAW,SAAS,KAAK,KAAK,EAAE,UAAU,IAAI,SAAS;AAC5D,eAAS,IAAI,GAAG,IAAI,KAAK,OAAO,KAAK;AACjC,aAAK,WAAW,SAAS,CAAC,EAAE,UAAU,OAAO,SAAS,SAAS;AAC/D,aAAK,WAAW,SAAS,CAAC,EAAE,UAAU,IAAI,QAAQ;AAAA,MACtD;AACA,eAAS,IAAI,KAAK,QAAQ,GAAG,IAAI,KAAK,UAAU,KAAK;AACjD,aAAK,WAAW,SAAS,CAAC,EAAE,UAAU,OAAO,UAAU,SAAS;AAChE,aAAK,WAAW,SAAS,CAAC,EAAE,UAAU,IAAI,OAAO;AAAA,MACrD;AACA,WAAK;AACL,aAAO;AAAA,IACX;AAAA,EACJ;AAEO,WAAS,kBAAkB,WAAwB,OAAe,OAAe,IAAI;AACxF,QAAI,kBAAkB,SAAS,eAAmB,eAAe;AACjE,QAAG,iBAAiB;AAChB,sBAAgB,YAAY;AAAA,IAChC,OAAO;AACH,wBAAkB,SAAS,cAAc,KAAK;AAC9C,gBAAU,OAAO,eAAe;AAChC,sBAAgB,UAAU,IAAI,UAAU;AACxC,sBAAgB,KAAS;AAAA,IAC7B;AACA,QAAI,kBAAkB,SAAS,cAAc,KAAK;AAClD,oBAAgB,YAAY,eAAe;AAC3C,oBAAgB,UAAU,IAAI,cAAc;AAC5C,oBAAgB,YAAY;AAC5B,QAAI,iBAAiB,SAAS,cAAc,KAAK;AACjD,oBAAgB,YAAY,cAAc;AAC1C,mBAAe,UAAU,IAAI,aAAa;AAC1C,WAAO,IAAI,YAAY,iBAAiB,gBAAgB,KAAK;AAAA,EACjE;;;AC3DO,MAAM,WAAN,MAAe;AAAA,IAKlB,YAAY,aAAqB,gBAAiC,eAA2C;AACzG,WAAK,cAAc;AACnB,WAAK,gBAAgB;AACrB,WAAK,iBAAiB;AAAA,IAC1B;AAAA,IAEA,cAAc;AACV,aAAO,SAAS,eAAe,KAAK,WAAW;AAAA,IACnD;AAAA,IAEA,wBAAwB,SAA8B;AAClD,UAAI,KAAK,SAAS,cAAc,OAAO;AACvC,WAAK,YAAY,EAAE,sBAAsB,eAAe,EAAE;AAC1D,aAAO;AAAA,IACX;AAAA,EACJ;AAEO,WAAS,qBAAqB;AACjC,QAAI,gBAAgB,UAAU;AAC9B,QAAG,CAAC;AACA,aAAO;AAEX,QAAI,gBAAgB,CAAC,WAAmB,8BAA8B,cAAc,MAAM,UAAU,MAAM;AAE1G,QAAI,aAAa,oBAAoB;AACrC,QAAG,CAAC;AACA,aAAO;AAEX,WAAO,IAAI,SAAU,cAAc,SAAS,YAAY,aAAa;AAAA,EACzE;AAEA,WAAS,YAAY;AACjB,QAAI,QAAQ,SAAS,cAAc,8BAA8B;AACjE,QAAIC,WAAU,MAAM,GACf,QAAQ,UAAU,EAAE,EACpB,QAAQ,UAAU,EAAE;AAEzB,QAAI,YAAY,SAAS,cAAc,eAAgBA,QAAO;AAC9D,QAAI,UAAU,MAAM,KAAK,UAAU,iBAAiB,QAAQ,CAAC,EAAE,IAAI,CAAC,WAAW,OAAO,IAAI,EAAE,KAAK,IAAI;AACrG,QAAI,OAAO,QAAQ,MAAM,QAAQ,EAAE,CAAC;AACpC,QAAI,OAAO,KAAK,MAAM,eAAe,EAAE,CAAC;AAExC,QAAI,SAAS,4BAA4B,KAAK,IAAI,EAAE,CAAC;AACrD,QAAI,MAAM,iFAAiF,KAAK,IAAI,EAAE,CAAC;AAEvG,WAAO;AAAA,MACH,SAAS,MAAM;AAAA,MACf;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAIO,MAAM,WAAN,MAAe;AAAA,IAUlB,YAAY,UAAoB,aAA0B,wBAAuD;AAPjH,0BAAe;AAEf,2BAAgB;AAGhB,WAAQ,cAAc;AAGlB,WAAK,WAAW;AAChB,WAAK,cAAc;AACnB,UAAG,CAAC;AACA,cAAO;AACX,WAAK,yBAAyB;AAAA,IAClC;AAAA,IAEA,aAAa;AACT,UAAI,mBAAmB,KAAK,SAAS,WAAW,GAAG;AACnD,aAAO,eAAe,WAAW,KAAK,WAAW,CAAC;AAClD,aAAO,eAAe,WAAW,KAAK,WAAW,IAAO,iBAAiB;AAAA,IAC7E;AAAA,IAEA,gBAAgB;AACZ,UAAG,KAAK,SAAS,eAAe,UAAU;AACtC,eAAO;AAEX,UAAI,uBAAuB,KAAK,WAAW,CAAC,GAAG;AAC/C,UAAI,OAAQ,OAAO,eAAe,QAAQ,KAAK,WAAW,CAAC;AAC3D,UAAI,aAAa,OAAO,eAAe,QAAQ,KAAK,WAAW,IAAQ,iBAAiB;AACxF,UAAG,CAAC;AACA,eAAO;AACX,aAAO;AAAA,QACH;AAAA,QACA,MAAM,IAAI,KAAK,UAAU;AAAA,MAC7B;AAAA,IACJ;AAAA,IAEA,aAAa;AACT,UAAI,WAAW;AACf,UAAI,KAAK;AACL,mBAAW,OAAO,KAAK,uBAAuB,IAAI;AACtD,UAAI,KAAK,KAAK,SAAS,cAAc;AACrC,aAAO,GAAG,WAAW,OAAO,EAAE;AAAA,IAClC;AAAA,IAGA,eAAe;AACX,UAAG,CAAC,KAAK,kBAAkB;AACvB,aAAK,mBAAmB,KAAK,SAAS,wBAAwB,KAAK;AAAA,MACvE;AACA,WAAK,iBAAiB,UAAU,IAAI,UAAU;AAAA,IAClD;AAAA,IAEA,eAAe;AACX,WAAK,iBAAiB,YAAY;AAAA,IACtC;AAAA,IAEA,gBAAgB;AACZ,WAAK,gBAAgB;AACrB,WAAK,mBAAmB;AAAA,IAE5B;AAAA,IAEA,eAAe,KAAa;AACxB,WAAK,cAAc;AACnB,WAAK,mBAAmB;AACxB,iBAAW,KAAK,iBAAiB,KAAK,IAAI,GAAG,GAAI;AAAA,IACrD;AAAA,IAEA,mBAAmB;AACf,WAAK,cAAc;AACnB,WAAK,mBAAmB;AAAA,IAC5B;AAAA,IAEA,qBAAqB;AACjB,UAAI,IAAI,SAAS,eAAmB,WAAW;AAC/C,UAAG,KAAK,gBAAgB,IAAI;AACxB,YAAG,EAAG,GAAE,OAAO;AACf;AAAA,MACJ;AACA,UAAG,CAAC,GAAG;AACH,YAAI,SAAS,cAAc,GAAG;AAC9B,aAAK,iBAAiB,YAAY,CAAC;AACnC,UAAE,UAAU,IAAI,aAAa;AAC7B,UAAE,KAAS;AAAA,MACf;AACA,QAAE,YAAY,KAAK;AAAA,IACvB;AAAA,IAEA,iBAAiB;AACb,eAAS,eAAmB,aAAa,GAAG,OAAO;AAAA,IACvD;AAAA,IAEA,kBAAkB;AACd,UAAI,IAAI,SAAS,eAAmB,aAAa;AACjD,UAAG,CAAC,KAAK,eAAe;AACpB,YAAG,EAAG,GAAE,OAAO;AACf;AAAA,MACJ;AAEA,UAAG,CAAC,GAAG;AACH,YAAI,SAAS,cAAc,GAAG;AAC9B,aAAK,iBAAiB,YAAY,CAAC;AACnC,UAAE,UAAU,IAAI,WAAW;AAC3B,UAAE,KAAS;AAAA,MACf;AACA,QAAE,YAAY,uBAAuB,gBAAgB,oBAAI,KAAK,GAAG,QAAQ,IAAE,KAAK,gBAAgB,QAAQ,CAAC,CAAC;AAC1G,UAAI,IAAI,SAAS,cAAc,GAAG;AAClC,QAAE,YAAY,CAAC;AACf,QAAE,YAAY;AACd,QAAE,OAAK;AACP,QAAE,UAAU,CAAC,MAAO;AAChB,UAAE,eAAe;AACjB,aAAK,WAAW;AAEhB,aAAK,aAAa;AAClB,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,IACA,MAAM,aAAa,uBAA8C;AAC7D,WAAK,aAAa;AAClB,WAAK,eAAe;AACpB,UAAI,aAAa,KAAK,cAAc;AAEpC,UAAI,eAAe,IAAI,aAAa,IAAI;AACxC,UAAG,YAAY;AACX,YAAG,uBAAuB;AACtB,eAAK,eAAe,MAAM,sBAAsB;AAAA,QACpD;AACA,qBAAa,QAAQ,WAAW,IAAI;AACpC,aAAK,kBAAkB,WAAW;AAClC,aAAK,gBAAgB;AACrB,YAAI,GAAG,KAAK,SAAS,WAAW,sBAAsB;AACtD,YAAI,OAAO,aAAa,QAAQ;AAChC,aAAK,YAAY,SAAS,MAAM,WAAW,MAAM,YAAY;AAC7D,aAAK,YAAY,WAAW,YAAY;AAAA,MAC5C,OAAO;AACH,aAAK,gBAAgB;AACrB,YAAI,UAAU,MAAM,KAAK,YAAY,cAAc,qBAAqB;AACxE,YAAG,CAAC;AACA,iBAAO;AACX,qBAAa,YAAY;AACzB,aAAK,YAAY,WAAW,YAAY;AAAA,MAC5C;AACA,WAAK,cAAc;AACnB,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,YAAY,cAA4B,uBAA2C;AACrF,UAAI,KAAK,YAAY,iBAAiB;AAClC,YAAG,CAAC,KAAK,YAAY,gBAAgB,IAAI;AACrC,iBAAO;AAAA,MACf;AACA,UAAI,cAAc,kBAAkB,KAAK,kBAAkB,KAAK,SAAS,eAAe,MAAM,GAAG,mBAAmB;AACpH,kBAAY,MAAM;AAClB,UAAI,uBAAuB;AACvB,YAAI,gBAAgB,MAAM,QAAQ,IAAI;AAAA,UAClC,KAAK,iBAAiB,cAAc,WAAW;AAAA,UAC/C,sBAAsB;AAAA,QAC1B,CAAC;AACD,aAAK,eAAe,cAAc,CAAC;AAAA,MACvC,OAAO;AACH,cAAM,KAAK,iBAAiB,cAAc,WAAW;AAAA,MACzD;AACA,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,iBAAiB,cAA4B,aAA0B;AACzE,UAAI;AACA,eAAO,MAAM;AACT,kBAAQ,IAAI,mBAAmB,aAAa,kBAAkB,CAAC;AAC/D,cAAI,WAAW,MAAM,MAAM,KAAK,SAAS,cAAc,aAAa,cAAc,CAAC,CAAC;AACpF,cAAI,OAAO,MAAM,SAAS,KAAK;AAC/B,uBAAa,QAAQ,IAAI;AACzB,eAAK,YAAY,SAAS,MAAM,MAAM,YAAY;AAClD,cAAI,CAAC,YAAY,KAAK;AAClB;AAAA,QACR;AAAA,MACJ,UAAE;AACE,oBAAY,KAAK;AAAA,MACrB;AAAA,IACJ;AAAA,EAEJ;AAEO,MAAM,eAAN,MAAmB;AAAA,IAMtB,YAAY,UAAoB;AAYhC,4BAAiB,MAAM,MAAM,KAAK,KAAK,QAAQ,CAAC;AAChD,6BAAkB,MAAM,KAAK,eAAe,EAAE,MAAM,KAAK,gBAAgB;AACzE,+BAAoB,MAAM,KAAK;AAC/B,+BAAoB,MAAM,KAAK,iBAAe;AAC9C,2BAAgB,MAAM,KAAK,kBAAkB,IAAE,KAAK,SAAS,SAAS,eAAe;AACrF,yBAAc,MAAM,KAAK;AAhBrB,WAAK,WAAW;AAChB,WAAK,iBAAiB;AACtB,WAAK,mBAAmB;AACxB,WAAK,sBAAsB,SAAS,cAAc,UAAU;AAAA,IAChE;AAAA,IAEA,UAAU;AACN,UAAI,WAAW,KAAK;AACpB,aAAO,SAAS,QAAQ,iBAAiB,8BAA8B;AAAA,IAC3E;AAAA,IASA,cAAc;AACV,UAAI,WAAW,KAAK,SAAS,WAAW,CAAC,GAAG;AAC5C,aAAO,eAAe,QAAQ,KAAK,SAAS,WAAW,GAAG,KAAK,oBAAoB,SAAS;AAC5F,aAAO,eAAe,QAAQ,KAAK,SAAS,WAAW,IAAO,oBAAoB,oBAAI,KAAK,GAAG,OAAO,CAAC;AAAA,IAC1G;AAAA,IAEA,QAAQ,MAAc;AAClB,UAAI;AACJ,qBAAe,SAAS,cAAc,UAAU;AAChD,mBAAa,YAAY;AACzB,UAAI,OAAO,aAAa,QAAQ,iBAAiB,YAAY;AAE7D,WAAK,mBAAmB,KAAK,QAAQ,EAAE;AACvC,UAAG,KAAK,mBAAmB;AACvB,aAAK,oBAAoB,YAAY;AAAA;AAErC,aAAK,oBAAoB,QAAQ,cAAc,OAAO,EAAE,OAAO,GAAG,IAAI;AAC1E,WAAK;AAAA,IACT;AAAA,EAEJ;;;ACzSA,iBAAsB,YAAY,OAAgB,YAAoB;AAClE,QAAI,OAAO;AACP,YAAM,mBAAmB;AAAA,IAC7B;AACA,UAAM,iBAAiB,YAAY,KAAK;AACxC,QAAI,OAAO,MAAM,aAAa,UAAU;AACxC,UAAM,WAAW,SAAS,cAAc,UAAU;AAClD,aAAS,YAAY;AACrB,QAAI,SAAS,SAAS,QAAQ,iBAAiB,qDAAqD;AACpG,WAAO,MAAM,KAAK,MAAM,EAAE,IAAI,CAAC,QAA2B,CAAC,IAAI,OAAO,IAAI,KAAK,CAAC;AAAA,EACpF;AAEA,iBAAsB,aAAa,YAAoB;AACnD,YAAQ,MAAM,MAAM,+FAA+F,YAAY;AAAA,MAC3H,QAAQ;AAAA,IACZ,CAAC,GAAG,KAAK;AAAA,EACb;AAEA,iBAAe,iBAAiB,YAAoB,WAAmB;AACnE,UAAM,WAAW,IAAI,SAAS;AAC9B,aAAS,OAAO,aAAa,SAAS;AACtC,aAAS,OAAO,cAAc,UAAU;AACxC,UAAM,MAAM,8FAA8F;AAAA,MACtG,QAAQ;AAAA,MACR,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAEA,iBAAsB,qBAAqB;AACvC,UAAM,WAAW,IAAI,SAAS;AAE9B,aAAS,OAAO,WAAW,sBAAsB;AAEjD,UAAM,MAAM,iCAAiC;AAAA,MACzC,QAAQ;AAAA,MACR,MAAM;AAAA,IACV,CAAC;AAGD,UAAM,MAAM,+CAA+C;AAAA,MACvD,QAAQ;AAAA,IACZ,CAAC;AAAA,EACL;AAEA,iBAAsB,aAAa,UAAkB;AACjD,UAAM,WAAW,IAAI,SAAS;AAE9B,aAAS,OAAO,YAAY,KAAK,UAAU,QAAQ,CAAC;AACpD,UAAM,MAAM,iEAAiE;AAAA,MACzE,QAAQ;AAAA,MACR,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAEA,iBAAsB,aAAa,UAAkB;AACjD,UAAM,WAAW,IAAI,SAAS;AAE9B,aAAS,OAAO,cAAc,QAAQ;AACtC,UAAM,MAAM,+DAA+D;AAAA,MACvE,QAAQ;AAAA,MACR,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAEA,iBAAsB,WAAW,QAA2C;AACxE,UAAM,WAAW,IAAI,SAAS;AAE9B,QAAI,WAAW;AACf,aAAS,SAAS,QAAQ;AACtB,eAAS,OAAO,UAAU,QAAQ,YAAY,MAAM,KAAK;AACzD,eAAS,OAAO,UAAU,QAAQ,WAAW,MAAM,IAAI;AACvD;AAAA,IACJ;AACA,UAAM,MAAM,4DAA4D;AAAA,MACpE,QAAQ;AAAA,MACR,MAAM;AAAA,IACV,CAAC;AAAA,EACL;;;ACvEO,WAAS,cAAc,OAAkB;AAC5C,mBAAe,QAAY,wBAAwB,KAAK,UAAU,KAAK,CAAC;AAAA,EAC5E;AAMA,WAAS,iBAAiB,UAAoB;AAC1C,QAAI,aAAa,6BAAoB;AACjC,UAAI,qBAAyC;AAAA,QACzC,MAAM;AAAA,QACN,UAAU;AAAA,QACV,oBAAoB;AAAA,MACxB;AACA,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAEO,WAAS,sBAAsB,UAA+B;AACjE,QAAI,YAAY,KAAK,MAAM,eAAe,QAAY,sBAAsB,CAAC;AAC7E,QAAI,WAAW,aAAa;AACxB,aAAO;AAAA;AAEP,aAAO,iBAAiB,QAAQ;AAAA,EACxC;;;AC5BO,MAAI,gBAAgB,oiBAAsB,mBAAmB,YAAoB;AACzD,UAAM,mBAAmB;AACzB,QAAI,SAAS,MAAM,YAAY,OAAO,UAAU;AAChD,QAAI,cAAc,OAAO,OAAO,CAAC,QAAQC,cAAa,IAAI,CAAC,CAAC,CAAC;AAC7D,QAAI,SAAS,YAAY,IAAI,SAAO,SAAS,IAAI,CAAC,CAAC,CAAC;AACpD,QAAI,cAAc,OAAO,KAAK;AAE9B,QAAI,WAAW;AAAA,MACX,EAAC,YAAY,cAAc,YAAY,KAAK,UAAU,WAAU;AAAA,MAChE,EAAC,YAAY,UAAU,YAAY,KAAK,UAAU,KAAI;AAAA,MACtD,EAAC,YAAY,mBAAmB,YAAY,KAAK,UAAU,IAAG;AAAA,MAC9D,EAAC,YAAY,UAAU,YAAY,KAAK,UAAU,IAAG;AAAA,MACrD;AAAA,QACI,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,UAAU;AAAA,MACd;AAAA,IACJ;AACA,UAAM,aAAa,QAAQ;AAC3B,UAAM;AAAA,MAAW;AAAA,QACb,EAAC,OAAO,YAAY,MAAM,MAAK;AAAA,QAC/B,EAAC,OAAO,kBAAkB,MAAM,mBAAkB;AAAA,QAClD,EAAC,OAAO,kBAAkB,MAAM,iBAAgB;AAAA,MAAC;AAAA,IACrD;AACA,UAAM,aAAa,QAAQ;AAC3B,QAAI,YAAY,iDAAwC;AACxD,cAAU,qBAAyB;AACnC,kBAAc,SAAS;AACvB,IAAC,SAAS,cAAc,sBAAsB,EAAwB,MAAM;AAAA,EAChF;AAEA,WAASA,cAAa,MAAc;AAChC,WAAO,cAAc,IAAI,IAAI;AAAA,EACjC;;;ACxCO,MAAM,qBAAN,MAAgD;AAAA,IAKnD,YAAY,UAA2B,iBAAyC;AAC5E,WAAK,kBAAkB;AACvB,WAAK,WAAW;AAChB,WAAK,SAAS;AAAA,IAClB;AAAA,EACJ;AAUO,MAAM,4BAAN,MAAM,2BAAiD;AAAA,IAS1D,YAAY,sBAAgC,UAA2B,0BAA2D;AAUlI,8BAAqC,CAAC,iBAA+B;AACjE,YAAG,KAAK;AACJ,eAAK,iBAAiB,YAAY;AAAA;AAElC,kBAAQ,IAAI,+EAA+E;AAAA,MACnG;AAEA,oBAAwB,CAAC,WAAqB,OAAe,iBAAkB;AAC3E,YAAG,aAAa,kBAAkB,MAAM,GAAG;AACvC,cAAI,CAAC,KAAK,oBAAoB,aAAa,YAAY,CAAC,GAAG;AACvD,iBAAK,cAAc;AACnB,gBAAI,KAAK,kBAAkB;AACvB,mBAAK,iBAAiB,SAAS;AAAA,YACnC,OAAO;AACH,oBAAO;AAAA,YACX;AAAA,UACJ,OAAO;AACH,iBAAK,cAAc;AAAA,UACvB;AAAA,QACJ;AAAA,MACJ;AA7BI,WAAK,uBAAuB;AAC5B,WAAK,WAAW,KAAK;AACrB,WAAK,mBAAmB;AACxB,WAAK,mBAAmB;AACxB,WAAK,gBAAgB;AACrB,WAAK,cAAc;AACnB,WAAK,kBAAkB,KAAK;AAAA,IAChC;AAAA,IAwBA,yBAAyB;AACrB,WAAK,gBAAgB,2BAA0B,6BAA6B,SAAS,IAAI;AACzF,aAAO,KAAK,sBAAsB;AAAA,IACtC;AAAA,IAEA,wBAAwB;AACpB,UAAI,CAAC,KAAK,cAAc,GAAG;AACvB,YAAI,cAAc,KAAK,qBAClB,IAAI,CAAC,UAAU,MAAO,MAAM,YAAY,IAAI,GAAI,EAChD,KAAK,IAAI;AACd,cAAM,eAAe,WAAW,OAAO;AACvC,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AAAA,IAEA,oBAAoB,UAA+B;AAC/C,WAAK,gBAAgB,2BAA0B,6BAA6B,QAAQ;AACpF,aAAO,KAAK,sBAAsB;AAAA,IACtC;AAAA,IAEA,OAAO,6BAA6B,UAA8B;AAC9D,UAAI,UAAU,SAAS,QAAQ,iBAAiB,UAAU;AAC1D,aAAO,KAAK,gCAAgC,OAAO;AAAA,IACvD;AAAA,IAEA,OAAO,6BAA6B,SAAqB;AACrD,UAAI,UAAU,QAAQ,iBAAiB,UAAU;AACjD,aAAO,KAAK,gCAAgC,OAAO;AAAA,IACvD;AAAA,IAEA,OAAO,gCAAgC,SAA2C;AAC9E,UAAI,gBAAqC,oBAAI,IAAI;AACjD,YAAM,KAAK,OAAO,EACb,QAAQ,CAAC,QAAQ,UAAU;AACxB,YAAI,QAAQ,OAAO;AACnB,YAAI,MAAM,WAAW,gBAAgB,GAAG;AACpC,wBAAc,IAAI,kBAAkB,KAAK;AAAA,QAC7C,OAAO;AACH,wBAAc,IAAI,OAAO,KAAK;AAAA,QAClC;AAAA,MACJ,CAAC;AACL,aAAO;AAAA,IACX;AAAA,IAEA,gBAAgB;AACZ,aAAO,KAAK,qBAAqB,MAAM,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AAAA,IAC3E;AAAA,IAEA,UAAU,OAAe;AACrB,aAAO,KAAK,cAAc,IAAI,KAAK;AAAA,IACvC;AAAA,IAEA,cAAc,IAAyB,OAAwB;AAC3D,aAAO,GAAG,SAAS,KAAK,cAAc,IAAI,KAAK,CAAC,EAAE;AAAA,IACtD;AAAA,EACJ;;;ACvKA,WAAS,SAAS,aAA2E,QAAiB,MAA6B,OAAe,cAAuB;AAC7K,QAAI;AACJ,QAAI,cAAc;AACd,+BAAyB,CAAC,GAAwB,MAA2B,YAAY,EAAE,MAAM,KAAK,GAAG,EAAE,MAAM,KAAK,CAAC;AACvH,aAAO,UAAU,IAAI,gBAAgB;AAAA,IACzC,OAAO;AACH,+BAAyB,CAAC,GAAwB,MAA2B,YAAY,EAAE,MAAM,KAAK,GAAG,EAAE,MAAM,KAAK,CAAC;AACvH,aAAO,UAAU,IAAI,eAAe;AAAA,IACxC;AAEA,SAAK,KAAK,CAAC,GAAG,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAAA,EACpD;AAEA,WAAS,SAAS,GAAyB,GAAyB;AAChE,WAAO,EAAE,UAAU,cAAc,EAAE,SAAS;AAAA,EAChD;AAEA,WAAS,QAAQ,GAAyB,GAAyB;AAC/D,WAAO,cAAc,EAAE,SAAS,EAAE,cAAc,cAAc,EAAE,SAAS,CAAC;AAAA,EAC9E;AAGA,WAAS,cAAc,MAAc;AACjC,QAAI,YAAY,KAAK,MAAM,GAAG;AAC9B,WAAO,UAAU,CAAC,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC;AAAA,EACpD;AAEA,WAAS,UAAU,GAAyB,GAAyB;AACjE,QAAI,MAAM,OAAO,EAAE,SAAS,IAAI,OAAO,EAAE,SAAS;AAClD,QAAG,MAAM,GAAG,GAAG;AACX,YAAM,IAAI,MAAM;AAAA,IACpB;AACA,WAAO;AAAA,EACX;AAEA,WAAS,kBAAkB,OAAyB,OAAe;AAC/D,QAAI,SAAS,MAAM,MAAM,SAAS,CAAC,EAAE,SAAS,KAAK;AACnD,QAAI,OAAO,MAAM,KAAK,MAAM,QAAQ,CAAC,EAAE,IAAI;AAC3C,QAAI,eAAe,OAAO,UAAU,SAAS,eAAe;AAC5D,aAAS,SAAS,MAAM,MAAM,SAAS,CAAC,EAAE,UAAU;AAChD,YAAM,UAAU,OAAO,iBAAiB,gBAAgB;AAAA,IAC5D;AACA,QAAI,UAAU;AACd,QAAG,wBAAwB,OAAO,KAAK,GAAG;AACtC,gBAAU;AAAA,IACd,WAAU,qBAAqB,OAAO,KAAK,GAAG;AAC1C,gBAAU;AAAA,IACd;AACA,QAAI;AACA,eAAS,SAAS,QAAQ,MAAM,OAAO,YAAY;AAAA,IACvD,SAAS,GAAG;AACR,cAAQ,MAAM,CAAC;AACf,UAAG,YAAY;AACX,iBAAS,UAAU,QAAQ,MAAM,OAAO,YAAY;AAAA,IAC5D;AAEA,SAAK,QAAQ,SAAO,MAAM,QAAQ,CAAC,EAAE,YAAY,GAAG,CAAC;AAAA,EACzD;AAEA,WAAS,qBAAqB,OAAyB,OAAe;AAClE,QAAI,OAAO,MAAM,KAAK,MAAM,QAAQ,CAAC,EAAE,IAAI;AAC3C,WAAO,aAAa,KAAK,CAAC,EAAE,MAAM,KAAK,EAAE,WAAW;AAAA,EACxD;AAEA,WAAS,aAAa,MAAc;AAChC,QAAI,SAAQ;AACZ,QAAI,UAAU,KAAK,MAAM,MAAM;AAC/B,QAAG,CAAC;AACA,aAAO;AACX,WAAO,oBAAI,KAAK,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC,CAAC;AAAA,EACpE;AAEA,WAAS,wBAAwB,OAAyB,OAAe;AACrE,QAAI,OAAO,MAAM,KAAK,MAAM,QAAQ,CAAC,EAAE,IAAI;AAE3C,UAAM,cAAc;AACpB,QAAI,UAAU,eAAe,GAAG,KAAK,QAAQ,KAAK,SAAS,cAAc,KAAK,SAAO,cAAc,CAAC,EAC/F,IAAI,WAAS,KAAK,MAAM,KAAK,CAAC;AACnC,WAAO,CAAC,QACH,IAAI,cAAY,KAAK,QAAQ,CAAC,EAC9B,KAAK,SAAO;AACT,aAAO,MAAM,OAAQ,IAAI,SAAS,KAAK,EAAkB,SAAS,CAAC;AAAA,IACvE,CAAC;AAAA,EACT;AAEO,WAAS,0BAA0B,OAAyB;AAC/D,QAAI,MAAM,MAAM,UAAU,SAAS,cAAc;AAC7C;AACJ,UAAM,MAAM,UAAU,IAAI,cAAc;AACxC,UAAM,KAAK,MAAM,MAAM,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAqB,UAAU;AACjF,aAAO,UAAU,SAAO;AACpB,0BAAkB,OAAO,KAAK;AAAA,MAClC;AAAA,IACJ,CAAC;AAAA,EACL;;;ACzFA,MAAOC,oBAAQ,IAAI,aAAa,QAAW,IAAI,cAAc,GAAGC,WAAU;AAE1E,WAASA,YAAY,WAA2B;AAC5C,QAAI,iBAAiB,gBAAgB;AACrC,QAAG,CAAC;AACA;AACJ,QAAG,CAAC,mBAAmB,GAAG,eAAe,UAAU,GAAG;AAClD,+BAAyB,gBAAoB,uBAAuB,uBAAuB,eAAe,eAAe;AAAA,IAC7H;AACA,QAAG,SAAS,cAAc,uCAAuC,GAAG;AAChE,gCAA0B,SAAS,cAAc,iCAAiC,CAAC;AAAA,IACvF;AACA,QAAI,cAAc,SAAS,cAAc,eAAe;AACxD,QAAG,aAAa;AACZ,gCAA0B,WAAW;AAAA,IACzC;AACA,WAAO;AAAA,EACX;AAEA,MAAI,wBAAwB,oBAAI,IAA2C;AAE3E,WAAS,gBAAgB;AACrB,QAAI,sBAAsB,IAAI,mBAAmB,UAAU,MAAS;AAEpE,aAAS,SAAS,cAA4B;AAC1C,eAAS,SAAS,YAAY,EACzB,cAAc,OAAO,EACrB,gBAAgB,GAAG,aAAa,QAAQ,CAAC;AAAA,IAClD;AAGA,QAAI,WAAW,mBAAmB;AAClC,QAAI,WAAW,IAAI;AAAA,MACf;AAAA,MACA;AAAA,MACA,mBAAmB,SAAS,WAAW;AAAA,IAC3C;AAEA,aAAS,aAAa,EAAE,KAAK,MAAM;AAAA,IAAE,CAAC;AAAA,EAC1C;AAEO,WAAS,mBAAmBC,UAAgD;AAC/E,QAAI,UAAU,sBAAsB,IAAIA,QAAO;AAC/C,QAAG;AACC,aAAO;AACX,WAAO,CAAC,aAAuB;AAAA,EACnC;AAEO,WAAS,wBAAwBA,UAAiB,iBAAgD;AACrG,0BAAsB,IAAIA,UAAS,eAAe;AAAA,EACtD;;;ACvDO,MAAM,WAAN,MAAe;AAAA,IAKlB,YAAY,MAAc,WAAsB,YAAoC;AAChF,WAAK,OAAO;AACZ,WAAK,YAAY;AACjB,WAAK,aAAa;AAAA,IACtB;AAAA,EACJ;AAEO,MAAM,gBAAN,MAAoB;AAAA,IAIvB,YAAY,QAAiB;AACzB,WAAK,UAAU;AACf,WAAK,UAAU,CAAC;AAChB,UAAG,QAAQ;AACP,eAAO,OAAO,MAAM,MAAM;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAEO,MAAM,YAAN,MAAgB;AAAA,IAGnB,YAAY,eAA8B;AACtC,WAAK,sBAAsB,aAAa;AAAA,IAC5C;AAAA,IAEA,sBAAsB,eAA8B;AAChD,eAAS,UAAU,cAAc,SAAS;AACtC,eAAO,SAAS,IAAI,IAAI,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC;AAAA,MAC1E;AACA,WAAK,YAAY,IAAI,IAAI,cAAc,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC;AAAA,IACtF;AAAA,IAEA,OAAO,SAAiB,SAAiB;AACrC,UAAI,OAAO,IAAI,cAAc;AAC7B,UAAI,OAAO,KAAK,cAAc,OAAO;AACrC,UAAI,OAAO,KAAK,cAAc,OAAO;AACrC,WAAK,QAAQ,KAAK,EAAC,KAAK,SAAS,MAAM,KAAI,CAAC;AAC5C,WAAK,QAAQ,KAAK,EAAC,KAAK,SAAS,MAAM,KAAI,CAAC;AAC5C,aAAO;AAAA,IACX;AAAA,IAEA,cAAc,QAAgB;AAC1B,UAAI,QAAoB,CAAC;AACzB,eAAS,CAAC,KAAK,KAAK,KAAK,KAAK,UAAU,IAAI,MAAM,GAAG;AACjD,YAAI,MAAgB;AAAA,UAChB;AAAA,UACA;AAAA,QACJ;AACA,cAAM,KAAK,GAAG;AAAA,MAClB;AACA,aAAO;AAAA,IACX;AAAA,EACJ;;;AC/CA,MAAM,UAAU;AAEhB;AAAA,IAAwB;AAAA,IAAU,CAAC,cAAwB;AACvD,aAAO,SAAS,cAAc,0CAA0C,GAAG,YAAY,QAAQ,sBAAsB,EAAE,GAAG,QAAQ,aAAa,EAAE,KAAK;AAAA,IACtJ;AAAA,EACA;AAEJ,MAAOC,oBAAQ,IAAI,aAAa,yBAAyBC,WAAU;AAEnE,WAASA,YAAW,UAA0B;AAC1C,QAAK,SAAS,OAAuB,OAAO,oCAAoC;AAC5E,yBAAmB;AACnB,aAAO;AAAA,IACX;AACA,QAAI,YAAY,SAAS,eAAe,mCAAmC;AAC3E,QAAI,SAAS,WAAW,WAAW;AAC/B,yBAAmB;AACnB,aAAO;AAAA,IACX;AACA,QAAI,SAAS,cAAc,sBAAsB,GAAG;AAChD,sBAAgB;AAChB,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAEA,WAAS,kBAAkB;AACvB,QAAI,YAAY,iDAAwC;AACxD,QAAG,UAAU,iEAAsC;AAC/C,gBAAU;AACV,oBAAc,SAAS;AACvB,yBAAmB,uBAAuB,oBAAoB,CAAC,CAAC,EAAE,KAAK,MAAM;AAAA,MAAC,CAAC;AAC/E;AAAA,IACJ;AACA,QAAG,UAAU,iEAAsC;AAC/C,gBAAU;AACV,oBAAc,SAAS;AACvB,yBAAmB,uBAAuB,oBAAoB,IAAE,CAAC,CAAC,EAAE,KAAK,MAAM;AAAA,MAAC,CAAC;AACjF;AAAA,IACJ;AACA,cAAU,qBAAqB;AAC/B,kBAAc,SAAS;AACvB,QAAI,oBAAoB,SAAS,cAAc,sBAAsB;AACrE,QAAG,SAAS,eAAmB,gBAAgB;AAC3C;AAEJ,QAAI,OAAO,SAAS,8BAA8B,CAAC;AACnD,QAAI,iBAAiB,uBAAuB,OAAK,CAAC;AAClD,QAAI,iBAAiB,uBAAuB,IAAI;AAChD,QAAI,sBAAsB,4BAA4B,OAAK,CAAC;AAC5D,QAAI,sBAAsB,4BAA4B,IAAI;AAC1D,cAAU,mBAAuB,kBAAkB,2BAA0B,gBAAgB,YAAY;AAAE,YAAM,mBAAmB,cAAc;AAAA,IAAG,GAAG,IAAI,CAAC,OAAO,kBAAkB,GAAG,UAAS,mBAAmB;AACrN,cAAU,mBAAuB,kBAAkB,2BAA0B,gBAAgB,YAAY;AAAE,YAAM,mBAAmB,cAAc;AAAA,IAAG,GAAG,IAAI,CAAC,OAAO,kBAAkB,GAAG,UAAS,mBAAmB;AACrN,sBAAkB;AAAA,EACtB;AAIA,WAAS,qBAAqB;AAC1B,QAAI,qBAAqB,iDAAwC;AACjE,QAAG,mBAAmB,uBAA2B,uBAAuB;AACpE,eAAS,iBAAiB;AAAA,IAC9B;AACA,8BAA0B,SAAS,cAAc,wCAAwC,CAAqB;AAAA,EAClH;AAEA,WAAS,qBAAqB;AAC1B,QAAI,eAAe,SAAS,cAAc,+GAA+G;AACzJ,cAAU,cAAkB,iBAAiB,gBAAgB,mBAAmB,aAAa,CAAC,kBAAkB,CAAC;AACjH,cAAU,cAAkB,aAAa,sBAAsB,mBAAmB,eAAe,CAAC,OAAO,kBAAkB,CAAC;AAAA,EAChI;AAEA,WAAS,oBAAoB;AACzB,QAAI,uBAAuB,CAAC,gBAAgB;AAE5C,QAAI,cAAc,IAAI,0BAA0B,sBAAsB,gBAAgB,eAAa;AAC/F,gBAAU,UAAU,UAAU,EAAE,EAAE,KAAK,WAAS;AAC5C,gBAAQ,IAAI,oBAAoB;AAAA,MACpC,CAAC;AAAA,IACL,CAAC;AAED,QAAI,WAAW,IAAI;AAAA,MACf,mBAAmB;AAAA,MACnB;AAAA,MACA,mBAAmB,OAAO;AAAA,IAC9B;AAEA,aAAS,eAAe,cAA4B;AAChD,UAAI,YAAY,KAAK,OAAO,aAAa,eAAe,EACnD,IAAI,QAAM,SAAS,YAA0C,cAAc,IAAI,gBAAgB,CAAC;AAErG,UAAI,YAAY,UACX,IAAI,CAAC,WAAmB,OAAO,MAAM,MAAM,CAAC,EAC5C,KAAK,EACL,OAAO,CAAC,UAAkB,CAAC,MAAM,SAAS,qBAAqB,CAAC,EAChE,OAAO,CAAC,UAAkB,UAAU,EAAE;AAC3C,gBAAU,UAAU,UAAU,UAAU,KAAK,KAAK,CAAC,EAAE;AAAA,QAAK,MACtD,SAAS,eAAe,+EAA+E;AAAA,MAC3G;AAAA,IACJ;AAEA,aAAS,aAAa,MAAU,EAC3B,KAAK,CAAC,aAAa;AAAA,IACpB,CAAC;AAAA,EACT;AAEA,WAAS,SAAS,MAAqB;AACnC,QAAG,CAAC,KAAK;AACL,iBAAW,MAAM,SAAS,IAAI,GAAG,GAAG;AAAA,EAC5C;AAEA,WAAS,oBAAoB;AAEzB,QAAI,CAAC,SAAS,eAAmB,cAAc,GAAG;AAc9C,UAAS,WAAT,SAAkB,cAA4B;AAC1C,YAAI,aAAa,oBAAI,IAAI;AACzB,YAAI,OAAO,KAAK,OAAO,aAAa,QAAQ;AAC5C,iBAAQ,MAAM,MAAM;AAChB,wBAAc,UAAU,IAAI,UAAU;AAAA,QAC1C;AACA,YAAI,YAAY,IAAI,cAAc,SAAS,YAA6B;AACxE,oBAAY,iBAAiB,SAAS;AACtC,qBAAa,IAAI,IAAI,CAAC,GAAG,WAAW,QAAQ,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAO,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAE,CAAC;AACxG,iBAAS,eAAmB,cAAc,GAAG,OAAO;AACpD,YAAI,aAAa,eAAe;AAChC,YAAI,OAAO,SAAS,UAAU;AAC9B,mBAAW,IAAI,SAAS,MAAM,IAAI,UAAU,SAAS,GAAG,UAAU,GAAG,QAAQ;AAC7E,iBAAS,eAAmB,cAAc,EAAE,MAAM,UAAU;AAC5D,2BAAmB;AAAA,MACvB;AA5BA,UAAI,WAAW,mBAAmB;AAClC,UAAG,CAAC;AACA,eAAO;AAEX,UAAI,WAAW,yBAAyB;AACxC,UAAI,uBAAuB,CAAC,QAAQ,YAAY,OAAO,kBAAkB,kBAAkB;AAC3F,UAAI,cAAc,IAAI,0BAA0B,sBAAsB,UAAU,MAAM;AAAA,MAAC,CAAC;AACxF,UAAI,WAAW,IAAI;AAAA,QACf;AAAA,QACA;AAAA,QACA,mBAAmB,SAAS,WAAW;AAAA,MAC3C;AAmBA,eAAS,aAAa,MAAM,iBAAiB,QAAQ,CAAC,EACjD,KAAK,CAAC,aAAa;AAAA,MAAE,CAAC;AAE3B,aAAO;AAAA,IACX;AACA,uBAAmB;AACnB,WAAO;AAAA,EACX;AAEA,iBAAe,iBAAiB,UAA0C;AACtE,QAAI;AACA,aAAO,MAAM,MAAM,KAAK,MAAM,QAAQ;AAAA,IAC1C,SAAS,GAAG;AACR,aAAO,IAAI,cAAc;AAAA,IAC7B;AAAA,EACJ;AAEA,WAAS,qBAAqB;AAC1B,QAAI,eAAe,SAAS,eAAmB,cAAc,EAAE,MAAM,YAAY;AACjF,aAAS,eAAe,kCAAkC,EAAE,MAAM,UAAU,eAAe,SAAS;AACpG,aAAS,eAAmB,cAAc,EAAE,MAAM,UAAU,eAAe,UAAU;AACrF,aAAS,eAAmB,eAAe,EAAE,QAAQ,eAAe,iBAAiB;AACrF,yBAAyB,iBAAiB,YAAY;AACtD,QAAI,YAAY,iDAAwC;AACxD,cAAU,qBAAqB,eAAmB,wBAAwB;AAC1E,kBAAc,SAAS;AAAA,EAC3B;AAEA,WAAS,iBAAiB,WAA0B;AAEhD,WAAO;AAAA,EAGX;;;AC5LA,MAAOC,oBAAQ,IAAI,aAAa,6CAA6CC,WAAU;AAEvF,WAASA,YAAY,UAA0B;AAC3C,QAAI,YAAY,SAAS,eAAe,6BAA6B;AACrE,QAAI,SAAS,WAAW,WAAW;AAC/B,aAAO;AAAA,IACX;AACA,sBAAkB,SAAS;AAC3B,WAAO;AAAA,EACX;AAEA,MAAMC,iBAAgB;AACtB,MAAIC,eAAc;AAElB,WAAS,kBAAkB,WAAwB;AAC/C,QAAI,QAAQ,UAAU,cAAc,OAAO;AAC3C,QAAG,CAAC,SAAS,eAAeD,cAAa;AACrC,YAAM,cAAc,aAAa,mBAAmBA,gBAAeE,gBAAeD,YAAW,GAAG,KAAK;AAEzG,IAAAC,eAAc;AAAA,EAClB;AAEA,WAASA,iBAAgB;AACrB,IAAAD,eAAe,SAAS,eAAeD,cAAa,EAAuB;AAE3E,aAAS,WAAW,IAAyB;AACzC,UAAI,iBAAiB,GAAG,MAAM,CAAC,EAAE,cAAc,OAAO,EAAE,YAAY,KAAK;AACzE,UAAI,SAAS,GAAG,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,YAAY,KAAK;AACnE,aAAO,iBAAiB,MAAM;AAAA,IAClC;AAEA,QAAI,YAAY,oBAAoBC,cAAa,UAAU;AAC3D,gBAAY,SAAS,cAAc,oCAAoC,GAAuB,SAAS;AAAA,EAC3G;;;AClCA,MAAOE,oBAAQ,IAAI,aAAa,2BAA2BC,WAAU;AAErE,MAAM,eAAe;AACrB,MAAM,aAAa;AACnB,WAASA,YAAY,UAA0B;AAE3C,QAAI,SAAS,SAAS,eAAe,yCAAyC;AAC9E,QAAG,UAAU,CAAC,QAAQ,UAAU,SAAS,YAAY,GAAG;AACpD,aAAO,UAAU,IAAI,YAAY;AACjC,aAAO,iBAAiB,SAAS,YAAY;AAC7C,UAAI,OAAO,SAAS,cAAc,MAAM;AACxC,WAAK,KAAK;AACV,aAAO,cAAc,YAAY,IAAI;AACrC,mBAAa,MAAS;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,OAAc;AAChC,QAAI,SAAS,SAAS,eAAe,yCAAyC;AAC9E,QAAI,cAAgC,SAAS,eAAe,UAAU;AACtE,gBAAY,cAAc,OAAO,MAAM,OAAO,SAAS;AAAA,EAC3D;;;AClBA,iBAAsB,iBAAiB,MAAc,kBAAkC,YAAqB;AACxG,QAAI,OAAO,MAAM,MAAM,uCAAqC,IAAI,EAAE,KAAK,SAAO,IAAI,KAAK,CAAC;AAGxF,QAAI,OAAO,MAAM,MAAM,mBAAiB,IAAI,EAAE,KAAK,SAAO,IAAI,KAAK,CAAC;AACpE,QAAI,gBAAgB,mBAAmB,IAAI;AAG3C,QAAI,aAAa,MAAM,MAAM,aAAa,EAAE,KAAK,SAAO,IAAI,KAAK,CAAC;AAClE,QAAI,UAAU,IAAI,aAAa,UAAU;AACzC,QAAI,cAAe,sBAAsB,UAAU,EAC9C,KAAK,KAAK,KAAK,IAAI,EACnB,OAAO,GAAG,EACV,OAAO;AACZ,QAAG,CAAC,aAAa;AACb,oBAAc,sBAAsB,UAAU,EACzC,KAAK,KAAK,KAAK,IAAK,EACpB,OAAO,GAAI,EACX,OAAO;AAAA,IAChB;AACA,QAAI,UAAU,mBAAmB,UAAU;AAE3C,QAAI,CAAC,QAAQ,SAAS,kBAAkB,GAAG;AAEvC,UAAI,WAAW,MAAM,MAAM,OAAO,EAAE,KAAK,SAAO,IAAI,KAAK,CAAC;AAC1D,gBAAU,mBAAmB,QAAQ;AAAA,IACzC;AACA,QAAI,eAAe;AAEnB,QAAI,YAAY,MAAM,MAAM,YAAY,EAAE,KAAK,YAAU,OAAO,KAAK,CAAC;AACtE,cAAU,IAAI,aAAa,SAAS;AACpC,QAAI,eAAe;AACnB,QAAI,cAAc;AAClB,YACK,KAAK,OAAO,gBAAgB,GAAG,EAC/B,UAAU,SAAO;AAAE,qBAAe;AAAA,IAAK,CAAC,EACxC,OAAO,YAAW,EAClB,KAAK,KAAK,QAAQ,GAAG,EACrB,UAAU,SAAO,cAAc,GAAG,EAClC,OAAO;AACZ,mBAAe,eAAe;AAC9B,QAAI,eAAe,MAAM,MAAM,WAAW,EAAE,KAAK,SAAO,IAAI,KAAK,EAAE,KAAK,CAAC;AAEzE,QAAI,MAAM,SAAS,cAAc,KAAK;AACtC,QAAI,YAAY;AAChB,QAAI,WAAW,oBAAoB,GAAG;AACtC,YAAQ,IAAI,QAAQ;AACpB,QAAI,gBAAgB,CAAC,WAAmB,8BAA8B,YAAY,UAAU,MAAM;AAElG,QAAI,WAAW,IAAI,SAAS,aAAa,UAAU,aAAa;AAChE,YAAQ,IAAI,QAAQ;AACpB,QAAI,sBAAsB,IAAI,mBAAmB,QAAW,MAAS;AAErE,QAAI,WAAW,IAAI;AAAA,MACf;AAAA,MACA;AAAA,MACA,mBAAmB,SAAS,WAAW;AAAA,IAC3C;AACA,aAAS,mBAAmB;AAC5B,QAAG;AACC,eAAS,WAAW;AACxB,QAAI,eAAe,MAAM,SAAS,aAAa;AAC/C,UAAM,sBAAsB;AAC5B,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,SAAuB;AACzC,WAAO,QAAQ,KAAK,KAAK,KAAK,YAAY,KAAK,KAAK,SAAS,GAAG;AAAA,EACpE;AAEA,WAAS,mBAAmB,MAAc;AACtC,QAAI,UAAU,IAAI,aAAa,IAAI;AACnC,WAAM,MAAM;AACR,UAAI,WAAW,aAAa,OAAO;AACnC,UAAG,CAAC,SAAS;AACT,eAAO;AACX,UAAI,MAAM,SACL,MAAM,EACN,OAAO,YAAW,EAClB,KAAK,KAAK,QAAQ,GAAG,EACrB,WAAW,EACX,OAAO;AACZ,UAAG;AACC,eAAO;AACX,gBAAU;AAAA,IACd;AAAA,EACJ;AAUA,WAAS,sBAAsB,MAAc;AACzC,QAAI,UAAU,IAAI,aAAa,IAAI;AACnC,WAAM,MAAM;AACR,UAAI,WAAW,aAAa,OAAO;AACnC,UAAG,CAAC,SAAS;AACT,eAAO;AACX,UAAI,SAAS,SACR,MAAM,EACN,OAAO,YAAW;AACvB,UAAI,OAAO,OACN,MAAM,EACN,KAAK,KAAK,QAAQ,GAAG;AAC1B,UAAG,KAAK;AACJ,eAAO;AACX,gBAAU;AAAA,IACd;AAAA,EACJ;AAGA,WAAS,iBAAiB,MAAsB;AAC5C,WAAO,KACF,WAAW,MAAM,MAAM,EACvB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK,EACrB,WAAW,KAAK,KAAK;AAAA,EAC9B;AAEA,MAAM,cAAN,MAAkB;AAAA,IAGd,YAAY,WAAsB;AAC9B,WAAK,YAAY;AAAA,IACrB;AAAA,IAEA,IAAI,UAAoD;AACpD,UAAG,CAAC,KAAK,UAAU,KAAK;AACpB,mBAAW,KAAK,UAAU,OAAO;AAAA,MACrC;AACA,aAAO,KAAK,UAAU;AAAA,IAC1B;AAAA,EACJ;AAEA,MAAM,YAAN,MAAgB;AAAA,IAIZ,YAAY,KAAc,SAAuB;AAC7C,WAAK,MAAM;AACX,WAAK,UAAU;AAAA,IACnB;AAAA,IAEA,KAAK,UAAiE;AAClE,UAAG,KAAK,KAAK;AACT,iBAAS,KAAK,OAAO;AAAA,MACzB;AACA,aAAO,IAAI,YAAY,IAAI;AAAA,IAC/B;AAAA,EACJ;AAEA,MAAM,eAAN,MAAM,cAAa;AAAA,IAIf,YAAY,MAAc;AACtB,WAAK,QAAQ;AACb,WAAK,SAAS;AACd,WAAK,SAAS;AAAA,IAClB;AAAA,IAEA,SAA6B;AACzB,UAAG,KAAK;AACJ,eAAO,KAAK;AAChB,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,QAAkB;AACtB,aAAO,KAAK,MAAM,IAAI,MAAM;AAAA,IAChC;AAAA,IAEA,SAAS,QAAkB;AACvB,aAAO,KAAK,MAAM,SAAS,MAAM;AAAA,IACrC;AAAA,IAEA,MAAM,QAAgB,QAAkB;AACpC,UAAG,CAAC,KAAK;AACL,eAAO;AACX,UAAI,WAAW,SAAS,OACnB,IAAI,WAAS,iBAAiB,KAAK,IAAI,MAAM,EAC7C,KAAK,EAAE;AACZ,UAAIC,SAAQ,OAAO,QAAQ,EAAE,KAAK,KAAK,MAAM;AAC7C,UAAIA,QAAO;AACP,aAAK,SAAS,KAAK,OAAO,UAAUA,OAAM,QAAQA,OAAM,CAAC,EAAE,MAAM;AACjE,eAAO;AAAA,MACX;AACA,WAAK,QAAQ;AACb,aAAO;AAAA,IACX;AAAA,IAEA,WAAW,QAA8B;AACrC,UAAG,CAAC,KAAK;AACL,eAAO,IAAI,UAAU,MAAM,IAAI;AAEnC,WAAK,MAAM,GAAG,MAAM;AACpB,UAAG,KAAK,OAAO;AACX,eAAO,IAAI,UAAU,MAAM,IAAI;AAAA,MACnC,OAAO;AACH,aAAK,QAAQ;AACb,eAAO,IAAI,UAAU,OAAO,IAAI;AAAA,MACpC;AAAA,IACJ;AAAA,IAEA,KAAK,KAAa;AACd,UAAG,CAAC,KAAK;AACL,eAAO;AACX,WAAK,SAAS,KAAK,OAAO,UAAU,GAAG,GAAG;AAC1C,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,KAAa;AAChB,UAAG,CAAC,KAAK;AACL,eAAO;AACX,UAAI,QAAQ,KAAK,OAAO,QAAQ,GAAG;AACnC,UAAG,QAAQ,GAAG;AACV,aAAK,QAAQ;AACb,eAAO;AAAA,MACX;AACA,WAAK,SAAS,KAAK,OAAO,UAAU,GAAG,KAAK;AAC5C,aAAO;AAAA,IACX;AAAA,IAEA,QAAuB;AACnB,UAAI,aAAa,IAAI,cAAa,KAAK,MAAM;AAC7C,iBAAW,QAAQ,KAAK;AACxB,aAAO;AAAA,IACX;AAAA,IAEA,aAAa;AACT,UAAI,WAAW;AACf,WAAK,QAAQ,GAAG,EACX,KAAK,YAAU;AACZ,mBAAW;AACX,eAAO,OAAO,OAAO,GAAG;AAAA,MAC5B,CAAC,EACA,IAAI,EACR,QAAQ,GAAI,EACR,KAAK,YAAU;AACZ,mBAAW;AACX,eAAO,OAAO,OAAO,GAAI;AAAA,MAC7B,CAAC,EACA,IAAI;AACT,WAAK,QAAQ,KAAK,SAAS;AAC3B,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,UAAiC;AACvC,UAAI,aAAa,KAAK,MAAM;AAC5B,UAAI,SAAS,WACR,WAAW,EACX,OAAO;AACZ,UAAG,QAAQ;AACP,iBAAS,MAAM;AAEf,aACK,QAAQ,GAAG,EACX,KAAK,CAAAC,YAAUA,QAAO,KAAK,GAAG,CAAC,EAC/B,IAAI,EACJ,QAAQ,GAAI,EACZ,KAAK,CAAAA,YAAUA,QAAO,KAAK,GAAI,CAAC,EAChC,IAAI;AAAA,MACb;AACA,aAAO;AAAA,IACX;AAAA,EACJ;;;ACpRA,MAAOC,oBAAQ,IAAI,aAAa,oDAAoD,sBAAsB;AAE1G,WAAS,uBAAuB,UAA0B;AACtD,QAAIC,WAAU,SAAS,eAAe,gDAAgD;AACtF,QAAI,CAACA,UAAS;AACV,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB,gBAAgB;AACrC,QAAG,CAAC;AACA;AACJ,6BAAyB,gBAAoB,mBAAmB,2BAA2B,WAAW,cAAc;AACpH,WAAO;AAAA,EACX;AAqCA,WAAS,gBAAgB,SAAiB,kBAA2B,UAAuB;AACxF,QAAI,MAAM,SAAS,cAAc,MAAQ,WAAW;AACpD,QAAG,CAAC;AACA;AAEJ,QAAI,YAAY;AAChB,QAAG,kBAAkB;AACjB,eAAS,eAAe,gBAAgB,EAAE,UAAU;AAAA,IACxD;AAAA,EACJ;AAGA,iBAAe,YAAY;AACvB,QAAI,sBAAsB,IAAI,mBAAmB,QAAW,MAAS;AAErE,QAAI,WAAW,mBAAmB;AAClC,QAAI,WAAW,IAAI;AAAA,MACf;AAAA,MACA;AAAA,MACA,mBAAmB,SAAS,WAAW;AAAA,IAC3C;AAGA,QAAI,MAAM,SAAS,wBAAwB,KAAK;AAChD,QAAI,SAAS,IAAI,YAAY,SAAS,cAAc,KAAK,CAAC;AAC1D,WAAO,UAAU,IAAI,aAAa;AAClC,WAAO,KAAS;AAChB,aAAS,mBAAmB,IAAI,YAAY,SAAS,cAAc,KAAK,CAAC;AAEzE,oBAAgB,0BAA0B;AAE1C,QAAI,aAAa,MAAM,iBAAiB,iCAAiC,SAAS,kBAAkB,IAAI,EAAE,KAAK,iBAAe;AAClI;AACQ,UAAI,YAAY,YAAY,eAAe;AAC3C,aAAO,UACF,IAAI,SAAO;AACR,YAAI,QAAQ,IAAI,MAAM,CAAC,EAAE,YAAY,MAAM,IAAI;AAC/C,eAAO,EAAE,MAAM,MAAM,CAAC,GAAG,UAAU,MAAM,CAAC,GAAG,OAAO,SAAS,IAAI,MAAM,CAAC,EAAE,WAAW,EAAC;AAAA,MAC1F,CAAC;AAAA,IACT,CAAC;AACD,YAAQ,IAAI,UAAU;AAEtB,oBAAgB,sBAAsB;AAEtC,QAAI,gBAAgB,MAAM,iBAAiB,+CAA+C,SAAS,kBAAkB,IAAI,EAAE,KAAK,iBAAe;AAC3I,aAAO,YAAY,eAAe,EAAE;AAAA,QAAI,QAAM;AACtC,iBAAO;AAAA,YACH,OAAO,GAAG,MAAM,CAAC,EAAE;AAAA,YACnB,UAAU,GAAG,MAAM,CAAC,EAAE;AAAA,YACtB,KAAK,GAAG,MAAM,CAAC,EAAE;AAAA,YACjB,QAAQ,GAAG,MAAM,CAAC,EAAE;AAAA,YACpB,OAAO,GAAG,MAAM,CAAC,EAAE;AAAA,UACvB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AACD,YAAQ,IAAI,aAAa;AAEzB,oBAAgB,+BAA+B;AAE/C,QAAI,QAAQ,MAAM,iBAAiB,mDAAmD,SAAS,kBAAkB,IAAI,EAAE,KAAK,iBAAe;AACvI,UAAI,YAAY,YAAY,eAAe;AAE3C,aAAO,UACF,IAAI,SAAO;AACR,YAAI,QAAQ,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,EAAE,YAAY,MAAM,IAAI;AACvE,YAAI,SAAS,MAAM,KAAK,IAAI,MAAM,CAAC,EAAE,UAAU,EAAE,OAAO,UAAQ,KAAK,aAAa,KAAK,SAAS,EAAE,IAAI,UAAQ,KAAK,WAAW,EAAE,KAAK,EAAE;AACvI,YAAI,MAAO,cAAc,OAAO,UAAU,CAAC,CAAC;AAC5C,YAAI,SAAS,IAAI,MAAM,CAAC,EAAE,cAAc,OAAO,EAAE,YAAY,UAAU,EAAE;AACzE,eAAO,EAAE,MAAM,MAAM,CAAC,GAAG,UAAU,MAAM,CAAC,GAAG,MAAM,IAAI,MAAM,CAAC,EAAE,YAAY,CAAC,GAAG,KAAK,OAAM;AAAA,MAC/F,CAAC;AAAA,IACT,CAAC;AACD,YAAQ,IAAI,KAAK;AAEjB,aAAS,WAAW;AACpB,aAAS,aAAa,EAAE,KAAK,CAAC,iBAAiB;AAE3C,UAAI,WAA+B,oBAAI,IAAI;AAE3C,eAAQ,QAAQ,YAAY;AACxB,iBAAS,IAAI,KAAK,OAAK,MAAI,KAAK,UAAU,IAAI;AAAA,MAClD;AAGA,UAAI,YAAY,aAAa,eAAe;AAC5C,UAAI,KAAK,oBAAI,KAAK;AAClB,UAAI,OAAO,UAAS,GAAG,mBAAmB,IAAG;AAC7C,UAAI,WAAW,UACV,IAAI,SAAO;AACR,YAAI,uBAAwB,WAAW,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,aAAa,QAAQ,KAAK,GAAG,KAAK,GAAG,IAAE;AACpH,YAAI,gBAAiB,WAAW,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,aAAa,QAAQ,KAAK,GAAG,KAAK,GAAG,IAAE;AAC7G,YAAI,MAAM,IAAI,MAAM,CAAC,EAAE,cAAc,IAAI,GAAG,aAAa;AACzD,YAAI,QAAQ,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,EAAE,YAAY,MAAM,IAAI;AACvE,YAAI,OAAqB;AAAA,UACrB,MAAM,MAAM,CAAC;AAAA,UACb,UAAU,MAAM,CAAC;AAAA,UACjB;AAAA,UACA,YAAY,cAAc,GAAG;AAAA,UAC7B;AAAA,UACA;AAAA,UACA,wBAAwB;AAAA,UACxB,iBAAiB;AAAA,UACjB,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AACA,YAAI,OAAO,SAAS,IAAI,KAAK,OAAK,MAAI,KAAK,QAAQ;AACnD,YAAG,MAAM;AACL,cAAI,KAAK,OAAO;AACZ,iBAAK,SAAS,QAAQ,KAAK;AAAA,UAC/B,OAAO;AACH,iBAAK,QAAQ,KAAK,MAAM,SAAS;AAAA,UACrC;AAAA,QACJ;AACA,eAAO;AAAA,MACX,CAAC;AAEL,UAAI,iBAAiB,oBAAI,IAAoB;AAC7C,UAAI,aAAa,oBAAI,IAAoB;AAEzC,YACK,OAAO,UAAQ,KAAK,SAAS,GAAG,EAChC,QAAQ,OAAK;AACX,uBAAe,IAAI,EAAE,OAAK,MAAI,EAAE,WAAS,MAAI,EAAE,MAAM,eAAe,IAAI,EAAE,OAAK,MAAI,EAAE,WAAS,MAAI,EAAE,GAAG,KAAG,KAAG,CAAC;AAC9G,mBAAW,IAAI,EAAE,SAAS,WAAW,IAAI,EAAE,MAAM,KAAG,KAAG,CAAC;AAAA,MAC3D,CAAC;AAEL,cAAQ,IAAI,cAAc;AAC1B,cAAQ,IAAI,UAAU;AAEtB,eAAS,QAAQ,UAAQ;AACrB,YAAI,OAAO,eAAe,IAAI,KAAK,OAAK,MAAI,KAAK,WAAS,MAAI,KAAK,UAAU,KAAG;AAChF,YAAG,OAAO,KAAK;AACX,eAAK,QAAQ;AAAA,MACrB,CAAC;AAED,eAAS,QAAQ,UAAQ;AACrB,gBAAQ,UAAU,KAAK,OAAO,MAAM,KAAK,WAAW,MAAM,KAAK,aAAa,MAAM,KAAK,uBAAuB,MAAM,KAAK,QAAQ,MAAM,KAAK,QAAQ;AAAA,MACxJ,CAAC;AACD,iBAAW,QAAQ,CAAC,SAAU,QAAO;AACjC,gBAAQ,aAAa,MAAM,MAAM,UAAU;AAAA,MAC/C,CAAC;AACD,oBAAc,QAAQ,CAAC,WAAU;AAC7B,gBAAQ,aAAa,OAAO,QAAQ,MAAM,OAAO,WAAW,MAAM,OAAO,MAAM,MAAM,OAAO,SAAS,MAAM,OAAO,QAAQ;AAAA,MAC9H,CAAC;AACD,cAAQ,IAAI,IAAI;AAChB,aAAO,eAAe,QAAY,WAAW,IAAI;AACjD,+BAAyB;AAGzB,eAAS,SAAS,YAAY,EACzB,cAAc,OAAO,EACrB,gBAAgB,GAAG,aAAa,QAAQ,CAAC;AAAA,IAClD,CAAC;AAAA,EACL;AAEA,WAAS,2BAA2B;AAChC,QAAI,OAAO,OAAO,eAAe,QAAY,SAAS;AACtD,cAAU,UAAU,UAAU,IAAI,EAC7B,KAAK,OAAK;AACP,sBAAgB,qCAAuC,aAAW,8CAAkD,YAAY,MAAM;AAClI,iCAAyB;AAAA,MAC7B,CAAC;AAAA,IACL,CAAC,EACA,MAAM,YAAU;AACb,sBAAgB,0CAA4C,aAAW,8CAAkD,YAAY,MAAM;AACvI,iCAAyB;AAAA,MAC7B,CAAC;AAAA,IACL,CAAC;AAAA,EACT;AAEA,WAAS,cAAc,SAA0B;AAC7C,QAAI,MAAM,mBAAmB,OAAO;AACpC,WAAO,IACF,QAAQ,kBAAkB,UAAU,EACpC,QAAQ,kBAAkB,KAAK,EAC/B,QAAQ,QAAQ,IAAI,EACpB,QAAQ,aAAa,EAAE,EACvB,QAAQ,cAAc,EAAE;AAAA,EACjC;AAEA,WAAS,mBAAmB,SAA0B;AAClD,cAAU,QAAQ,YAAY;AAC9B,QAAI,QAAQ,SAAS,mBAAmB,GAAG;AACvC,UAAG,QAAQ,SAAS,IAAI;AACpB,eAAO;AAAA;AAEP,eAAO;AAAA,IACf;AACA,QAAI,QAAQ,SAAS,cAAc,GAAG;AAClC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,UAAU,GAAG;AAC9B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,gBAAgB,GAAG;AACpC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,SAAS,GAAG;AAC7B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,oBAAoB,GAAG;AACxC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,aAAa,GAAG;AACjC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,SAAS,GAAG;AAC7B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,aAAa,GAAG;AACjC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,sBAAsB,GAAG;AAC1C,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,WAAW,GAAG;AAC/B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,SAAS,GAAG;AAC7B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,YAAY,GAAG;AAChC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,YAAY,GAAG;AAChC,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,WAAW,GAAG;AAC/B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,MAAM,GAAG;AAC1B,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,SAAS,wBAAwB,GAAG;AAC5C,UAAI,KAAK;AACT,UAAIC,WAAU,QAAQ,MAAM,EAAE;AAC9B,UAAGA,SAAQ,SAAS;AAChB,eAAOA,SAAQ,CAAC;AAAA;AAEhB,eAAO;AAAA,IACf;AACA,QAAI,QAAQ,SAAS,6BAA6B,GAAG;AACjD,UAAI,KAAK;AACT,UAAIA,WAAU,QAAQ,MAAM,EAAE;AAC9B,UAAGA,SAAQ,SAAS,GAAG;AACnB,YAAGA,SAAQ,CAAC,EAAE,SAAS,aAAa;AAChC,iBAAO;AAAA;AAEP,iBAAOA,SAAQ,CAAC,IAAI;AAAA,MAC5B;AAEI,eAAO;AAAA,IACf;AAEA,QAAI,QAAQ,SAAS,WAAW,KAAK,QAAQ,SAAS,QAAQ,KAAK,QAAQ,SAAS,aAAa,GAAG;AAChG,aAAO;AAAA,IACX;AACA,QAAI,MAAM;AACV,QAAI,UAAU,QAAQ,MAAM,GAAG;AAC/B,QAAG,QAAQ,SAAS;AAChB,aAAO,QAAQ,CAAC;AACpB,WAAO;AAAA,EACX;;;AC3TA,MAAOC,qBAAQ,IAAI,kBAAkB,iCAAiCC,aAAY,IAAI;AAEtF,WAASA,YAAY,UAA0B;AAC3C,QAAI,SAAS,WAAW,SAAS,eAAe,gBAAgB,GAAE;AAE9D,eAAS;AACT,aAAO;AAAA,IACX;AACA,QAAI,SAAS,WAAW,SAAS,eAAe,qBAAqB,GAAE;AACnE,mBAAa;AACb,aAAO;AAAA,IACX;AAEA,QAAI,SAAS,WAAW,SAAS,eAAe,4CAA4C,KACrF,SAAS,WAAW,SAAS,GAAG;AACnC,iBAAW,cAAc,EAAE;AAC3B,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,eAAe;AACpB,QAAI,QAAQ,SAAS,cAAc,mDAAmD;AACtF,QAAI,qBAAqB,MAAM,iBAAiB,aAAa,EAAE,WAAW;AAC1E,QAAG,oBAAoB;AACnB,UAAI,KAAK,SAAS,cAAc,yCAAyC;AACzE,SAAG,MAAM;AACT,eAAS,eAAe,2CAA2C,EAAE,MAAM;AAAA,IAC/E;AAAA,EACJ;AAEA,WAAS,sBAAsB;AAC3B,QAAI,gBAAgB,SAAS,cAAc,mEAAmE;AAC9G,QAAI,iBAAiB,CAAC,cAAc,QAAQ,QAAQ;AAChD,oBAAc,QAAQ,SAAS;AAC/B,oBAAc,cAAc;AAC5B,UAAI,SAAS;AACb,eAAS,OAAO,oBAAoB;AAEhC,YAAS,OAAT,SAAc,IAAiB;AAC3B,cAAG,GAAG,WAAW,KAAK;AAClB,eAAG,UAAU,MAAM,aAAa,IAAI,IAAI;AAAA,UAC5C;AAAA,QACJ;AALA,YAAI,gBAAgB,IAAI,SAAS,UAAU;AAM3C,iBAAS,MAAM,YAAY,QAAQ,4BAA4B,aAAa,IAAI,IAAI,IAAI,KAAK,QAAW,IAAI,EAAE;AAAA,MAClH;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,eAAe;AACpB,QAAI,WAAY,MAAM,OAAO,2GAA2G,EAAE;AAC1I,aAAS,YAAY;AACrB,aAAS,eAAe,cAAc,EAAE,iBAAiB,SAAS,SAAS;AAAA,EAC/E;AAEA,WAAS,YAAY;AACjB,aAAS,eAAe,WAAW,EAAE,UAAU,OAAO,WAAW;AAAA,EACrE;AAEA,WAAS,eAAe;AACpB,wBAAoB;AACpB,iBAAa;AAAA,EACjB;AAEA,WAAS,aAAa,MAAc;AAChC,QAAI,UAAU,SAAS,cAAc,2DAA2D;AAChG,QAAI,QAAQ,QAAQ,cAAc,OAAO;AACzC,UAAM,QAAQ;AACd,QAAI,SAAS,QAAQ,cAAc,QAAQ;AAC3C,WAAO,MAAM;AACb,WAAO;AAAA,EACX;AAEA,MAAI,qBAAyC,CAAC;AAS9C,MAAI,mBAAmB;AAEvB,iBAAe,WAAW;AACtB,QAAI,eAAe,SAAS,cAAc,YAAY;AACtD,QAAG,CAAC;AACA;AACJ,QAAI,YAAY,aAAa;AAC7B,uBAAmB,aAAa;AAEhC,QAAI,UAAU,CAAC,GAAG,UAAU,SAAS,OAAO,CAAC;AAC7C,QAAI,eAAe,CAAC,GAAG,IAAI,IAAI,QAAQ,IAAI,CAAAC,WAASA,OAAM,CAAC,CAAC,CAAC,CAAC;AAE9D,QAAI,EAAC,OAAO,QAAO,IAAI,OAAO;AAC9B,mBAAe,aAAa,OAAO,OAAK,KAAK,OAAO;AACpD,YAAQ,IAAI,YAAY;AAExB,QAAI,WAAW,SAAS,cAAc,KAAK;AAC3C,aAAS,YAAY,MAAM,oBAAoB,aAAa,KAAK,GAAG,CAAC;AACrE,QAAI,QAAQ,CAAC,GAAG,SAAS,iBAAiB,IAAI,CAAC;AAC/C,yBAAqB,MAAM,IAAI,QAAM;AACjC,UAAI,KAAK,GAAG,cAAc,OAAO,EAAE;AACnC,UAAI,OAAO,GAAG,cAAc,QAAQ,EAAE;AACtC,4BAAsB;AACtB,aAAyB,EAAC,IAAI,MAAM,QAAQ,GAAG,QAAQ,MAAK;AAAA,IAChE,CAAC;AACD,oBAAgB,WAAW,kBAAkB;AAAA,EACjD;AAEA,WAAS,gBAAgB,WAAmBC,qBAAwC;AAChF,QAAGA,oBAAmB,WAAW;AAC7B,aAAOA,oBAAmB,CAAC;AAK/B,QAAI,gBAAgB,UAAU,YAAY;AAC1C,aAAQ,OAAOA,qBAAoB;AAC/B,UAAI,YAAY,IAAI,KAAK,MAAM,GAAG;AAClC,eAAQ,YAAY,WAAW;AAC3B,YAAG,UAAU,SAAS,MAAI,WAAS,GAAG,GAAG;AACrC,cAAI;AAAA,QACR;AACA,YAAG,cAAc,SAAS,MAAI,SAAS,YAAY,IAAE,GAAG,GAAG;AACvD,cAAI;AAAA,QACR;AAAA,MACJ;AAAA,IACJ;AAEA,IAAAA,oBAAmB,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AACrD,QAAGA,oBAAmB,CAAC,EAAE,SAASA,oBAAmB,CAAC,EAAE;AACpD,MAAAA,oBAAmB,CAAC,EAAE,SAAS;AAAA,EACvC;;;ACtIA,MAAI,kBAA+B,CAAC;AACpC,MAAI,iBAAiB;AACrB,MAAI,eAAe;AAaZ,WAAS,eAAe,MAAc,YAAyB;AAClE,QAAI,wBAAwB,aAAa,QAAY,cAAc;AACnE,QAAG,CAAC,uBAAuB;AACvB,8BAAwB;AAAA,IAC5B;AACA,QAAI,kBAAkB,KAAK,MAAM,qBAAqB;AACtD,oBAAgB,IAAI,IAAI;AACxB,iBAAa,QAAY,gBAAgB,KAAK,UAAU,eAAe,CAAC;AAAA,EAC5E;AAEA,WAAS,qBAAkC;AACvC,QAAI,wBAAwB,aAAa,QAAY,cAAc;AACnE,QAAG,CAAC,uBAAuB;AACvB,aAAO,CAAC;AAAA,IACZ;AACA,QAAI,WAAW,CAAC;AAChB,QAAI,kBAAkB,KAAK,MAAM,qBAAqB;AACtD,aAAQ,QAAQ,iBAAiB;AAC7B,eAAS,KAAK,GAAG,gBAAgB,IAAI,CAAC;AAAA,IAC1C;AACA,WAAO;AAAA,EACX;AAEA,WAAS,mBAAmB,YAAqB;AAC7C,QAAI,cAAc,WAAW,cAAc,GAAG,EAAE,YAAY,KAAK;AAEjE,QAAI,WAAW,MAAM,KAAK,WAAW,iBAAiB,uBAAuB,CAAkC,EAC1G,IAAI,CAAC,SAAS;AACX,UAAI,YAAuB;AAAA,QACvB,MAAM;AAAA,QACN;AAAA,QACA,OAAO,KAAK,YAAY,KAAK;AAAA,QAC7B,MAAM,KAAK;AAAA,QACX,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,WAAW;AAAA,MACf;AACA,gBAAU,YAAY,UAAU,cAAc,QAAQ,UAAU;AAChE,gBAAU,YAAY,UAAU,UAAU,YAAY;AACtD,aAAO;AAAA,IACX,CAAC,EACA,OAAO,CAAC,SAAS,KAAK,SAAS,MAAM,KAAK,QAAQ,MAAM,KAAK,QAAQ,oCAAoC;AAC9G,oBAAgB,KAAK,GAAG,QAAQ;AAAA,EACpC;AAEA,WAAS,iBAAiB;AACtB,sBAAkB,CAAC;AACnB,QAAI,OAAO,SAAS,eAAe,aAAa;AAChD,QAAI,cAAc,KAAK,iBAAiB,qDAAqD;AAC7F,aAAQ,cAAc,YAAY,OAAO,GAAG;AACxC,yBAAmB,UAAU;AAAA,IACjC;AAAA,EACJ;AAEO,WAAS,kBAAkB;AAAA,EAElC;AAEA,WAAS,0BAA0B,YAAuB;AACtD,QAAI,YAAY,iDAAwC;AACxD,cAAU;AACV,kBAAc,SAAS;AACvB,aAAS,OAAO;AAAA,EACpB;AAEA,WAAS,0BAA0B,YAAuB;AACtD,QAAI,YAAY,iDAAwC;AACxD,cAAU;AACV,kBAAc,SAAS;AACvB,aAAS,OAAO;AAAA,EACpB;AAEA,WAAS,yBAAyB;AAC9B,QAAI,QAAqB,CAAC;AAC1B,QAAI,OAAkB;AAAA,MAClB,aAAa;AAAA,MAAa,MAAM;AAAA,MAAI,OAAO,iBAAgB,4BAA4B,oBAAoB,CAAC;AAAA,MAAG,WAAW;AAAA,MAAI,WAAW;AAAA,MAAI,QAAQ;AAAA,IACzJ;AACA,SAAK,YAAY,KAAK,cAAc,QAAQ,KAAK;AACjD,SAAK,YAAY,KAAK,UAAU,YAAY;AAC5C,SAAK,OAAO;AACZ,UAAM,KAAK,IAAI;AAEf,WAAO;AAAA,MACH,aAAa;AAAA,MAAa,MAAM;AAAA,MAAI,OAAO,iBAAgB,4BAA4B,oBAAoB,IAAE,CAAC;AAAA,MAAG,WAAW;AAAA,MAAI,WAAW;AAAA,MAAI,QAAQ;AAAA,IAC3J;AACA,SAAK,YAAY,KAAK,cAAc,QAAQ,KAAK;AACjD,SAAK,YAAY,KAAK,UAAU,YAAY;AAC5C,SAAK,OAAO;AACZ,UAAM,KAAK,IAAI;AACf,WAAO;AAAA,EACX;AAEA,WAAS,KAAK,iBAAiB,WAAW,cAAc;AAExD,WAAS,eAAe,IAAmB;AACvC,QAAI,GAAG,QAAQ,OAAO,GAAG,WAAW,CAAC,GAAG,YAAY,CAAC,GAAG,QAAQ;AAC5D,qBAAe;AACf,sBAAgB,KAAK,GAAG,mBAAmB,CAAC;AAC5C,sBAAgB,KAAK,GAAG,uBAAuB,CAAC;AAChD,cAAQ,YAAY;AAAA,IACxB,OAAO;AACH,UAAI,mBAAmB;AACnB;AACJ,UAAI,eAAe,GAAG,GAAG,KAAK,GAAG,QAAQ,KAAK;AAC1C,oBAAY,eAAe,GAAG;AAC9B,uBAAe;AAAA,MACnB,WAAW,GAAG,OAAO,UAAU;AAC3B,YAAG,YAAY,gBAAgB,IAAI;AAC/B,sBAAY,cAAc;AAC1B,yBAAe;AACf,aAAG,eAAe;AAAA,QACtB;AAAA,MAEJ,WAAW,GAAG,OAAO,aAAa;AAC9B,oBAAY,cAAc,YAAY,YAAY,MAAM,GAAG,EAAE;AAAA,MACjE,WAAW,GAAG,OAAO,aAAa;AAC9B;AACA,WAAG,eAAe;AAAA,MACtB,WAAW,GAAG,OAAO,WAAW;AAC5B;AACA,WAAG,eAAe;AAAA,MACtB,WAAW,GAAG,OAAO,SAAS;AAC1B,YAAI,OAAO,gBAAgB,KAAK,CAACC,UAASA,MAAK,cAAe,KAAK,SAAS,YAAY,EAAkB,QAAQ,SAAS;AAC3H,gBAAQ,YAAY;AACpB,YAAI,KAAK,MAAM;AACX,eAAK,KAAK,IAAI;AAAA,QAClB,OAAO;AACH,mBAAS,OAAO,KAAK;AAAA,QACzB;AACA,WAAG,eAAe;AAAA,MACtB;AAAA,IACJ;AACA,gBAAY,YAAY,WAAW;AAAA,EACvC;AAEA,MAAI,UAAU,SAAS,cAAc,KAAK;AAC1C,WAAS,cAAc,MAAM,EAAE,YAAY,OAAO;AAClD,UAAQ,aAAa,WAAW,MAAM;AACtC,UAAQ,KAAK;AACb,UAAQ,iBAAiB,UAAU,CAAC,OAAO;AAEvC,qBAAiB,GAAG,aAAa;AAAA,EACrC,CAAC;AACD,MAAI,cAAc,SAAS,cAAc,OAAO;AAChD,UAAQ,YAAY,WAAW;AAC/B,MAAI,OAAO,SAAS,cAAc,KAAK;AACvC,UAAQ,YAAY,IAAI;AACxB,OAAK,UAAU,IAAI,MAAM;AAEzB,WAAS,YAAY,QAAgB;AACjC,eAAW,QAAQ,iBAAiB;AAChC,WAAK,SAAS;AAEd,UAAI,KAAK,UAAU,SAAS,MAAM;AAC9B,aAAK,UAAU;AAGnB,UAAI,2BAA2B,OAAO,MAAM,QAAQ;AACpD,UAAI,yBAAyB,MAAM,UAAQ,KAAK,UAAU,SAAS,IAAI,CAAC;AACpE,aAAK,UAAU;AAGnB,UAAI,UAAU,OAAO,MAAM,EAAE,EACxB,IAAI,UAAQ,KAAK,UAAU,QAAQ,IAAI,CAAC;AAC7C,UAAG,QAAQ,MAAM,SAAO,QAAQ,EAAE,KAAK,SAAS,OAAO;AACnD,aAAK,UAAU;AAGnB,UAAI,OAAO,MAAM,EAAE,EACd,MAAM,UAAQ,KAAK,UAAU,SAAS,IAAI,CAAC;AAC5C,aAAK,UAAU;AAAA,IACvB;AAEA,UAAM,0BAA0B;AAChC,SAAK,YAAY,gBACZ,OAAO,CAAC,SAAS,KAAK,UAAU,CAAC,EACjC,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM,EAClC,IAAI,CAAC,SAAS,yBAAyB,KAAK,SAAS,KAAK,KAAK,SAAS,QAAQ,EAChF,MAAM,GAAG,uBAAuB,EAChC,KAAK,IAAI;AACd,mBAAe,MAAM,cAAc,GAAG,KAAK,SAAS,SAAS,CAAC;AAC9D,SAAK,SAAS,YAAY,GAAG,UAAU,IAAI,UAAU;AAAA,EACzD;AAEA,WAAS,SAAS,KAAe;AAC7B,aAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AACrC,UAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG;AACrB,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;;;AC/MO,MAAI,8BAA8B,IAAI,kBAAkB,yBAAyB,6BAA6B;AAC9G,MAAI,qBAAqB,IAAI,kBAAkB,uBAAuB,qBAAqB;AAC3F,MAAI,oBAAoB,IAAI,kBAAkB,qBAAqB,mBAAmB;AACtF,MAAI,iBAAiB,IAAI,kBAAkB,iBAAiB,gBAAgB;AAC5E,MAAI,oBAAoB,IAAI,kBAAkB,oBAAoB,mBAAmB;AACrF,MAAI,uBAAuB,IAAI,kBAAkB,mBAAmB,kBAAkB;AAI7F,WAAS,mBAAmB,WAA2B;AACnD,mBAAe,YAAY,eAAe,eAAe,sBAAsB,CAAC;AAChF,WAAO;AAAA,EACX;AAEA,WAAS,iBAAiB,WAA2B;AACjD,mBAAe,UAAU,eAAe,aAAa,sBAAsB,CAAC;AAC5E,WAAO;AAAA,EACX;AAEA,WAAS,oBAAoB,WAA2B;AACpD,mBAAe,aAAa,eAAe,gBAAgB,sBAAsB,CAAC;AAClF,WAAO;AAAA,EACX;AAEA,WAAS,oBAAoB,WAA2B;AACpD,mBAAe,cAAc,eAAe,iBAAiB,sBAAsB,CAAC;AACpF,WAAO;AAAA,EACX;AAEA,WAAS,sBAAsB,WAA2B;AACtD,mBAAe,WAAW,eAAe,cAAc,sBAAsB,CAAC;AAC9E,WAAO;AAAA,EACX;AAEA,WAAS,8BAA8B,WAA2B;AAC9D,mBAAe,uBAAuB,eAAe,qBAAqB,4BAA4B,CAAC;AACvG,WAAO;AAAA,EACX;AAEA,WAAS,6BAA6B,aAAqB,MAAyB,iBAAyB;AACzG,QAAI,OAAkB;AAAA,MAClB;AAAA,MAAa,MAAM,KAAK;AAAA,MAAM,OAAO,KAAK,YAAY,KAAK;AAAA,MAAG,WAAW;AAAA,MAAI,WAAW;AAAA,MAAI,QAAQ;AAAA,IACxG;AACA,QAAI,KAAK,MAAM,YAAY,EAAE,SAAS,cAAc,GAAG;AACnD,WAAK,YAAY,KAAK,cAAc,QAAQ,KAAK;AAAA,IACrD,OAAO;AACH,WAAK,YAAY,kBAAkB,KAAK,cAAc,QAAQ,KAAK;AAAA,IACvE;AACA,SAAK,YAAY,KAAK,UAAU,YAAY;AAC5C,WAAO;AAAA,EACX;AAEA,WAAS,uBAAuB,aAAqB,MAAyB,iBAAyB;AACnG,QAAI,OAAkB;AAAA,MAClB;AAAA,MAAa,MAAM,KAAK;AAAA,MAAM,OAAO,KAAK,YAAY,KAAK;AAAA,MAAG,WAAW;AAAA,MAAI,WAAW;AAAA,MAAI,QAAQ;AAAA,IACxG;AACA,SAAK,YAAY,kBAAkB,KAAK;AACxC,SAAK,YAAY,KAAK,UAAU,YAAY;AAC5C,WAAO;AAAA,EACX;AAEA,WAAS,eAAe,iBAAyB,eAAqC;AAClF,QAAI,aAA0B,CAAC;AAC/B,QAAI,SAAS,SAAS,iBAAiB,eAAe;AACtD,aAAQ,SAAS,QAAO;AACpB,UAAI,SAAS,MAAM,cAAc,IAAI;AACrC,UAAG,CAAC,QAAQ;AACR;AAAA,MACJ;AACA,UAAI,cAAc,OAAO,YAAY,KAAK;AAC1C,UAAI,QAAQ,MAAM,iBAAiB,GAAG;AACtC,eAAQ,QAAQ,OAAO;AACnB,YAAG,CAAC,KAAK;AACL;AACJ,YAAI,OAAO,cAAc,aAAa,MAAM,eAAe;AAC3D,mBAAW,KAAK,IAAI;AAAA,MACxB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;;;ACnEA,OAAK;AAGL,WAAS,OAAO;AACZ,eAAW,EACN,KAAK,MAAM;AAEZ,aAAO,QAAQ,UAAU,YAAY,CAAC,UAAe,SAAiB;AAClE,YAAI,SAAS,QAAQ;AACjB,qBAAW,EAAE,KAAK,OAAK;AACnB,8BAAkB;AAAA,UACtB,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAGD,aAAO,WAAW,iBAAiB,mBAAmB,MAAM;AACxD,4BAAoB;AACpB,sBAAc;AAAA,MAClB,CAAC;AAED,aAAO,iBAAiB,QAAQ,MAAM;AAClC,sBAAc;AAAA,MAClB,CAAC;AAGD,uBAAiB,gBAAgB;AACjC,uBAAiBC,iBAAc;AAC/B,uBAAiBA,iBAAW;AAC5B,uBAAiBA,iBAAgB;AACjC,uBAAiBA,iBAAiB;AAClC,uBAAiBA,iBAAa;AAC9B,uBAAiB,2BAA2B;AAC5C,uBAAiB,kBAAkB;AACnC,uBAAiB,iBAAiB;AAClC,uBAAiB,cAAc;AAC/B,uBAAiB,iBAAiB;AAClC,uBAAiBA,iBAAgB;AACjC,uBAAiBA,iBAAW;AAC5B,uBAAiB,oBAAoB;AACrC,uBAAiBA,iBAAqB;AACtC,uBAAiBA,kBAAoB;AACrC,oBAAc;AACd,sBAAgB;AAAA,IACpB,CAAC;AAAA,EACL;AAEA,MAAI,gBAAgB,KAAK,IAAI;AAC7B,WAAS,sBAAsB;AAC3B,QAAG,KAAK,IAAI,IAAK,gBAAc,KAAG,KAAO;AACrC,sBAAgB,KAAK,IAAI;AACzB,cAAQ,IAAI,8BAA8B;AAC1C,0BAAoB,kBAAkB,CAAC,EAAE,KAAK,OAAK;AAC/C,YAAG,CAAC,OAAO,kBAAkB,GAAG,CAAC,GAAG;AAChC,2BAAiB,CAAC;AAClB,4BAAkB;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,WAAS,oBAAoB;AACzB,YAAQ,IAAI,sBAAsB;AAClC,aAAQ,YAAY,mBAAmB;AACnC,eAAS;AAAA,IACb;AAAA,EACJ;AAEO,WAAS,gBAAgB;AAC5B,QAAG,kBAAkB,EAAE,YAAY;AAC/B;AAAA,IACJ;AACA,aAAQ,YAAY,WAAW;AAC3B,eAAS,cAAc;AAAA,IAC3B;AAAA,EACJ;AAEA,iBAAe,aAAa;AAExB,QAAI,QAAQ,MAAM,OAAO,QAAQ,KAAK,IAAI,IAAI;AAE9C,WAAO,OAAO,SAAS,KAAK;AAC5B,qBAAiB,MAAM,oBAAoB,kBAAkB,CAAC,CAAC;AAAA,EACnE;",
  "names": ["button", "match", "onSearchInput", "context", "match", "result", "list", "token", "BlockInfo", "teachers", "observer_default", "onMutation", "trimDiv", "addButton", "button", "observer_default", "onMutation", "observer_default", "tableId", "isInstrument", "observer_default", "onMutation", "tableId", "observer_default", "onMutation", "observer_default", "onMutation", "TXT_FILTER_ID", "savedSearch", "onSearchInput", "observer_default", "onMutation", "match", "result", "observer_default", "tableId", "matches", "observer_default", "onMutation", "match", "matchingLeerlingen", "item", "observer_default"]
}

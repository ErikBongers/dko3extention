{"version":3,"file":"bundle.js","names":["textToTokenize: string","tokens: string[]","to: string","nested: string[]","lastCreated: Element","node: EmmetNode","text: string","onIndex?: (index: number) => string","hook?: (el: Element) => void","root: HTMLElement","target: Element","parent: HTMLElement","position: InsertPosition","first: Node","target: Node","onIndex: (index: number) => string","hook: (el: Element) => void","list","el: EmmetNode","atts: AttDef[]","classList: string[]","token","tokens: string[]","attDefs: AttDef[]","expected: string","parent: Element","def: ElementDef","index: number","fileName: string","data: any","options: Options","globalSettings: GlobalSettings","settings: GlobalSettings","defaultSettings: GlobalSettings","action: Actions","from: TabType","to: TabType","toId: number","data: any","pageTitle?: string","req: ServiceRequest","observers: Observer[]","settingsObservers: (() => void)[]","message: any","id: string","observer: Observer","observer: () => void","buttonId: string","show: boolean","addButton","targetElement: HTMLElement","title: string","clickFunction: (ev:PointerEvent) => void","imageId: string","classList: string[]","where: InsertPosition","button","startYear: number","match","duration: number","value: number","min: number","max: number","str: string","code: number","i: number","len: number","start: number","stop: number","onSearchInput: (ev: Event) => any","value: string","onSearchInput","navigationBars: NodeListOf<Element>","btnId: string","onClick: any","fontIconId: string","array: Type[]","search: string","g1: GlobalSettings","g2: GlobalSettings","name: string","innerHtml: string","pageTitle: string","data: TeacherHoursSetup","headers: Iterable<string>","cols: Iterable<Iterable<string>>","startAt: number","upTo: number","pageName: PageName","defaultSettings: PageSettings","state: PageSettings","globalTransientPageState: Map<string, any>","key: string","defaultValue: any","key:string","transientState: object","state: GotoState","pageName: PageName","pageState","powerQueryItems: QueryItem[]","headerLabel: string","label: string","href: string","func?: GotoFunc","longLabelText?: string","page: string","queryItems: QueryItem[]","defaultQueryItems","headerMenu: Element","_queryItem: QueryItem","pageState","ev: KeyboardEvent","needle: string","ev: PointerEvent","selectedElement: HTMLElement","item","arr: number[]","longLabelPrefix: string","linkConverter: LinkToQueryConverter","urlHash: string","onPageChangedCallback: () => void","pageFilter: PageFilter","onMutationCallback: (mutation: MutationRecord) => boolean","trackModal: boolean","onPageLoadedCallback: () => void","mutationList: MutationRecord[]","_observer: MutationObserver","element: HTMLElement","page: string","longLabelPrefix: string","headerLabel: string","link: HTMLAnchorElement","onMutation","mutation: MutationRecord","_tabInschrijving: HTMLElement","tableUitleningen: HTMLElement","firstCells :NodeListOf<HTMLTableCellElement>","tabInschrijving: HTMLElement","_size: string","_modal: string","_file: string","args: string","table: HTMLTableElement","lessen: Les[]","studentsCell: HTMLTableCellElement","trimesterModules: Les[]","match","jaarModules: Les[]","studentTable: HTMLTableElement","students: StudentInfo[]","lesInfo: HTMLTableCellElement","id: number","block: BlockInfo","instrumentTeacherMomentModules: Les[]","mergedInstrument: (Les | undefined)[][]","modules: Les[]","inputModules: Les[]","student: StudentInfo","instr: any","tableData: TableData","teachers","primary: Teacher","tag: string","primaryGroups: Iterable<MergeableBlocksGroop>","getSecondaryKey: (block: BlockInfo) => string","setSecondaryGroup: (primary: MergeableBlocksGroop, group: Map<string, BlockInfo>) => void","getPrimaryKey: (block: BlockInfo) => string","allStudents: Map<string, StudentInfo>","blockTrimModules: Les[]","students: Map<string, StudentInfo>","jaarModule: Les","pageState: LessenPageState","sorting: NameSorting","tableData: TableData","trimElements: TrimElements","newTableBody: HTMLTableSectionElement","blocks: BlockInfo[]","groupId: string","getBlockTitle: (block: BlockInfo) => string","displayOptions: DisplayOptions","tableBody: HTMLTableSectionElement","rowClass: string","blockId: number","block: BlockInfo","getBlockTitle: (undefined | ((block: BlockInfo) => string))","student: StudentInfo","title: string","_text: string","show: boolean","text: string","trimesterHeaders: string[]","buttonText: string","id: string","floatRight: boolean","studentName: string","students: StudentInfo[]","f1: RowFilter","f2: RowFilter","tr: HTMLTableRowElement","_context: any","searchText: string","getRowSearchText: (tr: HTMLTableRowElement) => string","context: any","context","rowText: string","table: (HTMLTableElement | string)","rowFilter: RowFilter","menu: HTMLElement","title: string","indentLevel: number","onClick: (ev: MouseEvent) => void","event: MouseEvent","container: HTMLElement","button: HTMLElement","filter: (block: BlockInfo) => boolean","blocks: BlockInfo[]","tr: HTMLTableRowElement","context: any","selector: string","_context: any","filter: RowFilter","rowPreFilter: RowFilter","context: TrimFilterContext","TXT_FILTER_ID","text: string","pageState","extraFilter: RowFilter","set: (pageState: LessenPageState) => void","searchField","onMutation","mutation: MutationRecord","pageState","printButton: HTMLButtonElement","buttonId: string","title: string","clickFunction: (this: GlobalEventHandlers, ev: MouseEvent) => any","imageId: string","button","trimElements: TrimElements","show: boolean","mouseEvent: MouseEvent","showTrimTable: boolean","target: HTMLElement","grouping: TrimesterGrouping","activeSorting: TrimesterGrouping","separator: string","onMutation","mutation: MutationRecord","value: HTMLSpanElement","event: MouseEvent","rows: HTMLTableRowElement[]","table: HTMLTableElement","_event: MouseEvent","globalUrenData: UrenData","colDefsArray: {key: string, def: ColDef}[]","year: number","ctx: Context","colKey: string","newCtx: Context","mutationList: MutationRecord[]","_observer: MutationObserver","urenData: UrenData","observe: boolean","colDef: ColDef","onlyRecalc: boolean","tableDef: TableFetcher","keys: string[]","num: number","table: HTMLTableElement","_vakLeraars: Map<string, VakLeraar>","_tableDef: TableFetcher","fetchListener: NamedCellTableFetchListener","tr: HTMLTableRowElement","collection: any","hourSettings: TeacherHoursSetupMapped","student: StudentInfo","countMap: Map<string, CountStudentsPerJaar>","vak: string","settings: TeacherHoursSetupMapped","defaultTranslation","schoolyear: string","vak: HTMLOptionElement","schoolYear: string","criterium: string","criteria: object","grouping: string","fields: { value: string, text: string }[]","hourSettings: TeacherHoursSetup","defaultTranslationDefs: TranslationDef[]","schoolyear: string","schooljaar: string","pageState","requiredHeaderLabels: string[]","onRequiredColumnsMissing: OnRequiredColumnsMissingHandler","tableFetcher: TableFetcher","_pageCnt: number","_text: string","element: NotHTMLTemplate","headers: NodeListOf<HTMLTableCellElement>","headerIndices: Map<string, number>","label: string","tr: HTMLTableRowElement","step: number","maxCount: number","element?: HTMLElement","btn: HTMLElement","functionCall: string","htmlTableId: string","navigationData: TableNavigation","buildFetchUrl: (offset: number) => string","element: string","offset: number","tableId","tableRef: TableRef","calculateTableCheckSum: CheckSumBuilder","tableHandler?: TableHandler","succes: boolean","#fetchPages","pageCnt: number","text: string","fetchedTable: FetchedTable","#doFetchAllPages","listener: TableFetchListener","tableDef: TableFetcher","pageTemplate: HTMLTemplateElement","onMutation","_mutation: MutationRecord","tableId: string","tableId","_tableFetcher: TableFetcher","checksumHandler: CheckSumBuilder","divInfoContainer: HTMLDivElement","cacheInfo: string","reset_onclick: (ev: MouseEvent) => any","msg : string","#updateTempMessage","message: string","info: string","click_element_id?: string","callback?: () => void","containerElement: HTMLElement","barElement: HTMLElement","maxCount: number","container: HTMLElement","text: string","hash: string","offset: number","clearCache: boolean","infoBarListener: InfoBarTableFetchListener","scanner: TokenScanner","text: string","scannerIf: ScannerIf","callback?: (scanner: TokenScanner) => TokenScanner","yes: boolean","callback: (scanner: TokenScanner) => TokenScanner","#find","prefix: string","tokens: string[]","match","len: number","end: string","callback: (res: string) => void","infoBar: InfoBar","progressBar: ProgressBar","tableFetcher: TableFetcher","e: MouseEvent","_tableFetcher: TableFetcher","_pageCnt: number","_text: string","cmpFunction: (a: HTMLTableCellElement, b: HTMLTableCellElement) => number","header: Element","rows: HTMLTableRowElement[]","index: number","descending: boolean","cmpDirectionalFunction: (a: HTMLTableRowElement, b: HTMLTableRowElement) => number","a: HTMLTableRowElement","b: HTMLTableRowElement","a: HTMLTableCellElement","b: HTMLTableCellElement","date: string","table: HTMLTableElement","headers: Iterable<string>","cols: Iterable<Iterable<string>>","ev: MouseEvent","text: string","colHeader: HTMLElement","tableContainer: HTMLElement","_tableDef: TableFetcher","tableRef: TableRef","doIt: (tableRef: TableRef, index: number) => void","cmdDef: TableColumnCmdDef","cmd: TableColumnCmd","onlyBody: boolean","rows: Iterable<HTMLTableRowElement>","hideColumn: TableColumnCmdDef","showColumns: TableColumnCmdDef","row: HTMLTableRowElement","leftIndex: number","separator: string","headerRow: HTMLTableRowElement","indexes: number[]","direction: Direction","twoColumnFunc: (row: HTMLTableRowElement, index1: number, index2: number) => void","index1: number","index2: number","year: number","cloudData: CloudData","vakLeraars: Map<string, VakLeraar>","object?: Object","jsonCloudData: JsonCloudData","#buildMapFromJsonData","colKey1: string","colKey2: string","#columnToJson","colKey: string","cells: JsonCell[]","row: JsonCell","_tableDef: TableFetcher","onMutation","onPageLoaded","mutation: MutationRecord","pageState","schoolyear: string","globalHoursSettingsTabId: number","emails: string","email: string","func: () => boolean","fileName: string","fromCloud: JsonCloudData","onMutation","mutation: MutationRecord","divVakken: HTMLElement","tr: HTMLTableRowElement","onMutation","_mutation: MutationRecord","_event: Event","spanCounter: HTMLSpanElement","_mutation: MutationRecord","tableId","wekenMap: Map<string, Weken>","aanw: Aanwezigheid","infoBar: InfoBar","vaknaam: string","matches","mutation: MutationRecord","el: HTMLElement","name: string","matchingLeerlingen: MatchingLeerling[]","match","emailText: string","matchingLeerlingen","_mutation: MutationRecord","headerLabel: string","link: HTMLAnchorElement","longLabelPrefix: string","_changes: any","area: string","leerlingObserver","lessenObserver","lesObserver","academieObserver","werklijstObserver","tableObserver","vakgroepObserver","smsObserver","aanwezighedenObserver","afwezighedenObserver"],"sources":["../typescript/def.ts","../libs/Emmeter/tokenizer.ts","../libs/Emmeter/html.ts","../typescript/cloud.ts","../typescript/plugin_options/options.ts","../typescript/messaging.ts","../typescript/globals.ts","../typescript/gotoState.ts","../typescript/powerQuery/setupPowerQuery.ts","../typescript/pageObserver.ts","../typescript/leerling/observer.ts","../typescript/lessen/scrape.ts","../typescript/lessen/convert.ts","../typescript/lessen/build.ts","../typescript/filter.ts","../typescript/menus.ts","../typescript/lessen/filter.ts","../typescript/lessen/observer.ts","../typescript/les/observer.ts","../typescript/academie/observer.ts","../typescript/werklijst/buildUren.ts","../typescript/werklijst/scrapeUren.ts","../typescript/werklijst/criteria.ts","../typescript/werklijst/hoursSettings.ts","../typescript/werklijst/prefillInstruments.ts","../typescript/pageHandlers.ts","../typescript/table/tableNavigation.ts","../typescript/table/tableFetcher.ts","../typescript/table/observer.ts","../typescript/infoBar.ts","../typescript/progressBar.ts","../typescript/table/loadAnyTable.ts","../typescript/table/tableHeaders.ts","../typescript/werklijst/urenData.ts","../typescript/werklijst/observer.ts","../typescript/vakgroep/observer.ts","../typescript/verwittigen/observer.ts","../typescript/aanwezigheden/observer.ts","../typescript/afwezigheden/observer.ts","../typescript/pages/observer.ts","../typescript/main.ts"],"sourcesContent":["export const COPY_AGAIN = \"copy_again\";\r\nexport const PROGRESS_BAR_ID = \"progressBarFetch\";\r\nexport const UREN_PREV_BTN_ID = \"prefillInstrButton\";\r\nexport const UREN_PREV_SETUP_BTN_ID = \"prefillInstrSetupButton\";\r\nexport const UREN_NEXT_BTN_ID = \"prefillInstrButtonNext\";\r\nexport const UREN_NEXT_SETUP_BTN_ID = \"prefillInstrSetupButtonNext\";\r\nexport const MAIL_BTN_ID = \"mailButton\";\r\nexport const DOWNLOAD_TABLE_BTN_ID = \"downloadTableButton\";\r\nexport const COPY_TABLE_BTN_ID = \"copyTableButton\";\r\nexport const LESSEN_OVERZICHT_ID = \"lessen_overzicht\";\r\nexport const TRIM_BUTTON_ID = \"moduleButton\";\r\nexport const CHECKS_BUTTON_ID = \"checksButton\";\r\nexport const COUNT_BUTTON_ID = \"fetchAllButton\";\r\nexport const FULL_CLASS_BUTTON_ID = \"fullClassButton\";\r\nexport const TRIM_TABLE_ID = \"trimesterTable\";\r\nexport const COUNT_TABLE_ID = \"werklijst_uren\";\r\nexport const TRIM_DIV_ID = \"trimesterDiv\";\r\nexport const JSON_URL = \"https://europe-west1-ebo-tain.cloudfunctions.net/json\";\r\nexport const INFO_CONTAINER_ID =  \"dp3p_infoContainer\";\r\nexport const INFO_CACHE_ID =  \"dp3p_cacheInfo\";\r\nexport const INFO_TEMP_ID =  \"dp3_tempInfo\";\r\nexport const INFO_EXTRA_ID =  \"dp3_extraInfo\";\r\nexport const AANW_LIST =  \"aanwezighedenList\";\r\nexport const GLOBAL_SETTINGS_FILENAME =  \"global_settings.json\";\r\nexport const CACHE_DATE_SUFFIX = \"__date\";\r\nexport const POWER_QUERY_ID = \"savedPowerQuery\";\r\nexport const STORAGE_GOTO_STATE_KEY = \"gotoState\";\r\nexport const STORAGE_PAGE_SETTINGS_KEY_PREFIX = \"pageSettings_\";\r\nexport const UREN_TABLE_STATE_NAME = \"__uren__\";\r\nexport const CAN_SORT = \"canSort\";\r\nexport const NO_MENU = \"noMenu\";\r\nexport const LESSEN_TABLE_ID = \"table_lessen_resultaat_tabel\";\r\nexport const FILTER_INFO_ID = \"filterInfo\";\r\nexport const GLOBAL_COMMAND_BUFFER_KEY = \"globalCmdBuffer\";","export const CLOSING_BRACE = \"__CLOSINGBRACE__\";\r\nexport const DOUBLE_QUOTE = \"__DOUBLEQUOTE__\";\r\n\r\nexport const NBSP = 160;\r\n\r\nexport function tokenize(textToTokenize: string) {\r\n    let tokens: string[] = [];\r\n    let txt = textToTokenize.replaceAll(\"\\\\}\", CLOSING_BRACE).replaceAll('\\\\\"', DOUBLE_QUOTE);\r\n    let pos = 0;\r\n    let start = pos;\r\n\r\n    function pushToken() {\r\n        if (start != pos)\r\n            tokens.push(txt.substring(start, pos));\r\n        start = pos;\r\n    }\r\n\r\n    function getTo(to: string) {\r\n        pushToken();\r\n        do {\r\n            pos++;\r\n        } while (pos < txt.length && txt[pos] != to);\r\n        if (pos >= txt.length)\r\n            throw `Missing '${to}' at matching from pos ${start}.`;\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    function getChar() {\r\n        pushToken();\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    while (pos < txt.length) {\r\n        //only test for special chars. All others are assumed alphanumeric\r\n        switch (txt[pos]) {\r\n            case '{':\r\n                getTo(\"}\");\r\n                break;\r\n            case '\"':\r\n                getTo('\"');\r\n                break;\r\n            case '#':\r\n                pushToken();\r\n                pos++;\r\n                break;\r\n            case '>':\r\n            case '+':\r\n            case '[':\r\n            case ']':\r\n            case '(':\r\n            case ')':\r\n            case '*':\r\n            case '.':\r\n            case '=':\r\n                getChar();\r\n                break;\r\n            case ' ':\r\n                pushToken();\r\n                start = ++pos;\r\n                break;\r\n            default:\r\n                pos++;\r\n        }\r\n    }\r\n    pushToken();\r\n    return tokens;\r\n}","// noinspection JSUnusedGlobalSymbols\r\nimport {tokenize} from \"./tokenizer\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport let emmet = {\r\n    create,\r\n    append,\r\n    insertBefore,\r\n    insertAfter,\r\n    appendChild,\r\n    test: {\r\n        testEmmet,\r\n        tokenize,\r\n    }\r\n};\r\n\r\nexport interface AttDef {\r\n    name: string,\r\n    sub: string,\r\n    value: string\r\n}\r\n\r\nexport interface GroupDef {\r\n    count: number,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface ListDef {\r\n    list: EmmetNode[];\r\n}\r\n\r\nexport interface ElementDef {\r\n    tag: string,\r\n    id: string,\r\n    atts: AttDef[]\r\n    classList: string[],\r\n    innerText: string,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface TextDef {\r\n    text: string\r\n}\r\n\r\nexport type EmmetNode = GroupDef | ElementDef | ListDef | TextDef;\r\n\r\nlet nested: string[] = undefined;\r\nlet lastCreated: Element = undefined;\r\n\r\nfunction toSelector(node: EmmetNode) {\r\n    if(!('tag' in node)) {\r\n        throw \"TODO: not yet implemented.\";\r\n    }\r\n    let selector = \"\";\r\n    if(node.tag)\r\n        selector += node.tag;\r\n    if(node.id)\r\n        selector += \"#\" + node.id;\r\n    if(node.classList.length>0) {\r\n        selector += \".\" + node.classList.join(\".\");\r\n    }\r\n    return selector;\r\n}\r\n\r\nfunction create(text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let root = parse();\r\n    let parent = document.querySelector(toSelector(root)) as Element;\r\n    if(\"tag\" in root) {\r\n        root = root.child;\r\n    } else {\r\n        throw \"root should be a single element.\";\r\n    }\r\n    buildElement(parent, root, 1, onIndex, hook);\r\n    return {root: parent, last: lastCreated};\r\n}\r\n\r\nfunction append(root: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    return parseAndBuild(root, onIndex, hook);\r\n}\r\n\r\nfunction insertBefore(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforebegin\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAfter(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"afterend\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction appendChild(parent: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforeend\", parent, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAt(position: InsertPosition, target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let tempRoot = document.createElement(\"div\");\r\n    let result = parseAndBuild(tempRoot, onIndex, hook);\r\n    let first: Node = undefined;\r\n    let insertPos = target as Node;\r\n    let children = [...tempRoot.childNodes]; //we'll be removing children from tempRoot, so copy the list.\r\n    for(let child of children) {\r\n        if(!first) {\r\n            //first element should be inserted at the specified position\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                first = insertPos = insertAdjacentText(target, position, (child as Text).wholeText);\r\n            else\r\n                first = insertPos = target.insertAdjacentElement(position, child as Element);\r\n        } else {\r\n            //consequent children should be inserted after the previous one.\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                insertPos = insertPos.parentElement.insertBefore(document.createTextNode((child as Text).wholeText), insertPos.nextSibling);\r\n            else\r\n                insertPos = insertPos.parentElement.insertBefore(child, insertPos.nextSibling);\r\n        }\r\n    }\r\n    return {target, first, last: result.last};\r\n}\r\n\r\nfunction insertAdjacentText(target: Node, position: InsertPosition, text: string) {\r\n    switch(position) {\r\n        case \"beforebegin\": // Before the element itself.\r\n            return target.parentElement.insertBefore(document.createTextNode(text), target);\r\n        case \"afterbegin\": // Just inside the element, before its first child.\r\n            return target.insertBefore(document.createTextNode(text), target.firstChild);\r\n        case \"beforeend\": // Just inside the element, after its last child.\r\n            return target.appendChild(document.createTextNode(text));\r\n        case \"afterend\": // After the element itself.\r\n            return target.parentElement.appendChild(document.createTextNode(text));\r\n    }\r\n}\r\n\r\nfunction parseAndBuild(root: HTMLElement, onIndex: (index: number) => string, hook: (el: Element) => void) {\r\n    buildElement(root, parse(), 1, onIndex, hook);\r\n    return {root, last: lastCreated};\r\n}\r\n\r\nfunction testEmmet(text: string): EmmetNode {\r\n    nested = tokenize(text);\r\n    return parse();\r\n}\r\n\r\nfunction parse() {\r\n    return parsePlus() ;\r\n}\r\n\r\n//parse a+b+c>d...\r\nfunction parsePlus(): EmmetNode {\r\n    let list = [];\r\n    while(true) {\r\n        let el = parseMult();\r\n        if (!el)\r\n            return list.length===1 ? list[0] : {list};\r\n        list.push(el)\r\n        if(!match('+'))\r\n            return list.length===1 ? list[0] : {list};\r\n    }\r\n}\r\n\r\nfunction parseMult() : EmmetNode {\r\n    let el = parseElement();\r\n    if(!el)\r\n        return el;\r\n    if(match('*')) {\r\n        let count = parseInt(nested.shift());\r\n        //wrap el in a count group.\r\n        return  {\r\n            count,\r\n            child: el\r\n        };\r\n    } else {\r\n        return el;\r\n    }\r\n}\r\n\r\n// parse group or primary element (and children)\r\nfunction parseElement(): EmmetNode {\r\n    let el: EmmetNode;\r\n    if(match('(')) {\r\n        el = parsePlus();\r\n        if(!match(\")\"))\r\n            throw \"Expected ')'\";\r\n        return el;\r\n    } else {\r\n        let text = matchStartsWith('{');\r\n        if (text) {\r\n            text = stripStringDelimiters(text);\r\n            return <TextDef>{text};\r\n        } else {\r\n            return parseChildDef();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction parseChildDef(): ElementDef {\r\n    let tag = nested.shift();\r\n    let id = undefined;\r\n    let atts: AttDef[] = [];\r\n    let classList: string[] = [];\r\n    let text = undefined;\r\n\r\n    while(nested.length) {\r\n        if (match('.')) {\r\n            let className = nested.shift();\r\n            if(!className)\r\n                throw \"Unexpected end of stream. Class name expected.\";\r\n            classList.push(className);\r\n        } else if (match('[')) {\r\n            atts = getAttributes();\r\n        } else {\r\n            let token = matchStartsWith('#');\r\n            if(token) {\r\n                id = token.substring(1);\r\n            } else {\r\n                let token = matchStartsWith('{')\r\n                if (token) {\r\n                    text = stripStringDelimiters(token);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {tag, id, atts, classList, innerText: text, child: parseDown()};\r\n}\r\n\r\n// parse >...\r\nfunction parseDown() : EmmetNode {\r\n    if(match('>')) {\r\n        return parsePlus();\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getAttributes() {\r\n    //gather all the attributes\r\n    let tokens: string[] = [];\r\n    while(nested.length) {\r\n        let prop = nested.shift();\r\n        if(prop == ']')\r\n            break;\r\n        tokens.push(prop);\r\n    }\r\n\r\n    let attDefs: AttDef[] = [];\r\n\r\n    while(tokens.length) {\r\n        let name = tokens.shift();\r\n        let eq = tokens.shift();\r\n        let sub = \"\";\r\n        if(eq === '.') {\r\n            sub = tokens.shift();\r\n            eq = tokens.shift();\r\n        }\r\n        if (eq != '=') {\r\n            throw \"Equal sign expected.\";\r\n        }\r\n        let value = tokens.shift();\r\n        if(value[0] === '\"') {\r\n            value = stripStringDelimiters(value);\r\n        }\r\n        if (!value)\r\n            throw \"Value expected.\";\r\n            attDefs.push({name, sub, value});\r\n        if(!tokens.length)\r\n            break;\r\n    }\r\n    return attDefs;\r\n}\r\n\r\nfunction match(expected: string) {\r\n    let next = nested.shift();\r\n    if(next === expected)\r\n        return true;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return false;\r\n}\r\n\r\nfunction matchStartsWith(expected: string) {\r\n    let next = nested.shift();\r\n    if(next.startsWith(expected))\r\n        return next;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return undefined;\r\n}\r\n\r\nfunction stripStringDelimiters(text: string) {\r\n    if(text[0] === \"'\" || text[0] === '\"' || text[0] === '{')\r\n        return text.substring(1, text.length-1);\r\n    return text;\r\n}\r\n\r\n//CREATION\r\nfunction createElement(parent: Element, def: ElementDef, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    let el = parent.appendChild(document.createElement(def.tag));\r\n    if (def.id)\r\n        el.id = addIndex(def.id, index, onIndex);\r\n    for(let clazz of def.classList) {\r\n        el.classList.add(addIndex(clazz, index, onIndex));\r\n    }\r\n    for (let att of def.atts) {\r\n        if (att.sub)\r\n            el[addIndex(att.name, index, onIndex)][addIndex(att.sub, index, onIndex)] = addIndex(att.value, index, onIndex);\r\n        else {\r\n            el.setAttribute(addIndex(att.name, index, onIndex), addIndex(att.value, index, onIndex));\r\n        }\r\n    }\r\n    if(def.innerText) {\r\n        el.appendChild(document.createTextNode(addIndex(def.innerText, index, onIndex)));\r\n    }\r\n    lastCreated = el;\r\n    if(hook)\r\n        hook(el);\r\n    return el;\r\n}\r\n\r\nfunction buildElement(parent: Element, el: EmmetNode, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    if(\"tag\" in el) { //ElementDef\r\n        let created = createElement(parent, el, index, onIndex, hook);\r\n        if(el.child)\r\n            buildElement(created, el.child, index, onIndex, hook);\r\n        return;\r\n    }\r\n    if(\"list\" in el) { //ListDef\r\n        for( let def of el.list) {\r\n            buildElement(parent, def, index, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"count\" in el) { //GroupDef\r\n        for(let i = 0; i < el.count; i++) {\r\n            buildElement(parent, el.child, i, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"text\" in el) { //TextDef\r\n        parent.appendChild(document.createTextNode(addIndex(el.text, index, onIndex)));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction addIndex(text: string, index: number, onIndex: (index: number) => string) {\r\n    if(onIndex) {\r\n        let result = onIndex(index);\r\n        text = text.replace(\"$$\", result);\r\n    }\r\n    return text.replace(\"$\", (index+1).toString());\r\n}","import * as def from \"./def\";\r\n\r\nexport let cloud = {\r\n    json: {\r\n        fetch: fetchJson,\r\n        upload: uploadJson\r\n    }\r\n};\r\n\r\nasync function fetchJson(fileName: string) {\r\n    return fetch(def.JSON_URL + \"?fileName=\"+fileName, {method: \"GET\"})\r\n        .then((res) => res.json());\r\n}\r\n\r\nasync function uploadJson(fileName: string, data: any) {\r\n    let res = await fetch(def.JSON_URL + \"?fileName=\" + fileName, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        keepalive: true, //keeps the data valid even if window is closing.\r\n    });\r\n    return await res.text();\r\n}","import {cloud} from \"../cloud\";\r\nimport {GLOBAL_SETTINGS_FILENAME} from \"../def\";\r\n\r\nexport type Options = {\r\n    showNotAssignedClasses: boolean;\r\n    showTableHeaders: boolean;\r\n    markOtherAcademies: boolean;\r\n    myAcademies: string;\r\n    showDebug: boolean;\r\n};\r\n\r\nexport const options: Options = {\r\n    myAcademies: \"\",\r\n    showNotAssignedClasses: true,\r\n    showTableHeaders: true,\r\n    markOtherAcademies: true,\r\n    showDebug: false\r\n};\r\n\r\nexport function defineHtmlOptions() {\r\n    defineHtmlOption(\"showNotAssignedClasses\", 'checked', \"Toon arcering voor niet toegewezen klassikale lessen.\", \"block1\");\r\n    defineHtmlOption(\"showTableHeaders\", 'checked', \"Toon keuzemenus in tabelhoofding.\", \"block1\");\r\n    defineHtmlOption(\"markOtherAcademies\", 'checked', \"Toon arcering voor 'andere' academies.\", \"block1\");\r\n    defineHtmlOption(\"myAcademies\", 'value', undefined, undefined);\r\n    defineHtmlOption(\"showDebug\", 'checked', \"Show debug info in console.\", \"block3\");\r\n}\r\n\r\ntype OptionDef = {\r\n    id: string,\r\n    property: string,\r\n    label: string,\r\n    blockId: string\r\n}\r\n\r\nexport let htmlOptionDefs = new Map<string, OptionDef>();\r\n\r\nexport function defineHtmlOption(id: string, property: string, label: string, blockId: string) {\r\n    htmlOptionDefs.set(id, {id, property, label, blockId});\r\n\r\n}\r\n\r\nexport interface GlobalSettings {\r\n    globalHide: boolean\r\n}\r\n\r\nexport let globalSettings: GlobalSettings = {\r\n    globalHide: false\r\n}\r\n\r\nexport function getGlobalSettings() {\r\n    return globalSettings;\r\n}\r\n\r\nexport function setGlobalSetting(settings: GlobalSettings) {\r\n    globalSettings = settings;\r\n}\r\n\r\nexport async function saveGlobalSettings(globalSettings: GlobalSettings) {\r\n    return cloud.json.upload(GLOBAL_SETTINGS_FILENAME, globalSettings);\r\n}\r\n\r\nexport async function fetchGlobalSettings(defaultSettings: GlobalSettings) {\r\n    return await cloud.json.fetch(GLOBAL_SETTINGS_FILENAME)\r\n        .catch(err => {\r\n            console.log(err);\r\n            return defaultSettings;\r\n        }) as GlobalSettings;\r\n}\r\n\r\n","export enum Actions {\r\n    OpenHtmlTab = \"open_tab\",\r\n    GetTabData = \"get_tab_data\",\r\n    GetParentTabId = \"get_parent_tab_id\",\r\n    OpenHoursSettings = \"open_hours_settings\",\r\n    HoursSettingsChanged = \"open_hours_settings_changed\",\r\n    GreetingsFromParent = \"greetingsFromParent\",\r\n    GreetingsFromChild = \"greetingsFromChild\",\r\n}\r\n\r\nexport enum TabType {Undefined, Main, HoursSettings, Html}\r\n\r\nexport interface ServiceRequest {\r\n    action: Actions,\r\n    senderTabType: TabType,\r\n    targetTabType: TabType,\r\n    data: any,\r\n    pageTitle?: string,\r\n    senderTabId?: number,\r\n    targetTabId?: number,\r\n}\r\n\r\nexport function sendRequest(action: Actions, from: TabType, to: TabType,  toId: number, data: any, pageTitle?: string) {\r\n    let req: ServiceRequest = {\r\n        action,\r\n        data,\r\n        pageTitle,\r\n        senderTabType: from,\r\n        targetTabType: to,\r\n        targetTabId: toId,\r\n    };\r\n    return chrome.runtime.sendMessage(req);\r\n}\r\n\r\nexport interface ServiceResponse {\r\n    result: any,\r\n    error: string,\r\n}\r\n\r\nexport async function sendGetDataRequest(sender: TabType) {\r\n    let tab = await chrome.tabs.getCurrent();\r\n    return await sendRequest(Actions.GetTabData, sender, TabType.Undefined, undefined, {tabId: tab.id});\r\n}\r\n\r\nexport type MessageHandler = {\r\n    getListener: () => (request: ServiceRequest, _sender, _sendResponse) => void;\r\n    onMessageForMyTabType: (callback: (msg: ServiceRequest) => void) => MessageHandler;\r\n    onMessageForMe: (callback: (msg: ServiceRequest) => void) => MessageHandler;\r\n    onData: (callback: (data: any) => void) => MessageHandler;\r\n}\r\n\r\nexport interface InternalMessageHandler extends MessageHandler {\r\n    _onMessageForMyTabType(request: ServiceRequest): void;\r\n    _onMessageForMe(request: ServiceRequest): void;\r\n    _onData(data: any): void;\r\n}\r\n\r\nexport function createMessageHandler(tabType: TabType): MessageHandler {\r\n    let handler:InternalMessageHandler = {\r\n        getListener: function () {\r\n            let self: InternalMessageHandler = this;\r\n            return async function onMessage(request: ServiceRequest, _sender, _sendResponse) {\r\n                console.log(`blank received: `, request);\r\n                if (request.targetTabType === tabType) {\r\n                    self._onMessageForMyTabType?.(request);\r\n                    let tab = await chrome.tabs.getCurrent();\r\n                    if (request.targetTabId === tab.id) {\r\n                        self._onMessageForMe?.(request)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onMessageForMyTabType: function (callback: (msg: ServiceRequest) => void): MessageHandler {\r\n            this._onMessageForMyTabType = callback;\r\n            return this;\r\n        },\r\n        onMessageForMe: function (callback: (msg: ServiceRequest) => void): MessageHandler {\r\n            this._onMessageForMe = callback;\r\n            return this;\r\n        },\r\n        onData: function (callback: (data: any) => void): MessageHandler {\r\n            this._onData = callback;\r\n            return this;\r\n        },\r\n        _onMessageForMyTabType: undefined,\r\n        _onMessageForMe: undefined,\r\n        _onData: undefined\r\n    };\r\n    document.addEventListener(\"DOMContentLoaded\", async () => {\r\n        let res = await sendGetDataRequest(tabType);\r\n        handler._onData?.(res);\r\n    });\r\n    return handler;\r\n}","import {Observer} from \"./pageObserver\";\r\nimport * as def from \"./def\";\r\nimport {emmet} from \"../libs/Emmeter/html\";\r\nimport {PageName} from \"./gotoState\";\r\nimport {PageSettings} from \"./lessen/build\";\r\nimport {fetchGlobalSettings, getGlobalSettings, GlobalSettings, options, setGlobalSetting} from \"./plugin_options/options\";\r\nimport {Actions, sendRequest, ServiceRequest, TabType} from \"./messaging\";\r\n\r\nimport {TeacherHoursSetup} from \"./werklijst/hoursSettings\";\r\n\r\nexport let observers: Observer[] = [];\r\nexport let settingsObservers: (() => void)[] = [];\r\n\r\nexport function db3(message: any) {\r\n    if (options?.showDebug) {\r\n        console.log(message);\r\n        console.log(Error().stack.split(\"\\n\")[2]);\r\n    }\r\n}\r\n\r\nexport function createValidId(id: string) {\r\n    return id\r\n        .replaceAll(\" \", \"\")\r\n        .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .replace(/\\W/g,'');\r\n}\r\n\r\n\r\nexport function registerObserver(observer: Observer) {\r\n    observers.push(observer);\r\n    if(observers.length > 20) //just in case...\r\n        console.error(\"Too many observers!\");\r\n}\r\n\r\nexport function registerSettingsObserver(observer: () => void) {\r\n    settingsObservers.push(observer);\r\n    if(settingsObservers.length > 20) //just in case...\r\n        console.error(\"Too many settingsObservers!\");\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function searchText(text: string) {\r\n    let input: HTMLInputElement = document.querySelector(\"#snel_zoeken_veld_zoektermen\");\r\n    input.value = text;\r\n    // noinspection JSDeprecatedSymbols\r\n    let evUp = new KeyboardEvent(\"keyup\", {\r\n        key: \"Enter\",\r\n        code: \"Enter\",\r\n        keyCode: 13, //deprecated, but DKO3 still checks for this!\r\n        bubbles: true});\r\n    input.dispatchEvent(evUp);\r\n}\r\n\r\nexport function setButtonHighlighted(buttonId: string, show: boolean) {\r\n    if (show) {\r\n        document.getElementById(buttonId).classList.add(\"toggled\");\r\n    } else {\r\n        document.getElementById(buttonId).classList.remove(\"toggled\");\r\n    }\r\n}\r\n\r\nexport function addButton(targetElement: HTMLElement, buttonId: string, title: string, clickFunction: (ev:PointerEvent) => void, imageId: string, classList: string[], text = \"\", where: InsertPosition = \"beforebegin\") {\r\n    let button = document.getElementById(buttonId);\r\n    if (button === null) {\r\n        const button = document.createElement(\"button\");\r\n        button.classList.add(\"btn\"/*, \"btn-sm\", \"btn-outline-secondary\", \"w-100\"*/, ...classList);\r\n        button.id = buttonId;\r\n        button.style.marginTop = \"0\";\r\n        button.onclick = clickFunction;\r\n        button.title = title;\r\n        if(text) {\r\n            let span = document.createElement(\"span\");\r\n            button.appendChild(span);\r\n            span.innerText = text;\r\n        }\r\n        const buttonContent = document.createElement(\"i\");\r\n        button.appendChild(buttonContent);\r\n        if(imageId)\r\n            buttonContent.classList.add(\"fas\", imageId);\r\n        targetElement.insertAdjacentElement(where, button);\r\n    }\r\n}\r\n\r\nexport function getSchooljaarSelectElement() {\r\n    let selects = document.querySelectorAll(\"select\");\r\n    return Array.from(selects)\r\n        .filter((element) => element.id.includes(\"schooljaar\"))\r\n        .pop();\r\n}\r\n\r\nexport function getHighestSchooljaarAvailable() {\r\n    let el = getSchooljaarSelectElement();\r\n    if(!el)\r\n        return undefined;\r\n    return Array.from(el.querySelectorAll(\"option\"))\r\n        .map(option => option.value)\r\n        .sort()\r\n        .pop();\r\n}\r\n\r\n//Tries to return \"202x-202y\".\r\nexport function findSchooljaar() {\r\n    let el = getSchooljaarSelectElement();\r\n    if(el)\r\n        return el.value;\r\n    el = document.querySelector(\"div.alert-primary\");\r\n    return el.textContent.match(/schooljaar *= (\\d{4}-\\d{4})*/)[1];\r\n}\r\n\r\nexport function calculateSchooljaar() {\r\n    let now = new Date();\r\n    let year = now.getFullYear();\r\n    let month = now.getMonth();\r\n    if(month < 8) //zero-based juli !\r\n        return year-1; //schoolyear started last year.\r\n    return year;\r\n}\r\n\r\nexport function createSchoolyearString(startYear: number) {\r\n    return `${startYear}-${startYear+1}`;\r\n}\r\n\r\nexport function createShortSchoolyearString(startYear: number) {\r\n    return `${startYear%1000}-${(startYear%1000)+1}`;\r\n}\r\n\r\nexport function getUserAndSchoolName() {\r\n    let footer = document.querySelector(\"body > main > div.row > div.col-auto.mr-auto > small\");\r\n    const reInstrument = /.*Je bent aangemeld als (.*)\\s@\\s(.*)\\./;\r\n    const match = footer.textContent.match(reInstrument);\r\n    if (match?.length !== 3) {\r\n        throw new Error(`Could not process footer text \"${footer.textContent}\"`);\r\n    }\r\n    let userName = match[1];\r\n    let schoolName = match[2];\r\n    return {userName, schoolName};\r\n}\r\n\r\nexport function getSchoolIdString() {\r\n    let {schoolName} = getUserAndSchoolName();\r\n    schoolName = schoolName\r\n        .replace(\"Academie \", \"\")\r\n        .replace(\"Muziek\", \"M\")\r\n        .replace(\"Woord\", \"W\")\r\n        .toLowerCase();\r\n    return createValidId(schoolName);\r\n}\r\n\r\nexport function millisToString(duration: number) {\r\n    let seconds = Math.floor((duration / 1000) % 60);\r\n    let minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n    let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n    let days = Math.floor((duration / (1000 * 60 * 60 * 24)));\r\n\r\n    if (days > 0)\r\n        return days + (days === 1 ? \" dag\" : \" dagen\");\r\n    else if (hours > 0)\r\n        return hours + \" uur\";\r\n    else if (minutes > 0)\r\n        return minutes + (minutes === 1 ? \" minuut\" : \" minuten\");\r\n    else if (seconds > 0)\r\n        return seconds + \" seconden\";\r\n    else return \"\";\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n\r\nexport function isAlphaNumeric(str: string) {\r\n    if (str.length > 1)\r\n        return false;\r\n    let code: number;\r\n    let i: number;\r\n    let len: number;\r\n\r\n    for (i = 0, len = str.length; i < len; i++) {\r\n        code = str.charCodeAt(i);\r\n        if (!(code > 47 && code < 58) && // numeric (0-9)\r\n            !(code > 64 && code < 91) && // upper alpha (A-Z)\r\n            !(code > 96 && code < 123)) { // lower alpha (a-z)\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function rangeGenerator(start: number, stop: number, step = 1): number[] {\r\n    return Array(Math.ceil((stop - start) / step)).fill(start).map((x, y) => x + y * step);\r\n}\r\n\r\nexport function createSearchField(id: string, onSearchInput: (ev: Event) => any, value: string) {\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"text\";\r\n    input.id = id;\r\n    input.classList.add(\"tableFilter\");\r\n    input.oninput = onSearchInput;\r\n    input.value = value;\r\n    input.placeholder = \"filter\";\r\n    let span = document.createElement(\"span\");\r\n    span.classList.add(\"searchButton\");\r\n    span.appendChild(input);\r\n    let { first: clearButton } = emmet.appendChild(span, `button>img[src=\"${chrome.runtime.getURL(\"images/circle-xmark-regular.svg\")}\"`);\r\n    (clearButton as HTMLElement).onclick = () => {\r\n        input.value = \"\";\r\n        input.oninput(undefined);\r\n        input.focus();\r\n    };\r\n    return span;\r\n}\r\n\r\nexport function getBothToolbars() {\r\n    let navigationBars = document.querySelectorAll(\"div.datatable-navigation-toolbar\"); // as HTMLElement;\r\n    if (navigationBars.length < 2)\r\n        return undefined; //wait for top and bottom bars.\r\n    return navigationBars;\r\n}\r\n\r\nexport function addTableNavigationButton(navigationBars: NodeListOf<Element>, btnId: string, title: string, onClick: any, fontIconId: string) {\r\n    addButton(navigationBars[0].lastElementChild as HTMLElement, btnId, title, onClick, fontIconId, [\"btn-secondary\"], \"\", \"afterend\");\r\n    return true;\r\n}\r\n\r\nexport function distinct<Type>(array: Type[]): Type[] {\r\n    return [...new Set(array)];\r\n}\r\n\r\nexport async function fetchStudentsSearch(search: string) {\r\n    return fetch(\"/view.php?args=zoeken?zoek=\" + encodeURIComponent(search))\r\n        .then((response) => response.text())\r\n        .then((_text) => fetch(\"/views/zoeken/index.view.php\"))\r\n        .then((response) => response.text())\r\n        .catch(err => {\r\n            console.error('Request failed', err);\r\n            return \"\";\r\n        });\r\n}\r\n\r\nexport async function setViewFromCurrentUrl() {\r\n    let hash = window.location.hash.replace(\"#\", \"\");\r\n    await fetch(\"https://administratie.dko3.cloud/#\" + hash).then(res => res.text());\r\n    // call to changeView() - assuming this is always the same, so no parsing here.\r\n    await fetch(\"view.php?args=\" + hash).then(res => res.text());\r\n}\r\n\r\nexport function equals(g1: GlobalSettings, g2: GlobalSettings){\r\n    return (\r\n        g1.globalHide === g2.globalHide\r\n    );\r\n}\r\n\r\nexport let rxEmail = /\\w[\\w.\\-]*\\@\\w+\\.\\w+/gm;\r\n\r\nexport function whoAmI() {\r\n    let allScripts = document.querySelectorAll(\"script\");\r\n    let scriptTexts = [...allScripts].map(s => s.textContent).join();\r\n    let email = scriptTexts.match(rxEmail)[0];\r\n    let rxName = /name: '(.*)'/;\r\n    let name = scriptTexts.match(rxName)[1];\r\n    return {email, name};\r\n}\r\n\r\nexport function stripStudentName(name: string): string {\r\n    return name.replaceAll(/[,()'-]/g, \" \").replaceAll(\"  \", \" \");\r\n}\r\n\r\nexport async function openHtmlTab(innerHtml: string, pageTitle: string) {\r\n    return sendRequest(Actions.OpenHtmlTab, TabType.Main, TabType.Html, undefined, innerHtml, pageTitle);\r\n}\r\n\r\nexport async function openHoursSettings(data: TeacherHoursSetup) {\r\n    return sendRequest(Actions.OpenHoursSettings, TabType.Main, TabType.Undefined, undefined, data, \"Lerarenuren setup\");\r\n}\r\n\r\nexport function writeTableToClipboardForExcel(table: HTMLTableElement) {\r\n    let html = table.outerHTML\r\n        .replaceAll('\\n','<br style=\"mso-data-placement:same-cell;\"/>')  // new lines inside html cells => Alt+Enter in Excel\r\n        .replaceAll('<td','<td style=\"vertical-align: top;\"');  // align top\r\n    return navigator.clipboard.writeText(html);\r\n}\r\n\r\nexport function createTable(headers: Iterable<string>, cols: Iterable<Iterable<string>>) {\r\n    let tmpDiv = document.createElement(\"div\");\r\n    let {first: tmpTable, last: tmpThead} = emmet.appendChild(tmpDiv, \"table>thead\");\r\n    for (let th of headers) {\r\n        emmet.appendChild(tmpThead as HTMLElement, `th{${th}}`);\r\n    }\r\n    let tmpTbody = tmpTable.appendChild(document.createElement(\"tbody\"));\r\n    for (let tr of cols) {\r\n        let tmpTr = tmpTbody.appendChild(document.createElement(\"tr\"));\r\n        for (let cell of tr) {\r\n            emmet.appendChild(tmpTr, `td{${cell}}`);\r\n        }\r\n    }\r\n    return tmpTable as HTMLTableElement;\r\n}\r\n\r\nexport type ResultOk<T> = {\r\n    result: T\r\n}\r\n\r\nexport type ResultFail = {\r\n    error: NonNullable<string>\r\n}\r\n\r\ntype Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\r\ntype XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;\r\n\r\nexport type Result<T> = XOR<ResultOk<T>,ResultFail>\r\n\r\nexport function isButtonHighlighted(buttonId: string) {\r\n    return document.getElementById(buttonId)?.classList.contains(\"toggled\");\r\n}\r\n\r\nexport function range(startAt: number, upTo: number) {\r\n    if (upTo > startAt)\r\n        return [...Array(upTo - startAt).keys()].map(n => n + startAt);\r\n    else\r\n        return [...Array(startAt - upTo).keys()].reverse().map(n => n + upTo + 1);\r\n}\r\n\r\nexport function getPageSettings(pageName: PageName, defaultSettings: PageSettings): PageSettings {\r\n    let storedState = localStorage.getItem(def.STORAGE_PAGE_SETTINGS_KEY_PREFIX + pageName);\r\n    if (storedState)\r\n        return JSON.parse(storedState);\r\n    return defaultSettings;\r\n}\r\n\r\nexport function savePageSettings(state: PageSettings) {\r\n    localStorage.setItem(def.STORAGE_PAGE_SETTINGS_KEY_PREFIX + state.pageName, JSON.stringify(state));\r\n}\r\n\r\nlet globalTransientPageState: Map<string, any> = new Map();\r\n\r\nexport function getPageTransientStateValue(key: string, defaultValue: any) {\r\n    let value =  globalTransientPageState.get(key);\r\n    return value ? value : setPageTransientStateValue(key, defaultValue);\r\n}\r\n\r\nexport function setPageTransientStateValue(key:string, transientState: object){\r\n    globalTransientPageState.set(key, transientState);\r\n    return transientState;\r\n}\r\nexport function clearPageTransientState() {\r\n    globalTransientPageState.clear();\r\n}\r\n\r\nexport async function getOptions() {\r\n    // xxx @ts-ignore\r\n    let items = await chrome.storage.sync.get(null); //get all\r\n    // xxx @ts-ignore\r\n    Object.assign(options, items);\r\n    setGlobalSetting(await fetchGlobalSettings(getGlobalSettings()));\r\n}","import * as def from \"./def\";\r\n\r\nexport function clearGotoState() {\r\n    sessionStorage.removeItem(def.STORAGE_GOTO_STATE_KEY);\r\n}\r\n\r\nexport function saveGotoState(state: GotoState) {\r\n    sessionStorage.setItem(def.STORAGE_GOTO_STATE_KEY, JSON.stringify(state));\r\n}\r\n\r\nexport function getGotoState(): GotoState {\r\n    return JSON.parse(sessionStorage.getItem(def.STORAGE_GOTO_STATE_KEY));\r\n}\r\n\r\nfunction defaultGotoState(pageName: PageName) {\r\n    let pageState = <GotoState> {\r\n        goto: Goto.None,\r\n        pageName,\r\n    };\r\n    if (pageName === PageName.Werklijst) {\r\n        return <WerklijstGotoState> { werklijstTableName: \"\", ...pageState };\r\n    }\r\n    return pageState;\r\n}\r\n\r\nexport function getGotoStateOrDefault(pageName: PageName): GotoState {\r\n    let pageState = JSON.parse(sessionStorage.getItem(def.STORAGE_GOTO_STATE_KEY));\r\n    if (pageState?.pageName === pageName)\r\n        return pageState;\r\n    else\r\n        return defaultGotoState(pageName);\r\n}\r\n\r\nexport enum PageName {\r\n    Werklijst = \"Werklijst\",\r\n    Lessen = \"Lessen\",\r\n}\r\n\r\nexport enum Goto {\r\n    None = \"\",\r\n    Werklijst_uren_nextYear = \"Werklijst_uren_nextYear\",\r\n    Werklijst_uren_prevYear = \"Werklijst_uren_prevYear\",\r\n    Lessen_trimesters_set_filter = \"Lessen_trimesters_set_filter\",\r\n    Lessen_trimesters_show = \"Lessen_trimesters_show\",\r\n}\r\n\r\nexport interface GotoState {\r\n    pageName: PageName;\r\n    goto: Goto;\r\n}\r\n\r\nexport interface WerklijstGotoState extends GotoState {\r\n    werklijstTableName: string;\r\n}","import {calculateSchooljaar, clamp, createShortSchoolyearString, isAlphaNumeric, openHtmlTab} from \"../globals\";\r\nimport * as def from \"../def\";\r\nimport {getGotoStateOrDefault, Goto, PageName, saveGotoState} from \"../gotoState\";\r\nimport {default_items as defaultQueryItems } from \"default_items\";\r\nimport {Actions} from \"../messaging\";\r\nexport function setupPowerQuery() {\r\n    //dummy function to force this module to be loaded.\r\n}\r\n\r\nlet powerQueryItems: QueryItem[] = [];\r\n\r\nlet popoverVisible = false;\r\nlet selectedItem = 0;\r\ntype GotoFunc = (queryItem: QueryItem) => void;\r\n\r\nexport interface QueryItem {\r\n    headerLabel: string;\r\n    label: string;\r\n    href: string;\r\n    weight: number;\r\n    longLabel: string;\r\n    lowerCase: string;\r\n    func?: GotoFunc;\r\n}\r\n\r\nexport function addQueryItem(headerLabel: string, label: string, href: string, func?: GotoFunc, longLabelText?: string){\r\n    powerQueryItems.push(createQueryItem(headerLabel, label, href, func, longLabelText));\r\n}\r\n\r\nexport function createQueryItem(headerLabel: string, label: string, href: string, func?: GotoFunc, longLabelText?: string){\r\n    let longLabel = longLabelText ?? headerLabel + \" > \" + label;\r\n    return <QueryItem>{\r\n        headerLabel,\r\n        label,\r\n        href,\r\n        weight: 0,\r\n        longLabel,\r\n        lowerCase: longLabel.toLowerCase(),\r\n        func\r\n    };\r\n}\r\n\r\nexport function saveQueryItems(page: string, queryItems: QueryItem[]) {\r\n    let savedPowerQueryString = localStorage.getItem(def.POWER_QUERY_ID);\r\n    if(!savedPowerQueryString) {\r\n        savedPowerQueryString = \"{}\";\r\n    }\r\n    let savedPowerQuery = JSON.parse(savedPowerQueryString);\r\n    savedPowerQuery[page] = queryItems;\r\n    localStorage.setItem(def.POWER_QUERY_ID, JSON.stringify(savedPowerQuery));\r\n}\r\n\r\nfunction getSavedAndDefaultQueryItems(): QueryItem[] {\r\n    let savedPowerQuery = {};\r\n    let allItems = [];\r\n    let savedPowerQueryString = localStorage.getItem(def.POWER_QUERY_ID);\r\n    if(savedPowerQueryString) {\r\n        savedPowerQuery = JSON.parse(savedPowerQueryString);\r\n    }\r\n\r\n    //merge saved pages and default pages.\r\n    let mergedPages = {...defaultQueryItems};\r\n    for(let page in savedPowerQuery) {\r\n        mergedPages[page] = savedPowerQuery[page];\r\n    }\r\n\r\n    for(let page in mergedPages) {\r\n        allItems.push(...mergedPages[page]);\r\n    }\r\n    return allItems;\r\n}\r\n\r\nfunction screpeDropDownMenu(headerMenu: Element) {\r\n    let headerLabel = headerMenu.querySelector(\"a\").textContent.trim();\r\n\r\n    Array.from(headerMenu.querySelectorAll(\"div.dropdown-menu > a\") as NodeListOf<HTMLAnchorElement>)\r\n        .map((item) => {\r\n            return {\r\n                label:  item.textContent.trim(),\r\n                href: item.href\r\n            };\r\n        })\r\n        .filter((item) => item.label != \"\" && item.href != \"\" && item.href != \"https://administratie.dko3.cloud/#\")\r\n        .forEach(item => addQueryItem(headerLabel, item.label, item.href, undefined));\r\n}\r\n\r\nfunction scrapeMainMenu() {\r\n    powerQueryItems = [];\r\n    let menu = document.getElementById(\"dko3_navbar\");\r\n    let headerMenus = menu.querySelectorAll(\"#dko3_navbar > ul.navbar-nav > li.nav-item.dropdown\");\r\n    for(let headerMenu of headerMenus.values()) {\r\n        screpeDropDownMenu(headerMenu);\r\n    }\r\n}\r\n\r\nfunction gotoWerklijstUrenNextYear(_queryItem: QueryItem) {\r\n    let pageState = getGotoStateOrDefault(PageName.Werklijst);\r\n    pageState.goto = Goto.Werklijst_uren_nextYear;\r\n    saveGotoState(pageState);\r\n    location.href = \"/#leerlingen-werklijst\";\r\n}\r\n\r\nfunction gotoWerklijstUrenPrevYear(_queryItem: QueryItem) {\r\n    let pageState = getGotoStateOrDefault(PageName.Werklijst);\r\n    pageState.goto = Goto.Werklijst_uren_prevYear;\r\n    saveGotoState(pageState);\r\n    location.href = \"/#leerlingen-werklijst\";\r\n}\r\n\r\nfunction gotoTrimesterModules(_queryItem: QueryItem) {\r\n    let pageState = getGotoStateOrDefault(PageName.Lessen);\r\n    pageState.goto = Goto.Lessen_trimesters_set_filter;\r\n    saveGotoState(pageState);\r\n    location.href = \"/#lessen-overzicht\";\r\n}\r\n\r\nfunction getHardCodedQueryItems() {\r\n    addQueryItem(\"Werklijst\", \"Lerarenuren \" +createShortSchoolyearString(calculateSchooljaar()), \"\", gotoWerklijstUrenPrevYear);\r\n    addQueryItem(\"Werklijst\", \"Lerarenuren \" +createShortSchoolyearString(calculateSchooljaar()+1), \"\", gotoWerklijstUrenNextYear);\r\n    addQueryItem(\"Lessen\", \"Trimester modules\", \"\", gotoTrimesterModules);\r\n}\r\n\r\ndocument.body.addEventListener(\"keydown\", showPowerQuery);\r\n\r\nfunction showPowerQuery(ev: KeyboardEvent) {\r\n    if (ev.key === \"q\" && ev.ctrlKey && !ev.shiftKey && !ev.altKey) {\r\n        scrapeMainMenu();\r\n        powerQueryItems.push(...getSavedAndDefaultQueryItems());\r\n        getHardCodedQueryItems();\r\n        popover.showPopover();\r\n    } else {\r\n        if (popoverVisible === false)\r\n            return;\r\n        if (isAlphaNumeric(ev.key) || ev.key === ' ') {\r\n            searchField.textContent += ev.key;\r\n            selectedItem = 0; //back to top.\r\n        } else if (ev.key == \"Escape\") {\r\n            if(searchField.textContent !== \"\") {\r\n                searchField.textContent = \"\";\r\n                selectedItem = 0;\r\n                ev.preventDefault();\r\n            }\r\n            //else: default behaviour: close popup.\r\n        } else if (ev.key == \"Backspace\") {\r\n            searchField.textContent = searchField.textContent.slice(0, -1);\r\n        } else if (ev.key == \"ArrowDown\") {\r\n            selectedItem++;\r\n            ev.preventDefault();\r\n        } else if (ev.key == \"ArrowUp\") {\r\n            selectedItem--;\r\n            ev.preventDefault();\r\n        } else if (ev.key == \"Enter\") {\r\n            let selectedDiv = list.children[selectedItem] as HTMLElement;\r\n            onItemSelected(selectedDiv);\r\n            ev.preventDefault();\r\n        }\r\n    }\r\n    filterItems(searchField.textContent);\r\n}\r\n\r\nlet popover = document.createElement(\"div\");\r\ndocument.querySelector(\"main\").appendChild(popover);\r\npopover.setAttribute(\"popover\", \"auto\");\r\npopover.id = \"powerQuery\";\r\npopover.addEventListener(\"toggle\", (ev) => {\r\n    // @ts-ignore\r\n    popoverVisible = ev.newState === \"open\";\r\n});\r\nlet searchField = document.createElement(\"label\");\r\npopover.appendChild(searchField);\r\nlet list = document.createElement(\"div\");\r\npopover.appendChild(list);\r\nlist.classList.add(\"list\");\r\n\r\nfunction filterItems(needle: string) {\r\n    for (const item of powerQueryItems) {\r\n        item.weight = 0;\r\n        //exact match\r\n        if (item.lowerCase.includes(needle))\r\n            item.weight += 1000;\r\n\r\n        //exact match of each word in needle.\r\n        let needleWordsWithSeparator = needle.split(/(?= )/g);\r\n        if (needleWordsWithSeparator.every(word => item.lowerCase.includes(word)))\r\n            item.weight += 500;\r\n\r\n        //all chars match  in order\r\n        let indices = needle.split('')\r\n            .map(char => item.lowerCase.indexOf(char));\r\n        if(indices.every(num => num !== -1) && isSorted(indices))\r\n            item.weight += 50;\r\n\r\n        //all chars match\r\n        if (needle.split('')\r\n            .every(char => item.lowerCase.includes(char)))\r\n            item.weight += 20;\r\n    }\r\n\r\n    const MAX_VISIBLE_QUERY_ITEMS = 30;\r\n    list.innerHTML = powerQueryItems\r\n        .filter((item) => item.weight != 0)\r\n        .sort((a, b) => b.weight - a.weight)\r\n        .map((item) => `<div data-long-label=\"${item.longLabel}\">${item.longLabel}</div>`)\r\n        .slice(0, MAX_VISIBLE_QUERY_ITEMS)\r\n        .join(\"\\n\");\r\n    selectedItem = clamp(selectedItem, 0, list.children.length - 1);\r\n    for(let item of list.querySelectorAll(\"div\")) {\r\n        item.onclick = (ev: PointerEvent) => {\r\n            onItemSelected(ev.target as HTMLElement);\r\n            // ev.preventDefault();\r\n        };\r\n    }\r\n    list.children[selectedItem]?.classList.add(\"selected\");\r\n}\r\n\r\nfunction onItemSelected(selectedElement: HTMLElement) {\r\n    let item = powerQueryItems.find((item) => item.longLabel === (selectedElement).dataset.longLabel);\r\n    popover.hidePopover();\r\n    if (item.func) {\r\n        item.func(item);\r\n    } else {\r\n        location.href = item.href;\r\n    }\r\n}\r\n\r\nfunction isSorted(arr: number[]) {\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n        if (arr[i] > arr[i + 1]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function scrapeMenuPage(longLabelPrefix: string, linkConverter: LinkToQueryConverter) {\r\n    let queryItems: QueryItem[] = [];\r\n    let blocks = document.querySelectorAll(\"div.card-body\");\r\n    for (let block of blocks) {\r\n        let header = block.querySelector('h5');\r\n        if (!header) {\r\n            continue;\r\n        }\r\n        let headerLabel = header.textContent.trim();\r\n        let links = block.querySelectorAll(\"a\");\r\n        for (let link of links) {\r\n            if (!link.href)\r\n                continue;\r\n            let item = linkConverter(headerLabel, link, longLabelPrefix);\r\n            queryItems.push(item);\r\n        }\r\n    }\r\n    return queryItems;\r\n}\r\n\r\ntype LinkToQueryConverter = (headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) => QueryItem;","import {createQueryItem, saveQueryItems, scrapeMenuPage} from \"./powerQuery/setupPowerQuery\";\r\n\r\ninterface PageFilter {\r\n    match: () => boolean;\r\n}\r\n\r\nexport class HashPageFilter implements PageFilter{\r\n    private readonly urlHash: string;\r\n    constructor(urlHash: string) {\r\n        this.urlHash = urlHash;\r\n    }\r\n\r\n    match() {\r\n        return window.location.hash.startsWith(this.urlHash);\r\n    }\r\n}\r\n\r\nexport class ExactHashPageFilter implements PageFilter{\r\n    private readonly urlHash: string;\r\n    constructor(urlHash: string) {\r\n        this.urlHash = urlHash;\r\n    }\r\n\r\n    match() {\r\n        return window.location.hash === this.urlHash;\r\n    }\r\n}\r\n\r\nexport class AllPageFilter implements PageFilter{\r\n    constructor() {\r\n    }\r\n\r\n    match() {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class BaseObserver implements Observer{\r\n    private readonly onPageChangedCallback: () => void;\r\n    private readonly onPageLoadedCallback: () => void;\r\n    private pageFilter: PageFilter;\r\n    private readonly onMutation: (mutation: MutationRecord) => boolean;\r\n    private observer: MutationObserver;\r\n    private readonly trackModal: boolean;\r\n    constructor(onPageChangedCallback: () => void, pageFilter: PageFilter, onMutationCallback: (mutation: MutationRecord) => boolean, trackModal: boolean = false, onPageLoadedCallback: () => void = undefined) {\r\n        this.onPageChangedCallback = onPageChangedCallback;\r\n        this.onPageLoadedCallback = onPageLoadedCallback;\r\n        this.pageFilter = pageFilter;\r\n        this.onMutation = onMutationCallback;\r\n        this.trackModal = trackModal;\r\n        if (onMutationCallback) {\r\n            this.observer = new MutationObserver((mutationList, observer) => this.observerCallback(mutationList, observer));\r\n        }\r\n    }\r\n\r\n    observerCallback(mutationList: MutationRecord[] , _observer: MutationObserver) {\r\n        for (const mutation of mutationList) {\r\n            if (mutation.type !== \"childList\") {\r\n                continue;\r\n            }\r\n            if (this.onMutation(mutation)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isPageMatching = () => this.pageFilter.match();\r\n\r\n    onPageLoaded() {\r\n        this.onPageLoadedCallback?.();\r\n    }\r\n\r\n    onPageChanged() {\r\n        if (!this.pageFilter.match()) {\r\n            this.disconnect();\r\n            return;\r\n        }\r\n        if (this.onPageChangedCallback) {\r\n            this.onPageChangedCallback();\r\n        }\r\n        if (!this.onMutation)\r\n            return;\r\n        this.observeElement(document.querySelector(\"main\"));\r\n        if(this.trackModal)\r\n            this.observeElement(document.getElementById(\"dko3_modal\"));\r\n    }\r\n\r\n    observeElement(element: HTMLElement) {\r\n        if (!element) {\r\n            console.error(\"Can't attach observer to element.\");\r\n            return;\r\n        }\r\n\r\n        const config = {\r\n            attributes: false,\r\n            childList: true,\r\n            subtree: true\r\n        };\r\n        this.observer.observe(element, config);\r\n    }\r\n\r\n    disconnect() {\r\n        this.observer?.disconnect();\r\n    }\r\n}\r\n\r\nexport interface Observer {\r\n    onPageChanged: () => void;\r\n    onPageLoaded: () => void;\r\n    isPageMatching: () => boolean;\r\n}\r\n\r\nexport class HashObserver implements Observer {\r\n    private baseObserver: BaseObserver;\r\n    //onMutationCallback should return true if handled definitively.\r\n    constructor(urlHash: string, onMutationCallback: (mutation: MutationRecord) => boolean, trackModal: boolean = false, onPageLoadedCallback: () => void = undefined) {\r\n        this.baseObserver = new BaseObserver(undefined, new HashPageFilter(urlHash), onMutationCallback, trackModal, onPageLoadedCallback);\r\n    }\r\n\r\n    onPageChanged() {\r\n        this.baseObserver.onPageChanged();\r\n    }\r\n\r\n    onPageLoaded() {\r\n        this.baseObserver.onPageLoaded();\r\n    }\r\n\r\n    isPageMatching = () => this.baseObserver.isPageMatching();\r\n}\r\nexport class ExactHashObserver implements Observer {\r\n    private baseObserver: BaseObserver;\r\n    //onMutationCallback should return true if handled definitively.\r\n    constructor(urlHash: string, onMutationCallback: (mutation: MutationRecord) => boolean, trackModal: boolean = false, onPageLoadedCallback: () => void = undefined) {\r\n        this.baseObserver = new BaseObserver(undefined, new ExactHashPageFilter(urlHash), onMutationCallback, trackModal, onPageLoadedCallback);\r\n    }\r\n\r\n    isPageMatching = () => this.baseObserver.isPageMatching();\r\n\r\n    onPageChanged() {\r\n        this.baseObserver.onPageChanged();\r\n    }\r\n    onPageLoaded() {\r\n        this.baseObserver.onPageLoaded();\r\n    }\r\n}\r\n\r\nexport class PageObserver implements Observer {\r\n    private baseObserver: BaseObserver;\r\n    constructor(onPageChangedCallback: () => void, onPageLoadedCallback: () => void = undefined) {\r\n        this.baseObserver = new BaseObserver(onPageChangedCallback, new AllPageFilter(), undefined, false, onPageLoadedCallback);\r\n    }\r\n\r\n    isPageMatching = () => this.baseObserver.isPageMatching();\r\n\r\n    onPageChanged() {\r\n        this.baseObserver.onPageChanged();\r\n    }\r\n    onPageLoaded() {\r\n        this.baseObserver.onPageLoaded();\r\n    }\r\n}\r\n\r\nexport class MenuScrapingObserver implements Observer {\r\n    private hashObserver: ExactHashObserver;\r\n    private readonly page: string;\r\n    private readonly longLabelPrefix: string;\r\n\r\n    constructor(urlHash: string, page: string, longLabelPrefix: string) {\r\n        let self = this;\r\n        this.hashObserver = new ExactHashObserver(urlHash, (_) => {\r\n            return self.onMutationPageWithMenu();\r\n        });\r\n        this.page = page;\r\n        this.longLabelPrefix = longLabelPrefix;\r\n    }\r\n\r\n    isPageMatching = () => this.hashObserver.isPageMatching();\r\n\r\n    onPageChanged() {\r\n        this.hashObserver.onPageChanged();\r\n        if(this.isPageMatching())\r\n            this.onMutationPageWithMenu(); //calling this here, because a menu page is often a single load, and MutationObserver is then too late to\r\n    }\r\n\r\n    onPageLoaded() {\r\n        this.onPageChanged();\r\n    }\r\n\r\n    onMutationPageWithMenu() {\r\n        saveQueryItems(this.page, scrapeMenuPage(this.longLabelPrefix, MenuScrapingObserver.defaultLinkToQueryItem));\r\n        return true;\r\n    }\r\n\r\n    static defaultLinkToQueryItem(headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) {\r\n        let label = link.textContent.trim();\r\n        return createQueryItem(headerLabel, label, link.href, undefined, longLabelPrefix + label);\r\n    }\r\n\r\n}","import {db3, getSchooljaarSelectElement} from \"../globals\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport {options} from \"../plugin_options/options\";\r\n\r\nexport default new HashObserver(\"#leerlingen-leerling\", onMutation);\r\n\r\nfunction onMutation(mutation: MutationRecord) {\r\n    let tabInschrijving = document.getElementById(\"leerling_inschrijvingen_weergave\");\r\n    if (mutation.target === tabInschrijving) {\r\n        onInschrijvingChanged(tabInschrijving);\r\n        return true;\r\n    }\r\n    if ((mutation.target as HTMLElement).id.includes(\"_uitleningen_table\")){\r\n        onUitleningenChanged(mutation.target as HTMLElement);\r\n        return true;\r\n    }\r\n    let tabAttesten = document.getElementById(\"attesten\");\r\n    if (mutation.target === tabAttesten) {\r\n        onAttestenChanged(tabInschrijving);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onAttestenChanged(_tabInschrijving: HTMLElement) {\r\n    decorateSchooljaar();\r\n}\r\n\r\nfunction onUitleningenChanged(tableUitleningen: HTMLElement) {\r\n    let firstCells :NodeListOf<HTMLTableCellElement> = tableUitleningen.querySelectorAll(\"tbody > tr > td:first-child\");\r\n    for(let cell of firstCells) {\r\n        if (cell.classList.contains(\"text-muted\")) {\r\n            break;//empty table with fake row.\r\n        }\r\n        let anchor = document.createElement(\"a\");\r\n        anchor.innerText = cell.innerText;\r\n        anchor.setAttribute(\"href\", \"/#extra-assets-uitleningen-uitlening?id=\"+anchor.innerText);\r\n        cell.textContent = \"\";\r\n        cell.appendChild(anchor);\r\n    }\r\n}\r\n\r\nfunction getSchooljaarElementAndListen() {\r\n    let schooljaar = getSchooljaarSelectElement();\r\n    let listening = \"changeListerenAdded\";\r\n    if(!schooljaar?.classList.contains(listening)){\r\n        schooljaar?.classList.add(listening);\r\n        schooljaar?.addEventListener(\"click\", () => {\r\n           decorateSchooljaar();\r\n        });\r\n    }\r\n    return schooljaar;\r\n}\r\n\r\nfunction isActiveYear() {\r\n    let selectedYearElement = getSchooljaarElementAndListen();\r\n    if(!selectedYearElement)\r\n        return true;\r\n    let selectedYear = parseInt(selectedYearElement.value);//only parses the first valid number in the string.\r\n    let now = new Date();\r\n    let month = now.getMonth();\r\n    let registrationSchoolYearStart = now.getFullYear();\r\n    if (month <= 3) {\r\n        registrationSchoolYearStart--;\r\n    }\r\n    return selectedYear === registrationSchoolYearStart;\r\n}\r\n\r\nfunction decorateSchooljaar() {\r\n    let view = document.getElementById(\"view_contents\");\r\n    let activeYear = isActiveYear();\r\n    if (activeYear) {\r\n        view.classList.remove(\"oldYear\");\r\n    } else {\r\n        view.classList.add(\"oldYear\");\r\n    }\r\n    if(!activeYear) {\r\n        let toewijzingButtons = document.querySelectorAll(\"#leerling_inschrijvingen_weergave button\");\r\n        Array.from(toewijzingButtons)\r\n            .filter((el) => (el.textContent === \"toewijzing\") || (el.textContent === \"inschrijving\"))\r\n            .forEach((btn) => btn.classList.add(\"oldYear\"));\r\n    }\r\n}\r\n\r\nfunction onInschrijvingChanged(tabInschrijving: HTMLElement) {\r\n    db3(\"inschrijving (tab) changed.\");\r\n\r\n    decorateSchooljaar();\r\n\r\n    //Show trimester instruments.\r\n    let moduleButtons = tabInschrijving.querySelectorAll(\"tr td.right_center > button\");\r\n    for(let btn of moduleButtons) {\r\n        let onClick = btn.getAttribute(\"onclick\");\r\n        let tr = btn.parentNode.parentNode;\r\n        onClick = onClick.substring(10, onClick.length- 1);\r\n        let args = onClick\r\n            .split(\", \")\r\n            .map((arg) => arg.replaceAll(\"'\", \"\"));\r\n        // @ts-ignore\r\n        getModules(...args) // making assumptions about the arguments here.\r\n            .then((modNames) => {\r\n                let instrumentText = \"\";\r\n                if(modNames.length) {\r\n                    (tr.children[0] as HTMLTableCellElement).innerText += \": \";\r\n                    let rxBasic = /Initiatie +(.*) *- *trimester.*/i;\r\n                    let rxWide = /Initiatie +(.*) *- *trimester.* *- *(.*)/i;\r\n                    let rxDesperate = /Initiatie +(.*)/i;\r\n                    instrumentText += modNames\r\n                        .map(modName => {\r\n                            let matches = modName.match(rxWide);\r\n                            if (matches?.length >= 2) {\r\n                                return matches[1].trim() + \" - \" + matches[2].trim();\r\n                            }\r\n                            matches = modName.match(rxBasic);\r\n                            if (matches?.length >= 1) {\r\n                                return matches[1].trim();\r\n                            }\r\n                            matches = modName.match(rxDesperate);\r\n                            if (matches?.length >= 1) {\r\n                                return matches[1].trim();\r\n                            }\r\n                            return \": ???\";\r\n                        })\r\n                        .join(\", \");\r\n                }\r\n                let span = document.createElement(\"span\");\r\n                tr.children[0].appendChild(span);\r\n                if(modNames.length > 1) {\r\n                    span.classList.add(\"badge-warning\");\r\n                }\r\n                span.innerText = instrumentText;\r\n            });\r\n    }\r\n\r\n    if(options.showNotAssignedClasses) {\r\n        setStripedLessons();\r\n    }\r\n\r\n}\r\n\r\nfunction setStripedLessons() {\r\n    let classRows = document.querySelectorAll(\"#leerling_inschrijvingen_weergave tr\");\r\n    let classCells = Array.from(classRows)\r\n        .filter(row => row.querySelector(\".table-info\") !== null)\r\n        .map(row => row.children.item(row.children.length - 2));\r\n\r\n    for (let td of classCells) {\r\n        let classDate = td.querySelector(\"span.text-muted\");\r\n        if (!classDate)\r\n            continue;\r\n        if (classDate.textContent === \"(geen lesmomenten)\")\r\n            continue;\r\n        for (let tdd of td.parentElement.children) {\r\n            if (tdd.classList.contains(\"table-info\")) {\r\n                tdd.classList.add(\"runningStripes\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nasync function getModules(_size: string, _modal: string, _file: string, args: string) {\r\n    // let folder = modal.split(\"-\").join(\"/\");\r\n\r\n    // This call is being skipped: (probably ok)\r\n    // let res = await fetch('views/'+folder+'/'+file+'.modal.php?'+args);\r\n    // let text = await res.text();\r\n\r\n    // This call uses the `args` param, although that contains an extra schooljaar paran which is not really needed.\r\n    // > 'inschrijving_vak_id=289840&schooljaar=2024-2025&lesmoment_id=4102'\r\n    // let lesmoment_id = args.substring(args.lastIndexOf(\"=\")+1);\r\n    // let res2 = await fetch(\"/views/leerlingen/leerling/inschrijvingen/modules_kiezen.modules.div.php?inschrijving_vak_id=289840&lesmoment_id=\" + lesmoment_id);\r\n    let res2 = await fetch(\"/views/leerlingen/leerling/inschrijvingen/modules_kiezen.modules.div.php?\"+args);\r\n\r\n    let text2 = await res2.text();\r\n    const template = document.createElement('template');\r\n    template.innerHTML = text2;\r\n    let checks = template.content.querySelectorAll(\"i.fa-check-square\");\r\n    return Array.from(checks)\r\n        .map(check => check.parentNode.parentNode.parentNode.querySelector(\"strong\").textContent);\r\n}\r\n\r\n","export function scrapeLessenOverzicht(table: HTMLTableElement) {\r\n    let body = table.tBodies[0];\r\n    let lessen: Les[] = [];\r\n    for (const row of body.rows) {\r\n        let lesCell = row.cells[0];\r\n        let studentsCell = row.cells[1];\r\n        let les = scrapeLesInfo(lesCell);\r\n        les.tableRow = row;\r\n        les.studentsTable = studentsCell.querySelectorAll(\"table\")[0]; //for delayed student scraping.\r\n        let meta = scrapeStudentsCellMeta(studentsCell);\r\n        les.aantal = meta.aantal;\r\n        les.maxAantal = meta.maxAantal;\r\n        les.id = meta.id;\r\n        les.wachtlijst = meta.wachtlijst;\r\n        les.warnings = [...row.getElementsByClassName(\"text-warning\")].map((el) => el.textContent);\r\n\r\n        lessen.push(les);\r\n    }\r\n    return lessen;\r\n}\r\n\r\nexport function scrapeStudentsCellMeta(studentsCell: HTMLTableCellElement) {\r\n    let smallTags = studentsCell.querySelectorAll(\"small\");\r\n    //aantallen\r\n    let aantal = 0;\r\n    let maxAantal =  0;\r\n    let arrayLeerlingenAantal = Array.from(smallTags).map((item) => item.textContent).filter((txt) => txt.includes(\"leerlingen\"));\r\n    if (arrayLeerlingenAantal.length > 0) {\r\n        const reAantallen = /(\\d+).\\D+(\\d+)/;\r\n        let matches = arrayLeerlingenAantal[0].match(reAantallen);\r\n        aantal = parseInt(matches[1]);\r\n        maxAantal = parseInt(matches[2]);\r\n    }\r\n    //id\r\n    let idTag = Array.from(smallTags).find((item) => item.classList.contains(\"float-right\"));\r\n    let id = idTag.textContent;\r\n    //wachtlijst\r\n    let wachtlijst = 0;\r\n    let arrayWachtlijst = Array.from(smallTags).map((item) => item.textContent).filter((txt) => txt.includes(\"wachtlijst\"));\r\n    if (arrayWachtlijst.length > 0) {\r\n        let reWachtlijst = /(\\d+)/;\r\n        let matches = arrayWachtlijst[0].match(reWachtlijst);\r\n        wachtlijst = parseInt(matches[1]);\r\n    }\r\n    return { aantal, maxAantal, id, wachtlijst };\r\n}\r\n\r\nexport function scrapeModules(table: HTMLTableElement) {\r\n    let lessen = scrapeLessenOverzicht(table);\r\n    return {\r\n        trimesterModules: scrapeTrimesterModules(lessen),\r\n        jaarModules: scrapeJaarModules(lessen)\r\n    };\r\n}\r\n\r\nfunction scrapeTrimesterModules(lessen: Les[] ) {\r\n    let modules = lessen.filter((les) => les.lesType === LesType.TrimesterModule);\r\n\r\n    let trimesterModules: Les[] = [];\r\n\r\n    for (let module of modules) {\r\n        module.students = scrapeStudents(module.studentsTable);\r\n\r\n        //get name of instrument and trimester.\r\n        const reInstrument = /.*\\Snitiatie\\s*(\\S+).*(\\d).*/;\r\n        const match = module.naam.match(reInstrument);\r\n        if (match?.length !== 3) {\r\n            console.error(`Could not process trimester module \"${module.naam}\" (${module.id}).`);\r\n            continue;\r\n        }\r\n        module.instrumentName = match[1];\r\n        module.trimesterNo = parseInt(match[2]);\r\n        trimesterModules.push(module);\r\n    }\r\n\r\n    return trimesterModules;\r\n}\r\n\r\nfunction scrapeJaarModules(lessen: Les[] ) {\r\n    let modules = lessen.filter((les) => les.lesType === LesType.JaarModule);\r\n\r\n    let jaarModules: Les[] = [];\r\n\r\n    for (let module of modules) {\r\n        module.students = scrapeStudents(module.studentsTable);\r\n\r\n        //get name of instrument\r\n        const reInstrument = /.*\\Snitiatie\\s*(\\S+).*/;\r\n        const match = module.naam.match(reInstrument);\r\n        if (match?.length !== 2) {\r\n            console.error(`Could not process jaar module \"${module.naam}\" (${module.id}).`);\r\n            continue;\r\n        }\r\n        module.instrumentName = match[1];\r\n        module.trimesterNo = parseInt(match[2]);\r\n        jaarModules.push(module);\r\n    }\r\n\r\n    return jaarModules;\r\n}\r\n\r\nexport class StudentInfo {\r\n    graadJaar: string;\r\n    name: string;\r\n    trimesterInstruments: Les[][];\r\n    jaarInstruments: Les[];\r\n    allYearSame: boolean;\r\n    naam: string;\r\n    voornaam: string;\r\n    id: number;\r\n    info: string;\r\n    notAllTrimsHaveAnInstrument: boolean;\r\n}\r\n\r\nfunction scrapeStudents(studentTable: HTMLTableElement) {\r\n    let students: StudentInfo[] = [];\r\n    if(studentTable.tBodies.length === 0) {\r\n        return students;\r\n    }\r\n    for (const row of studentTable.tBodies[0].rows) {\r\n        let studentInfo = new StudentInfo();\r\n        studentInfo.graadJaar = row.cells[0].children[0].textContent;\r\n        studentInfo.name = row.cells[0].childNodes[1].textContent;\r\n        let names = studentInfo.name.split(\", \");\r\n        studentInfo.naam = names[0];\r\n        studentInfo.voornaam = names[1];\r\n        students.push(studentInfo);\r\n    }\r\n    return students;\r\n}\r\n\r\nexport enum LesType { TrimesterModule, JaarModule, Les, UnknownModule}\r\n\r\nexport class Les {\r\n    tableRow: HTMLTableRowElement;\r\n    vakNaam: string;\r\n    lesType: LesType;\r\n    alc: boolean;\r\n    online: boolean;\r\n    naam: string;\r\n    teacher: string;\r\n    lesmoment: string;\r\n    formattedLesmoment: string;\r\n    vestiging: string;\r\n    studentsTable: HTMLTableElement;\r\n    aantal: number;\r\n    maxAantal: number;\r\n    id: string;\r\n    wachtlijst: number;\r\n    students: StudentInfo[];\r\n    instrumentName: string;\r\n    trimesterNo: number;\r\n    tags: string[];\r\n    warnings: string[];\r\n}\r\n\r\nexport function scrapeLesInfo(lesInfo: HTMLTableCellElement) {\r\n    let les = new Les();\r\n    let [first] = lesInfo.getElementsByTagName(\"strong\");\r\n    les.vakNaam = first.textContent;\r\n    let allBadges = lesInfo.getElementsByClassName(\"badge\");\r\n    let warningBadges = lesInfo.getElementsByClassName(\"badge-warning\");\r\n    les.alc = Array.from(allBadges).some((el) => el.textContent === \"ALC\");\r\n    les.online = lesInfo.getElementsByClassName(\"fa-eye-slash\").length === 0;\r\n    les.tags = Array.from(warningBadges)\r\n        .map((el) => el.textContent)\r\n        .filter((txt) => txt !== \"ALC\")\r\n        .filter((txt) => txt);\r\n    let mutedSpans = lesInfo.querySelectorAll(\"span.text-muted\");\r\n    //muted spans contain:\r\n    //  - class name (optional)\r\n    //  - teacher name (always)\r\n    if(mutedSpans.length > 1) {\r\n        les.naam = mutedSpans.item(0).textContent;\r\n    } else {\r\n        les.naam = lesInfo.children[1].textContent;\r\n    }\r\n    if(Array.from(allBadges).some((el) => el.textContent === \"module\")) {\r\n        if(les.naam.includes(\"jaar\"))\r\n            les.lesType = LesType.JaarModule;\r\n        else if(les.naam.includes(\"rimester\"))\r\n            les.lesType = LesType.TrimesterModule;\r\n        else\r\n            les.lesType = LesType.UnknownModule;\r\n    }\r\n    else{\r\n        les.lesType = LesType.Les;\r\n    }\r\n    if (mutedSpans.length > 0) {\r\n        les.teacher = Array.from(mutedSpans).pop().textContent;\r\n    }\r\n    let textNodes = Array.from(lesInfo.childNodes).filter((node) => node.nodeType === Node.TEXT_NODE && node.textContent.trim() !== \"\");\r\n    if (!textNodes) return les;\r\n\r\n    les.lesmoment = textNodes[0].nodeValue;\r\n    les.vestiging = textNodes[1].nodeValue;\r\n    return les;\r\n}\r\n","import {Les, LesType, StudentInfo} from \"./scrape\";\r\nimport {distinct} from \"../globals\";\r\n\r\ninterface TagInfo {\r\n    name: string,\r\n    partial: boolean\r\n}\r\n\r\ntype  BlockId = number;\r\n\r\nexport class BlockInfo {\r\n    private static blockCounter: number = 0;\r\n    private static allBlocks: BlockInfo[] = [];\r\n    id: BlockId;\r\n    teacher: string;\r\n    instrumentName: string;\r\n    maxAantal: number;\r\n    lesmoment: string;\r\n    vestiging: string;\r\n    trimesters: (Les| undefined)[][];\r\n    jaarModules: Les[];\r\n    tags: TagInfo[];\r\n    errors: string;\r\n    offline: boolean;\r\n    mergedBlocks: BlockInfo[];\r\n\r\n    static clearAllBlocks() {\r\n        BlockInfo.allBlocks = [];\r\n        BlockInfo.blockCounter = 0;\r\n    }\r\n\r\n    static getBlock(id: number) {\r\n        return BlockInfo.allBlocks[id];\r\n    }\r\n\r\n    static getAllBlocks(): Readonly<BlockInfo[]> {\r\n        return BlockInfo.allBlocks;\r\n    }\r\n\r\n    constructor() {\r\n        {\r\n            this.id = BlockInfo.blockCounter++;\r\n            BlockInfo.allBlocks.push(this);\r\n            this.teacher = undefined;\r\n            this.instrumentName = undefined;\r\n            this.maxAantal = -1;\r\n            this.lesmoment = undefined;\r\n            this.vestiging = undefined;\r\n            this.trimesters = [[], [], []];\r\n            this.jaarModules = [];\r\n            this.tags = [];\r\n            this.errors = \"\";\r\n            this.offline = false;\r\n            this.mergedBlocks = [];\r\n        }\r\n    }\r\n\r\n    hasSomeOfflineLessen() {\r\n        return this.alleLessen().some(les => les.online === false);\r\n    }\r\n\r\n    hasMissingTeachers() {\r\n        return this.alleLessen().some(les => les.teacher === \"(geen klasleerkracht)\");\r\n    }\r\n\r\n    hasMissingMax() {\r\n        return this.alleLessen().some(les => les.maxAantal > TOO_LARGE_MAX);\r\n    }\r\n\r\n    hasFullClasses() {\r\n        return this.alleLessen().some(les => les.aantal >= les.maxAantal);\r\n    }\r\n\r\n    hasOnlineAlcClasses() {\r\n        return this.alleLessen().some(les => les.online && les.alc);\r\n    }\r\n\r\n    hasWarningLessons() {\r\n        return this.alleLessen().some(les => les.warnings.length > 0);\r\n    }\r\n\r\n    alleLessen() {\r\n        return this.trimesters.flat().concat(this.jaarModules);\r\n    }\r\n\r\n    mergeBlock(block: BlockInfo) {\r\n        this.mergedBlocks.push(block);\r\n        this.jaarModules.push(...block.jaarModules);\r\n        for (let trimNo of [0, 1, 2]) {\r\n            this.trimesters[trimNo].push(...block.trimesters[trimNo]);\r\n        }\r\n        this.errors += block.errors;\r\n        return this;\r\n    }\r\n\r\n    containsId(id: number) {\r\n        if(this.id === id)\r\n            return true;\r\n        return this.mergedBlocks.some(b => b.containsId(id));\r\n    }\r\n\r\n    getIds() {\r\n        return this.mergedBlocks.map(b => b.id).concat(this.id);\r\n    }\r\n\r\n    updateMergedBlock() {\r\n        let allLessen = this.alleLessen();\r\n        this.lesmoment = [...new Set(allLessen.filter(les => les).map(les => les.lesmoment))].join(\", \");\r\n        this.teacher = [...new Set(allLessen.filter(les => les).map(les => les.teacher))].join(\", \");\r\n        this.vestiging = [...new Set(allLessen.filter(les => les).map(les => les.vestiging))].join(\", \");\r\n        this.instrumentName =  [...new Set(allLessen.filter(les => les).map(les => les.instrumentName))].join(\", \");\r\n        this.tags = distinct(allLessen.filter(les => les).map(les => les.tags).flat())\r\n            .map(tagName => {\r\n                return { name: tagName, partial : false }\r\n            });\r\n        //all Lessen should have these tags.\r\n        for(let tag of this.tags) {\r\n            tag.partial = !allLessen.every(les => les.tags.includes(tag.name));\r\n        }\r\n        this.offline = allLessen.some(les => !les.online);\r\n    }\r\n\r\n    checkBlockForErrors() {\r\n        let maxMoreThan100 = this.jaarModules\r\n            .map(module => module.maxAantal > TOO_LARGE_MAX)\r\n            .includes(true);\r\n        if(!maxMoreThan100) {\r\n            maxMoreThan100 = this.trimesters.flat()\r\n                .map(module => module?.maxAantal > TOO_LARGE_MAX)\r\n                .includes(true);\r\n        }\r\n        if(maxMoreThan100)\r\n            this.errors += \"Max aantal lln > \" + TOO_LARGE_MAX;\r\n    }\r\n}\r\n\r\ninterface MergeableBlocksGroop {\r\n    blocks: BlockInfo[],\r\n    mergedBlocks: Map<string, BlockInfo>\r\n}\r\ninterface Teacher {\r\n    name: string;\r\n    blocks: BlockInfo[];\r\n    mergedBlocks: Map<string, BlockInfo>;\r\n    lesMomenten: Map<string, BlockInfo>;\r\n}\r\n\r\ninterface Instrument {\r\n    name: string;\r\n    blocks: BlockInfo[];\r\n    mergedBlocks: Map<string, BlockInfo>;\r\n    lesMomenten: Map<string, BlockInfo>;\r\n}\r\n\r\nexport interface TableData {\r\n    students : Map<string, StudentInfo>,\r\n    instruments : Map<string, Instrument>,\r\n    teachers : Map<string, Teacher>,\r\n    blocks: BlockInfo[]\r\n}\r\n\r\nfunction buildTrimesters(instrumentTeacherMomentModules: Les[]) {\r\n    let mergedInstrument: (Les | undefined)[][] = [[], [], []];\r\n    instrumentTeacherMomentModules\r\n        .filter(module => module.lesType === LesType.TrimesterModule)\r\n        .forEach(module => {\r\n        mergedInstrument[module.trimesterNo-1].push(module);\r\n    });\r\n    return mergedInstrument;\r\n}\r\n\r\nfunction getLesmomenten(modules: Les[]) {\r\n    let lesMomenten = modules.map((module) => module.formattedLesmoment);\r\n    return [...new Set(lesMomenten)];\r\n}\r\n\r\nfunction getMaxAantal(modules: Les[]) {\r\n    return modules\r\n        .map((module) => module.maxAantal)\r\n        .reduce((prev, next) => {\r\n                return prev < next ? next : prev\r\n            }\r\n        );\r\n}\r\n\r\nfunction getVestigingen(modules: Les[]) {\r\n    let vestigingen = modules.map((module) => module.vestiging);\r\n    let uniqueVestigingen = [...new Set(vestigingen)];\r\n    return uniqueVestigingen.toString();\r\n}\r\n\r\nexport function prepareLesmomenten(inputModules: Les[]) {\r\n    let reLesMoment = /.*(\\w\\w) (?:\\d+\\/\\d+ )?(\\d\\d:\\d\\d)-(\\d\\d:\\d\\d).*/;\r\n    for(let module of inputModules){\r\n        if(module.lesmoment === \"(geen volgende les)\") {\r\n            module.formattedLesmoment = module.lesmoment;\r\n            continue;\r\n        }\r\n        let matches = module.lesmoment.match(reLesMoment);\r\n        if (matches?.length !== 4) {\r\n            console.error(`Could not process lesmoment \"${module.lesmoment}\" for instrument \"${module.instrumentName}\".`);\r\n            module.formattedLesmoment =  \"???\";\r\n        } else {\r\n            module.formattedLesmoment = matches[1] + \" \" + matches[2] + \"-\" + matches[3];\r\n        }\r\n\r\n        module.formattedLesmoment =  matches[1] + \" \" + matches[2] + \"-\" + matches[3];\r\n    }\r\n}\r\n\r\nfunction setStudentPopupInfo(student: StudentInfo) {\r\n    student.info = \"\";\r\n    if (!student.trimesterInstruments)\r\n        return;\r\n    for (let instrs of student.trimesterInstruments) {\r\n        if (instrs.length) {\r\n            student.info += instrs[0].trimesterNo + \". \" + instrs.map(instr => instr.instrumentName) + \"\\n\";\r\n        } else {\r\n            student.info += \"?. ---\\n\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction setStudentAllTrimsTheSameInstrument(student: StudentInfo) {\r\n    if(!student.trimesterInstruments)\r\n        return;\r\n    let instruments = student.trimesterInstruments.flat();\r\n    if (instruments.length < 3) {\r\n        student.allYearSame = false;\r\n        return; //skip the every() below if we haven't got 3 instruments.\r\n    }\r\n    student.allYearSame = instruments\r\n        .every((instr: any) => instr.instrumentName === (student?.trimesterInstruments[0][0]?.instrumentName ?? \"---\"));\r\n}\r\n\r\nfunction setStudentNoInstrumentForAllTrims(student: StudentInfo) {\r\n    if(!student.trimesterInstruments)\r\n        return;\r\n    student.notAllTrimsHaveAnInstrument = false;\r\n    for(let trim of student.trimesterInstruments) {\r\n        if(trim.length == 0)\r\n            student.notAllTrimsHaveAnInstrument = true;\r\n    }\r\n}\r\n\r\nexport function buildTableData(inputModules: Les[]) : TableData {\r\n    prepareLesmomenten(inputModules);\r\n\r\n    let tableData: TableData = {\r\n        students: new Map(),\r\n        instruments: new Map(),\r\n        teachers: new Map(),\r\n        blocks: [],\r\n    };\r\n\r\n    BlockInfo.clearAllBlocks();\r\n\r\n    //create a block per instrument/teacher/lesmoment\r\n    // group by INSTRUMENT\r\n    let instruments = distinct(inputModules.map((module) => module.instrumentName));\r\n    for (let instrumentName of instruments) {\r\n        let instrumentModules = inputModules.filter((module) => module.instrumentName === instrumentName);\r\n\r\n        // group by TEACHER\r\n        let teachers = distinct(instrumentModules.map((module) => module.teacher));\r\n        for(let teacher of teachers) {\r\n            let instrumentTeacherModules = instrumentModules.filter(module => module.teacher === teacher);\r\n\r\n            // group by LESMOMENT\r\n            let lesmomenten = distinct(getLesmomenten(instrumentTeacherModules));\r\n            for(let lesmoment of lesmomenten) {\r\n                let instrumentTeacherMomentModules = instrumentTeacherModules.filter(module => module.formattedLesmoment === lesmoment);\r\n\r\n                let block: BlockInfo = new BlockInfo();\r\n                block.instrumentName = instrumentName;\r\n                block.teacher = teacher;\r\n                block.lesmoment = lesmoment;\r\n                block.maxAantal = getMaxAantal(instrumentTeacherMomentModules);\r\n                block.vestiging = getVestigingen(instrumentTeacherMomentModules);\r\n                block.tags = distinct(instrumentTeacherMomentModules.map(les => les.tags).flat())\r\n                    .map(tagName => {\r\n                        return { name: tagName, partial : !tagFoundInAllModules(tagName, instrumentTeacherMomentModules) }\r\n                    });\r\n                // we could have both trimesters and jaar modules for this instrument/teacher/lesmoment\r\n                block.trimesters = buildTrimesters(instrumentTeacherMomentModules);\r\n                block.jaarModules = instrumentTeacherMomentModules.filter(module => module.lesType === LesType.JaarModule);\r\n                block.offline = instrumentTeacherMomentModules.some(module => !module.online);\r\n                block.checkBlockForErrors();\r\n                tableData.blocks.push(block);\r\n\r\n                for (let trim of block.trimesters) {\r\n                    addTrimesterStudentsToMapAndCount(tableData.students, trim);\r\n                }\r\n                for (let jaarModule of block.jaarModules) {\r\n                    addJaarStudentsToMapAndCount(tableData.students, jaarModule);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for(let student of tableData.students.values()) {\r\n        setStudentPopupInfo(student);\r\n        setStudentAllTrimsTheSameInstrument(student);\r\n        setStudentNoInstrumentForAllTrims(student);\r\n    }\r\n\r\n    //group by instrument/teacher/hour\r\n    let instrumentNames = distinct(tableData.blocks.map(b => b.instrumentName)).sort((a,b) => { return a.localeCompare(b);});\r\n    for(let instr of instrumentNames) {\r\n        tableData.instruments.set(instr, <Instrument>{name: instr, blocks: []});\r\n    }\r\n    for(let block of tableData.blocks) {\r\n        tableData.instruments.get(block.instrumentName).blocks.push(block);\r\n    }\r\n\r\n    //group by teacher/instrument/hour\r\n    let teachers = distinct(tableData.blocks.map(b => b.teacher)).sort((a,b) => { return a.localeCompare(b);});\r\n    for(let t of teachers) {\r\n        tableData.teachers.set(t, <Teacher>{name: t, blocks: []});\r\n    }\r\n    for(let block of tableData.blocks) {\r\n        tableData.teachers.get(block.teacher).blocks.push(block);\r\n    }\r\n\r\n    //group by teacher/lesmoment\r\n    groupBlocksTwoLevels(\r\n        tableData.teachers.values(),\r\n        (block) => block.lesmoment,\r\n        (primary: Teacher, secundary) => { primary.lesMomenten = secundary; }\r\n    );\r\n\r\n    //group by instrument/lesmoment\r\n    groupBlocksTwoLevels(\r\n        tableData.instruments.values(),\r\n        (block) => block.lesmoment,\r\n        (primary: Teacher, secundary) => { primary.lesMomenten = secundary; }\r\n    );\r\n\r\n    //group by teacher\r\n    groupBlocks(\r\n        tableData.teachers.values(),\r\n        (block) => block.teacher\r\n    );\r\n\r\n    //group by instrument\r\n    groupBlocks(\r\n        tableData.instruments.values(),\r\n        (block) => block.instrumentName\r\n    );\r\n\r\n    return tableData;\r\n}\r\n\r\nfunction tagFoundInAllModules(tag: string, modules: Les[]) {\r\n    for(let module of modules) {\r\n        if(!module.tags.includes(tag))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction groupBlocksTwoLevels(primaryGroups: Iterable<MergeableBlocksGroop>, getSecondaryKey: (block: BlockInfo) => string, setSecondaryGroup: (primary: MergeableBlocksGroop, group: Map<string, BlockInfo>) => void) {\r\n    for (let primary of primaryGroups) {\r\n        let blocks = primary.blocks;\r\n        let secondaryKeys = distinct(blocks.map(getSecondaryKey));\r\n        let secondaryGroup = new Map(secondaryKeys.map(key => [key, new BlockInfo()]));\r\n        //bundle the blocks per secondary\r\n        for (let block of blocks) {\r\n            secondaryGroup.get(getSecondaryKey(block)).mergeBlock(block);\r\n        }\r\n        secondaryGroup.forEach(block => {\r\n            block.updateMergedBlock();\r\n        });\r\n        setSecondaryGroup(primary, secondaryGroup);\r\n    }\r\n}\r\n\r\nfunction groupBlocks(primaryGroups: Iterable<MergeableBlocksGroop>, getPrimaryKey: (block: BlockInfo) => string) {\r\n    for (let primary of primaryGroups) {\r\n        let blocks = primary.blocks;\r\n        let keys = distinct(blocks.map(getPrimaryKey));\r\n        primary.mergedBlocks = new Map(keys.map(key => [key, new BlockInfo()]));\r\n        //bundle the blocks per secondary\r\n        for (let block of blocks) {\r\n            primary.mergedBlocks.get(getPrimaryKey(block)).mergeBlock(block);\r\n        }\r\n        primary.mergedBlocks.forEach(block => {\r\n            block.updateMergedBlock();\r\n        });\r\n    }\r\n}\r\n\r\nfunction addTrimesterStudentsToMapAndCount(allStudents: Map<string, StudentInfo>, blockTrimModules: Les[]) {\r\n    for(let blockTrimModule of blockTrimModules) {\r\n        if (!blockTrimModule)\r\n            continue;\r\n        for (let student of blockTrimModule.students) {\r\n            if (!allStudents.has(student.name)) {\r\n                student.trimesterInstruments = [[], [], []];\r\n                allStudents.set(student.name, student);\r\n            }\r\n            let stud = allStudents.get(student.name);\r\n            stud.trimesterInstruments[blockTrimModule.trimesterNo - 1].push(blockTrimModule);\r\n        }\r\n        //all trims must reference the students in the overall map.\r\n        blockTrimModule.students = blockTrimModule.students\r\n            .map((student) => allStudents.get(student.name));\r\n    }\r\n}\r\n\r\nfunction addJaarStudentsToMapAndCount(students: Map<string, StudentInfo>, jaarModule: Les) {\r\n    if(!jaarModule) return;\r\n    for (let student of jaarModule.students) {\r\n        if (!students.has(student.name)) {\r\n            student.jaarInstruments = [];\r\n            students.set(student.name, student);\r\n        }\r\n        let stud = students.get(student.name);\r\n        stud.jaarInstruments.push(jaarModule);\r\n    }\r\n    //all jaarModules must reference the students in the overall map.\r\n    jaarModule.students = jaarModule.students\r\n        .map((student) => students.get(student.name));\r\n}\r\n\r\ninterface MergedBlockStudents {\r\n    jaarStudents: StudentInfo[],\r\n    trimesterStudents: StudentInfo[][],\r\n    maxAantallen: number[],\r\n    blockNeededRows: number,\r\n    wachtlijsten: number[],\r\n    hasWachtlijst: boolean,\r\n    maxJaarStudentCount: number\r\n}\r\n\r\nexport const TOO_LARGE_MAX = 100;\r\n\r\nexport function mergeBlockStudents(block: BlockInfo) {\r\n    let jaarStudents = block.jaarModules.map(les => les.students).flat();\r\n    let trimesterStudents = [\r\n        block.trimesters[0].map(les => les?.students ?? []).flat(),\r\n        block.trimesters[1].map(les => les?.students ?? []).flat(),\r\n        block.trimesters[2].map(les => les?.students ?? []).flat(),\r\n    ];\r\n\r\n    let maxAantallen = block.trimesters\r\n        .map((trimLessen) => {\r\n            if(trimLessen.length === 0)\r\n                return 0;\r\n            return trimLessen\r\n                .map(les => les?.maxAantal ?? 0)\r\n                .map(maxAantal => maxAantal > TOO_LARGE_MAX ? 4 : maxAantal)\r\n                .reduce((a,b) => a+b);\r\n        });\r\n\r\n    let blockNeededRows = Math.max(\r\n        ...maxAantallen,\r\n        ...trimesterStudents.map(stud => stud.length)\r\n    );\r\n    let wachtlijsten = block.trimesters\r\n        .map((trimLessen) => {\r\n            if(trimLessen.length === 0)\r\n                return 0;\r\n            return trimLessen\r\n                .map(les => les?.wachtlijst ?? 0)\r\n                .reduce((a,b) => a + b);\r\n        });\r\n\r\n    let hasWachtlijst = wachtlijsten\r\n        .some(wachtLijst => wachtLijst>0);\r\n    if (hasWachtlijst) {\r\n        blockNeededRows++;\r\n    }\r\n\r\n    let maxJaarStudentCount = block.jaarModules\r\n        .map(mod => mod.maxAantal)\r\n        .reduce((a, b) => Math.max(a, b), 0);\r\n    return {\r\n        jaarStudents,\r\n        trimesterStudents,\r\n        maxAantallen,\r\n        blockNeededRows,\r\n        wachtlijsten,\r\n        hasWachtlijst,\r\n        maxJaarStudentCount\r\n    } as MergedBlockStudents;\r\n\r\n}\r\n","import {FULL_CLASS_BUTTON_ID, TRIM_DIV_ID} from \"../def\";\r\nimport {db3, getPageSettings, isButtonHighlighted, savePageSettings, stripStudentName} from \"../globals\";\r\nimport {BlockInfo, mergeBlockStudents, TableData} from \"./convert\";\r\nimport {StudentInfo} from \"./scrape\";\r\nimport * as html from \"../../libs/Emmeter/html\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\nimport {NBSP} from \"../../libs/Emmeter/tokenizer\";\r\nimport {PageName} from \"../gotoState\";\r\nimport {getTrimPageElements} from \"./observer\";\r\n\r\nexport enum NameSorting {\r\n    FirstName, LastName\r\n}\r\n\r\nexport enum TrimesterGrouping {\r\n    TeacherInstrumentHour,\r\n    InstrumentTeacherHour ,\r\n    TeacherHour,\r\n    InstrumentHour,\r\n    Instrument,\r\n    Teacher\r\n}\r\n\r\nexport interface PageSettings {\r\n    pageName: PageName\r\n}\r\n\r\nexport interface LessenPageState extends PageSettings {\r\n    pageName: PageName\r\n    nameSorting: NameSorting,\r\n    grouping: TrimesterGrouping,\r\n    searchText: string,\r\n    filterOffline: boolean\r\n    filterOnline: boolean\r\n    filterNoTeacher: boolean;\r\n    filterNoMax: boolean;\r\n    filterFullClass: boolean;\r\n    filterOnlineAlc: boolean;\r\n    filterWarnings: boolean;\r\n}\r\n\r\nexport function getDefaultPageSettings() {\r\n    return {\r\n        pageName: PageName.Lessen,\r\n        nameSorting: NameSorting.LastName,\r\n        grouping: TrimesterGrouping.InstrumentTeacherHour,\r\n        searchText: \"\",\r\n        filterOffline: false,\r\n        filterOnline: false,\r\n        filterNoTeacher: false,\r\n        filterNoMax: false,\r\n        filterFullClass: false,\r\n        filterOnlineAlc: false,\r\n        filterWarnings: false,\r\n    } as LessenPageState;\r\n}\r\n\r\nlet pageState: LessenPageState = getDefaultPageSettings();\r\n\r\nexport function setSavedNameSorting(sorting: NameSorting) {\r\n    pageState.nameSorting = sorting;\r\n    savePageSettings(pageState);\r\n}\r\n\r\nexport function getSavedNameSorting() {\r\n    pageState = getPageSettings(PageName.Lessen, pageState) as LessenPageState;\r\n    return pageState.nameSorting;\r\n}\r\n\r\nexport function buildTrimesterTable(tableData: TableData, trimElements: TrimElements) {\r\n    pageState = getPageSettings(PageName.Lessen, pageState) as LessenPageState;\r\n    tableData.blocks.sort((block1, block2) => block1.instrumentName.localeCompare(block2.instrumentName));\r\n    trimElements.trimTableDiv = html.emmet.create(`#${TRIM_DIV_ID}>table#trimesterTable[border=\"2\" style.width=\"100%\"]>colgroup>col*3`).root as HTMLDivElement;\r\n\r\n    trimElements.trimTableDiv.dataset.showFullClass= isButtonHighlighted(FULL_CLASS_BUTTON_ID) ? \"true\" : \"false\";\r\n\r\n    let { root: newTable, last: trHeader } = html.emmet.create(\"#trimesterTable>tbody+thead.table-secondary>tr\");\r\n    Object.assign(trimElements, getTrimPageElements()); //update trimElements\r\n\r\n    let newTableBody = newTable.querySelector(\"tbody\");\r\n\r\n    let totTrim = [0,0,0];\r\n    for (let block of tableData.blocks) {\r\n        let totJaar = block.jaarModules.map(mod => mod.students.length).reduce((prev, curr) => prev + curr, 0);\r\n        for(let trimNo of [0,1,2]) {\r\n            totTrim[trimNo] += totJaar + (block.trimesters[trimNo][0]?.students?.length ?? 0);\r\n        }\r\n    }\r\n\r\n    html.emmet.append(trHeader as HTMLTableRowElement, \"(th>div>span.bold{Trimester $}+span.plain{ ($$ lln)})*3\", (index) => totTrim[index].toString());\r\n    switch(pageState.grouping) {\r\n        case TrimesterGrouping.InstrumentTeacherHour:\r\n            for (let [instrumentName, instrument] of tableData.instruments) {\r\n                buildGroup(newTableBody, instrument.blocks, instrumentName, (block) => block.teacher, DisplayOptions.Hour | DisplayOptions.Location);\r\n            }\r\n            break;\r\n        case TrimesterGrouping.TeacherInstrumentHour:\r\n            for (let [teacherName, teacher] of tableData.teachers) {\r\n                buildGroup(newTableBody, teacher.blocks, teacherName, (block) => block.instrumentName, DisplayOptions.Hour | DisplayOptions.Location);\r\n            }\r\n            break;\r\n        case TrimesterGrouping.TeacherHour:\r\n            for (let [teacherName, teacher] of tableData.teachers) {\r\n                buildTitleRow(newTableBody, teacherName);\r\n                for (let [hour, block] of teacher.lesMomenten) {\r\n                    buildBlock(newTableBody, block, teacherName, (_block) => hour, DisplayOptions.Location);\r\n                }\r\n            }\r\n            break;\r\n        case TrimesterGrouping.InstrumentHour:\r\n            for (let [instrumentName, instrument] of tableData.instruments) {\r\n                buildTitleRow(newTableBody, instrumentName);\r\n                for (let [hour, block] of instrument.lesMomenten) {\r\n                    buildBlock(newTableBody, block, instrumentName, (_block) => hour, DisplayOptions.Location);\r\n                }\r\n            }\r\n            break;\r\n        case TrimesterGrouping.Instrument:\r\n            for (let [instrumentName, instrument] of tableData.instruments) {\r\n                buildTitleRow(newTableBody, instrumentName);\r\n                for (let [, block] of instrument.mergedBlocks) {\r\n                    buildBlock(newTableBody, block, instrumentName, undefined, DisplayOptions.Hour | DisplayOptions.Location | DisplayOptions.Teacher);\r\n                }\r\n            }\r\n            break;\r\n        case TrimesterGrouping.Teacher:\r\n            for (let [teacherName, teacher] of tableData.teachers) {\r\n                buildTitleRow(newTableBody, teacherName);\r\n                for (let [, block] of teacher.mergedBlocks) {\r\n                    buildBlock(newTableBody, block, teacherName, undefined, DisplayOptions.Hour | DisplayOptions.Location | DisplayOptions.Instrument);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction buildGroup(newTableBody: HTMLTableSectionElement, blocks: BlockInfo[], groupId: string, getBlockTitle: (block: BlockInfo) => string, displayOptions: DisplayOptions) {\r\n    buildTitleRow(newTableBody, groupId);\r\n    for (let block of blocks) {\r\n        buildBlock(newTableBody, block, groupId, getBlockTitle, displayOptions);\r\n    }\r\n}\r\n\r\nfunction createStudentRow(tableBody: HTMLTableSectionElement, rowClass: string, groupId: string, blockId: number) {\r\n    let row = createLesRow(groupId, blockId);\r\n    tableBody.appendChild(row);\r\n    row.classList.add(rowClass);\r\n    row.dataset.hasFullClass = \"false\";\r\n    return row;\r\n}\r\n\r\n/*\r\n\r\nA block should have only ONE les per trimester and ONE per jaar.\r\nIn case multiple: Show error next to class link? Or show 2 class links?\r\nBut merge all students anyway (and waitinglists).\r\n\r\nA block has a max number of rows,\r\n For trimesters: based on the max for the trimesters. (plus one in case of a waitinglist)\r\n For jaarmodules: based on max of all jaarmodules. (plus one in case of a waitinglist)\r\n\r\nSinde both are on the same lesmoment, the max numbers should not be added.\r\n\r\nSay we have a jaarmodule of 2 students and trimestermodules of max() 4 students.\r\nTotal max = 4.\r\nIf jaarmodule has 3 students, and trimester only 1...fine. Note that they are on the SAME lesmoment.\r\nWhat is tot max allowed per trimester? The max of jaar and trimester.\r\n\r\n\r\nFirst draw the 2 jaarmodule students.\r\n\r\n\r\n */\r\n\r\nfunction buildBlock(newTableBody: HTMLTableSectionElement, block: BlockInfo, groupId: string, getBlockTitle: (undefined | ((block: BlockInfo) => string)), displayOptions: DisplayOptions) {\r\n    let mergedBlockStudents = mergeBlockStudents(block);\r\n\r\n    let trimesterHeaders = [0,1,2] .map(trimNo => {\r\n        if(mergedBlockStudents.trimesterStudents[trimNo].length < 5 && mergedBlockStudents.maxAantallen[trimNo] < 5)\r\n            return \"\";\r\n        return `${mergedBlockStudents.trimesterStudents[trimNo].length} van ${mergedBlockStudents.maxAantallen[trimNo]} lln`;\r\n    });\r\n\r\n    let trTitle = buildBlockTitle(newTableBody, block, getBlockTitle, groupId);\r\n    let headerRows = buildBlockHeader(newTableBody, block, groupId, trimesterHeaders, displayOptions);\r\n    let studentTopRowNo = newTableBody.children.length;\r\n\r\n\r\n    /*\r\n\r\n    Say, we may have 2 jaar rows available...but only one filled.\r\n    > first fill that row\r\n    > start filling trims on the next row, but do mark that 2nd row as \"jaarRow\"\r\n      > give that overlapping row a different color.\r\n        > give the filled cells a class of \"trimesterStudent\".\r\n\r\n  >>> give a cell.trimesterStudent in a row.jaarModule a different color to indicate the overlap.\r\n     */\r\n    //Fill jaar rows\r\n    let filledRowCount = 0;\r\n        sortStudents(mergedBlockStudents.jaarStudents);\r\n        for(let student of mergedBlockStudents.jaarStudents) {\r\n            let row = createStudentRow(newTableBody, \"jaarRow\", groupId, block.id);\r\n            for (let trimNo = 0; trimNo < 3; trimNo++) {\r\n                let cell = buildStudentCell(student);\r\n                row.appendChild(cell);\r\n                cell.classList.add(\"jaarStudent\");\r\n                if (mergedBlockStudents.maxAantallen[trimNo] <= filledRowCount) {\r\n                    cell.classList.add(\"gray\");\r\n                }\r\n            }\r\n            filledRowCount++;\r\n        }\r\n\r\n    //Fill trimester rows\r\n    let hasFullClass = false;\r\n    for (let rowNo = 0; rowNo < (mergedBlockStudents.blockNeededRows - filledRowCount); rowNo++) {\r\n        let row = createStudentRow(newTableBody,\"trimesterRow\", groupId, block.id);\r\n\r\n        for (let trimNo = 0; trimNo < 3; trimNo++) {\r\n            let trimester = mergedBlockStudents.trimesterStudents[trimNo];\r\n            sortStudents(trimester);\r\n            let student: StudentInfo = undefined;\r\n            if (trimester) {\r\n                student = trimester[rowNo];\r\n                let maxTrimStudentCount = Math.max(mergedBlockStudents.maxAantallen[trimNo], mergedBlockStudents.maxJaarStudentCount);\r\n                if (trimester.length > 0 && trimester.length >= maxTrimStudentCount) {\r\n                    row.dataset.hasFullClass = \"true\";\r\n                    hasFullClass = true;\r\n                }\r\n            }\r\n            let cell = buildStudentCell(student);\r\n            row.appendChild(cell);\r\n            cell.classList.add(\"trimesterStudent\");\r\n            if (mergedBlockStudents.maxAantallen[trimNo] <= rowNo) {\r\n                cell.classList.add(\"gray\");\r\n            }\r\n            if(student?.trimesterInstruments) {\r\n                if (student?.trimesterInstruments[trimNo].length > 1) {\r\n                    cell.classList.add(\"yellowMarker\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(hasFullClass) {\r\n        if(trTitle)\r\n            trTitle.dataset.hasFullClass = \"true\"; //todo:  replace with class as it's display only.\r\n        headerRows.trModuleLinks.dataset.hasFullClass = \"true\";\r\n    }\r\n    if (!mergedBlockStudents.hasWachtlijst) {\r\n        return;\r\n    }\r\n\r\n    //build the wachtlijst row\r\n    for (let trimNo of [0,1,2]) {\r\n        let row = newTableBody.children[newTableBody.children.length-1];\r\n        row.classList.add(\"wachtlijst\");\r\n        let cell = row.children[trimNo];\r\n        if (mergedBlockStudents.wachtlijsten[trimNo] === 0) {\r\n            continue;\r\n        }\r\n        const small = document.createElement(\"small\");\r\n        cell.appendChild(small);\r\n        small.appendChild(document.createTextNode(`(${mergedBlockStudents.wachtlijsten[trimNo]} op wachtlijst)`));\r\n        small.classList.add(\"text-danger\");\r\n\r\n        //studens on wachtlijst and there is still room available?\r\n        if (mergedBlockStudents.wachtlijsten[trimNo] > 0 && mergedBlockStudents.trimesterStudents[trimNo].length < mergedBlockStudents.maxAantallen[trimNo]) {\r\n            cell.querySelector(\"small\").classList.add(\"yellowMarker\");\r\n            newTableBody.children[studentTopRowNo + mergedBlockStudents.trimesterStudents[trimNo].length].children[trimNo].classList.add(\"yellowMarker\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction createLesRow(groupId: string, blockId: number) {\r\n    let tr = document.createElement(\"tr\");\r\n    tr.dataset.blockId = \"\"+blockId;\r\n    if(blockId)\r\n        tr.dataset.groupId = groupId;\r\n    else\r\n        tr.dataset.blockId = \"groupTitle\";// a title row does not belong to a block.\r\n    return tr;\r\n}\r\n\r\nfunction buildTitleRow(newTableBody: HTMLTableSectionElement, title: string) {\r\n    const trTitle = createLesRow(title, undefined);\r\n    newTableBody.appendChild(trTitle);\r\n    trTitle.classList.add(\"blockRow\", \"groupHeader\");\r\n    trTitle.dataset.groupId = title;\r\n\r\n    const tdTitle = document.createElement(\"td\");\r\n    trTitle.appendChild(tdTitle);\r\n    tdTitle.classList.add(\"titleCell\");\r\n    tdTitle.setAttribute(\"colspan\", \"3\");\r\n\r\n    let divTitle = document.createElement(\"div\");\r\n    tdTitle.appendChild(divTitle);\r\n    divTitle.classList.add(\"blockTitle\");\r\n    divTitle.appendChild(document.createTextNode(title));\r\n    return {trTitle, divTitle};\r\n}\r\n\r\nfunction buildBlockTitle(newTableBody: HTMLTableSectionElement, block: BlockInfo, getBlockTitle: (undefined | ((block: BlockInfo) => string)), groupId: string) {\r\n    if(!getBlockTitle && !block.errors)\r\n        return undefined;\r\n    const trBlockTitle = newTableBody.appendChild(createLesRow(groupId, block.id));\r\n    trBlockTitle.classList.add(\"blockRow\");\r\n\r\n    let {last: divBlockTitle} = html.emmet.append(trBlockTitle, \"td.infoCell[colspan=3]>div.text-muted\");\r\n    if(getBlockTitle) {\r\n        emmet.appendChild(divBlockTitle as HTMLDivElement, `span.blockTitle{${getBlockTitle(block)}}`);\r\n    }\r\n\r\n    for (let jaarModule of block.jaarModules) {\r\n        divBlockTitle.appendChild(buildModuleButton(\">\", jaarModule.id, false))\r\n    }\r\n\r\n    if(block.errors) {\r\n        let errorSpan = document.createElement(\"span\");\r\n        errorSpan.appendChild(document.createTextNode(block.errors));\r\n        errorSpan.classList.add(\"lesError\");\r\n        divBlockTitle.appendChild(errorSpan);\r\n    }\r\n    return trBlockTitle;\r\n}\r\n\r\nenum DisplayOptions {\r\n    Teacher = 0x01,\r\n    Hour = 0x02,\r\n    Instrument = 0x04,\r\n    Location = 0x08\r\n}\r\n\r\nfunction buildInfoRow(newTableBody: HTMLTableSectionElement, _text: string, show: boolean, groupId: string, blockId: number) {\r\n    const trBlockInfo = newTableBody.appendChild(createLesRow(groupId, blockId));\r\n    trBlockInfo.classList.add(\"blockRow\");\r\n    if(show===false)\r\n        trBlockInfo.dataset.keepHidden = \"true\";\r\n    trBlockInfo.dataset.groupId = groupId;\r\n\r\n    return html.emmet.append(trBlockInfo, \"td.infoCell[colspan=3]>div.text-muted\");\r\n}\r\n\r\nfunction buildInfoRowWithText(newTableBody: HTMLTableSectionElement, show: boolean, blockId: number, groupId: string, text: string)  {\r\n    let {last: divMuted} = buildInfoRow(newTableBody, \"\", show, groupId, blockId);\r\n    divMuted.appendChild(document.createTextNode(text));\r\n}\r\n\r\nfunction buildBlockHeader(newTableBody: HTMLTableSectionElement, block: BlockInfo, groupId: string, trimesterHeaders: string[], displayOptions: DisplayOptions) {\r\n    //INFO\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Teacher & displayOptions)), block.id, groupId, block.teacher);\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Instrument & displayOptions)), block.id, groupId, block.instrumentName);\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Hour & displayOptions)), block.id, groupId, block.lesmoment);\r\n    buildInfoRowWithText(newTableBody, Boolean((DisplayOptions.Location & displayOptions)), block.id, groupId, block.vestiging);\r\n    if(block.tags.length > 0) {\r\n        let {last: divMuted} = buildInfoRow(newTableBody, block.tags.join(), true, groupId, block.id);\r\n        emmet.appendChild(divMuted as HTMLDivElement, block.tags.map(tag => {\r\n            let mutedClass = tag.partial ? \".muted\" : \"\";\r\n            return `span.badge.badge-ill.badge-warning${mutedClass}{${tag.name}}`;\r\n        }).join('+'))\r\n    }\r\n\r\n    //build row for module links(the tiny numbered buttons)\r\n    const trModuleLinks = createLesRow(groupId, block.id);\r\n    newTableBody.appendChild(trModuleLinks);\r\n    trModuleLinks.classList.add(\"blockRow\");\r\n    const tdLink1 = document.createElement(\"td\");\r\n    trModuleLinks.appendChild(tdLink1);\r\n    tdLink1.appendChild(document.createTextNode(trimesterHeaders[0]));\r\n    if (block.trimesters[0][0]) {\r\n        tdLink1.appendChild(buildModuleButton(\"1\", block.trimesters[0][0].id, true));\r\n    }\r\n    const tdLink2 = document.createElement(\"td\");\r\n    trModuleLinks.appendChild(tdLink2);\r\n    tdLink2.appendChild(document.createTextNode(trimesterHeaders[1]));\r\n    if (block.trimesters[1][0]) {\r\n        tdLink2.appendChild(buildModuleButton(\"2\", block.trimesters[1][0].id, true));\r\n    }\r\n    const tdLink3 = document.createElement(\"td\");\r\n    trModuleLinks.appendChild(tdLink3);\r\n    tdLink3.appendChild(document.createTextNode(trimesterHeaders[2]));\r\n    if (block.trimesters[2][0]) {\r\n        tdLink3.appendChild(buildModuleButton(\"3\", block.trimesters[2][0].id, true));\r\n    }\r\n    return {\r\n        trModuleLinks: trModuleLinks\r\n    };\r\n}\r\n\r\nfunction buildModuleButton(buttonText: string, id: string, floatRight: boolean) {\r\n    const button = document.createElement(\"a\");\r\n    button.href = \"#\";\r\n    button.setAttribute(\"onclick\", `showView('lessen-les','','id=${id}'); return false;`);\r\n    button.classList.add(\"lesButton\");\r\n    if(floatRight)\r\n        button.classList.add(\"float-right\");\r\n    button.innerText = buttonText;\r\n    return button;\r\n}\r\n\r\nfunction buildStudentCell(student: StudentInfo) {\r\n    const cell = document.createElement(\"td\");\r\n    let studentSpan = document.createElement(\"span\");\r\n    let displayName = String.fromCharCode(NBSP);\r\n    studentSpan.appendChild(document.createTextNode(displayName));\r\n    cell.appendChild(studentSpan);\r\n    if (!student) {\r\n        return cell;\r\n    }\r\n\r\n    if(pageState.nameSorting === NameSorting.LastName)\r\n        displayName = student.naam + \" \" + student.voornaam;\r\n    else\r\n        displayName = student.voornaam + \" \" + student.naam;\r\n    studentSpan.textContent = displayName;\r\n\r\n    if (student.allYearSame) {\r\n        studentSpan.classList.add(\"allYear\");\r\n    }\r\n\r\n    const button = cell.appendChild(document.createElement(\"button\"));\r\n    button.classList.add(\"student\");\r\n    button.title = student.info;\r\n    button.onclick= async function () {\r\n        let id = await fetchStudentId(student.name);\r\n        if(id <= 0)\r\n            window.location.href = \"/#zoeken?zoek=\"+ stripStudentName(student.name).replaceAll(\" \", \"+\");\r\n        else {\r\n            window.location.href = \"#leerlingen-leerling?id=\" + id + \",tab=inschrijvingen\";\r\n        }\r\n        return false;\r\n    };\r\n    const iTag = document.createElement(\"i\");\r\n    button.appendChild(iTag);\r\n    iTag.classList.add('fas', \"fa-user-alt\");\r\n    if (student.notAllTrimsHaveAnInstrument) {\r\n        iTag.classList.add(\"no3trims\");\r\n    }\r\n    return cell;\r\n}\r\n\r\nasync function fetchStudentId(studentName: string) {\r\n    let strippedStudentName = stripStudentName(studentName);\r\n    return fetch(\"/view.php?args=zoeken?zoek=\"+encodeURIComponent(strippedStudentName))\r\n        .then((response) => response.text())\r\n        .then((_text) => fetch(\"/views/zoeken/index.view.php\"))\r\n        .then((response) => response.text())\r\n        .then((text) => findStudentId(studentName, text))\r\n        .catch(err => {\r\n            console.error('Request failed', err);\r\n            return -1;\r\n        });\r\n}\r\n\r\nfunction findStudentId(studentName: string, text: string) {\r\n    studentName = studentName.replaceAll(\",\", \"\"); // search results do not contain a comma between first and last name.\r\n    db3(studentName);\r\n    db3(text);\r\n    let namePos = text.indexOf(studentName);\r\n    if (namePos < 0) {\r\n        return 0\r\n    }\r\n    //the name comes AFTER the id, hence the backward search of the leftmost slice of the string.\r\n    let idPos = text.substring(0, namePos).lastIndexOf(\"'id=\", namePos);\r\n    let id = text.substring(idPos, idPos+10);\r\n    let found = id.match(/\\d+/);\r\n    if(found?.length)\r\n        return parseInt(found[0]);\r\n    throw `No id found for student ${studentName}.`;\r\n}\r\n\r\nexport interface TrimElements {\r\n    trimTable: HTMLTableElement;\r\n    trimTableDiv: HTMLDivElement;\r\n    lessenTable: HTMLTableElement;\r\n    trimButton: HTMLButtonElement;\r\n}\r\n\r\nexport function sortStudents(students: StudentInfo[]) {\r\n    if (!students) return;\r\n    let comparator = new Intl.Collator();\r\n    let sorting = getSavedNameSorting();\r\n    students\r\n        //sort full year students on top.\r\n        .sort((a, b) => {\r\n            if (a.allYearSame && (!b.allYearSame)) {\r\n                return -1;\r\n            } else if ((!a.allYearSame) && b.allYearSame) {\r\n                return 1;\r\n            } else {\r\n                let aName = sorting === NameSorting.LastName ? a.naam + a.voornaam : a.voornaam + a.naam;\r\n                let bName = sorting === NameSorting.LastName ? b.naam + b.voornaam : b.voornaam + b.naam;\r\n                return comparator.compare(aName, bName);\r\n            }\r\n        });\r\n}\r\n","export interface RowFilter {\r\n    context: any,\r\n    rowFilter: (tr: HTMLTableRowElement, context: any) => boolean\r\n}\r\n\r\nexport function combineFilters(f1: RowFilter, f2: RowFilter) {\r\n    return <RowFilter>{\r\n        context: {f1, f2},\r\n        rowFilter: function (tr: HTMLTableRowElement, _context: any): boolean {\r\n            if (!f1.rowFilter(tr, f1.context))\r\n                return false;\r\n            return f2.rowFilter(tr, f2.context);\r\n        }\r\n    }\r\n} /*\r\nCreates a text filter where a comma is interpreted as OR and a plus sign as AND.\r\n */\r\nexport function createTextRowFilter(searchText: string, getRowSearchText: (tr: HTMLTableRowElement) => string): RowFilter {\r\n    let search_OR_list = searchText.split(',').map(txt => txt.trim());\r\n    let context = {\r\n        search_OR_list,\r\n        getRowSearchText\r\n    };\r\n    let rowFilter = function (tr: HTMLTableRowElement, context: any) {\r\n        for (let search of context.search_OR_list) {\r\n            let rowText = context.getRowSearchText(tr);\r\n            if (match_AND_expression(search, rowText))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return {context, rowFilter};\r\n}\r\n\r\n/**\r\n * Try to match a filter expression of type \"string1+string2\", where both strings need to be present.\r\n * @param searchText\r\n * @param rowText\r\n * @return true if all strings match\r\n */\r\nfunction match_AND_expression(searchText: string, rowText: string) {\r\n    let search_AND_list = searchText.split('+').map(txt => txt.trim());\r\n    for (let search of search_AND_list) {\r\n        let caseText = rowText;\r\n        if (search === search.toLowerCase()) { //if all lowercase, make the search case-insensitive\r\n            caseText = rowText.toLowerCase();\r\n        }\r\n        if (!caseText.includes(search))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function filterTableRows(table: (HTMLTableElement | string), rowFilter: RowFilter) {\r\n    if (typeof table === \"string\")\r\n        table = document.getElementById(table) as HTMLTableElement;\r\n    return Array.from(table.tBodies[0].rows)\r\n        .filter(tr => rowFilter.rowFilter(tr, rowFilter.context));\r\n}\r\n\r\nexport function filterTable(table: (HTMLTableElement | string), rowFilter: RowFilter) {\r\n    if (typeof table === \"string\")\r\n        table = document.getElementById(table) as HTMLTableElement;\r\n    for (let tr of table.tBodies[0].rows) {\r\n        tr.style.visibility = \"collapse\";\r\n        tr.style.borderColor = \"transparent\"; //get rid of some risidual border lines\r\n    }\r\n    for (let tr of filterTableRows(table, rowFilter)) {\r\n        if (!tr.dataset.keepHidden) {\r\n            tr.style.visibility = \"visible\";\r\n            tr.style.borderColor = \"\";\r\n        }\r\n    }\r\n}","import {emmet} from \"../libs/Emmeter/html\";\r\n\r\n/*\r\n##  Construct menus as follows:\r\n    div : container for menu\r\n        >button : button to open/close menu\r\n     >>> dropdown menu will be added below this button.\r\n\r\n## Setup after call to setupMenu():\r\n    div.dropDownContainer\r\n        >button.dropDownButton.dropDownIgnoreHide\r\n        >div.dropDownMenu\r\n            button.dropDownItem\r\n            div.dropDownItem\r\n            ...\r\n */\r\n\r\nexport function addMenuItem(menu: HTMLElement, title: string, indentLevel: number, onClick: (ev: MouseEvent) => void) {\r\n    let indentClass = indentLevel ? \".menuIndent\" + indentLevel : \"\";\r\n    let {first} = emmet.appendChild(menu, `button.naked.dropDownItem${indentClass}{${title}}`);\r\n    let item = first as HTMLElement;\r\n    item.onclick = (ev) => {\r\n        closeMenus();\r\n        onClick(ev);\r\n    };\r\n}\r\n\r\nexport function closeMenus() {\r\n    let dropdowns = document.getElementsByClassName(\"dropDownMenu\");\r\n    for (let dropDown of dropdowns) {\r\n        dropDown.classList.remove('show');\r\n    }\r\n}\r\n\r\nfunction onWindowClick(event: MouseEvent) {\r\n    if ((event.target as Element).matches('.dropDownIgnoreHide'))\r\n        return;\r\n    closeMenus();\r\n}\r\n\r\nfunction initMenuEvents() {\r\n    window.onclick = onWindowClick;\r\n}\r\n\r\nexport function addMenuSeparator(menu: HTMLElement, title: string, indentLevel: number) {\r\n    let indentClass = indentLevel ? \".menuIndent\" + indentLevel : \"\";\r\n    let {first} = emmet.appendChild(menu, `div.dropDownSeparator.dropDownIgnoreHide${indentClass}{${title}}`);\r\n    let item = first as HTMLElement;\r\n    item.onclick = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n}\r\n\r\nexport function setupMenu(container: HTMLElement, button: HTMLElement) {\r\n    initMenuEvents();\r\n    container.classList.add(\"dropDownContainer\");\r\n    button.classList.add(\"dropDownIgnoreHide\", \"dropDownButton\");\r\n    let {first} = emmet.appendChild(container as HTMLElement, \"div.dropDownMenu\");\r\n    let menu = first as HTMLElement;\r\n    button.onclick = ev => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let dropDowwnMenu = (ev.target as HTMLElement).closest(\".dropDownContainer\").querySelector(\".dropDownMenu\");\r\n        if (dropDowwnMenu.classList.contains(\"show\")) {\r\n            closeMenus();\r\n            return;\r\n        }\r\n        closeMenus();\r\n        dropDowwnMenu.classList.add(\"show\");\r\n    }\r\n    return menu;\r\n}","import {BlockInfo} from \"./convert\";\r\nimport {createSearchField, distinct, getPageSettings, savePageSettings} from \"../globals\";\r\nimport {combineFilters, createTextRowFilter, filterTable, filterTableRows, RowFilter} from \"../filter\";\r\nimport * as def from \"../def\";\r\nimport {FILTER_INFO_ID, LESSEN_TABLE_ID} from \"../def\";\r\nimport {PageName} from \"../gotoState\";\r\nimport {getDefaultPageSettings, LessenPageState} from \"./build\";\r\nimport {isTrimesterTableVisible} from \"./observer\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\nimport {addMenuItem, setupMenu} from \"../menus\";\r\nimport {scrapeLesInfo, scrapeStudentsCellMeta} from \"./scrape\";\r\n\r\nexport function createBlockFilter(filter: (block: BlockInfo) => boolean): BlockInfo[] {\r\n    return BlockInfo.getAllBlocks().filter(filter);\r\n}\r\n\r\nexport function createRowFilterFromBlockFilter(blocks: BlockInfo[]): RowFilter {\r\n    let ids = distinct(blocks.map(b => b.getIds()).flat());\r\n    return {\r\n        context: {ids},\r\n        rowFilter: function (tr: HTMLTableRowElement, context: any): boolean {\r\n            return context.ids.includes(parseInt(tr.dataset.blockId));\r\n        }\r\n    } as RowFilter;\r\n}\r\n\r\nexport function createQuerySelectorFilter(selector: string): RowFilter {\r\n    return {\r\n        context: undefined,\r\n        rowFilter: function (tr: HTMLTableRowElement, _context: any): boolean {\r\n            return tr.querySelector(selector) != undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport function createInverseFilter(filter: RowFilter): RowFilter {\r\n    return {\r\n        context: filter.context,\r\n        rowFilter: function (tr: HTMLTableRowElement, context: any): boolean {\r\n            return !filter.rowFilter(tr, context);\r\n        }\r\n    };\r\n}\r\n\r\nexport interface TrimFilterContext {\r\n    filteredBlockIds: string[],\r\n    filteredGroupIds: string[],\r\n    filteredHeaderGroupIds: string[],\r\n}\r\n\r\n/*\r\nBubble up the filter to the group level and then include all the sibling blocks of those groups.\r\n */\r\nexport function createAncestorFilter(rowPreFilter: RowFilter): RowFilter {\r\n    let filteredRows = filterTableRows(def.TRIM_TABLE_ID, rowPreFilter);\r\n\r\n    let filteredBlockIds = [...new Set(filteredRows.filter(tr => tr.dataset.blockId !== \"groupTitle\").map(tr => tr.dataset.blockId))];\r\n    let filteredGroupIds = [...new Set(filteredRows.map(tr => tr.dataset.groupId))];\r\n    //also show all rows of headers that match the text filter.\r\n    let filteredHeaderGroupIds = [...new Set(filteredRows.filter(tr => tr.dataset.blockId === \"groupTitle\").map(tr => tr.dataset.groupId))];\r\n\r\n    function siblingsAndAncestorsFilter(tr: HTMLTableRowElement, context: TrimFilterContext) {\r\n        //display all child rows for the headers that match\r\n        if (context.filteredHeaderGroupIds.includes(tr.dataset.groupId))\r\n            return true;\r\n        //display all siblings of non-header rows, thus the full block\r\n        if (context.filteredBlockIds.includes(tr.dataset.blockId))\r\n            return true;\r\n        //display the ancestor (header) rows of matching non-header rows\r\n        return context.filteredGroupIds.includes(tr.dataset.groupId) && tr.classList.contains(\"groupHeader\");\r\n    }\r\n\r\n    return {context: {filteredBlockIds, filteredGroupIds, filteredHeaderGroupIds} as TrimFilterContext, rowFilter: siblingsAndAncestorsFilter};\r\n}\r\n\r\nexport const TXT_FILTER_ID = \"txtFilter\";\r\n\r\nexport function setFilterInfo(text: string) {\r\n    document.getElementById(FILTER_INFO_ID).innerText = text;\r\n}\r\n\r\nexport function applyFilters() {\r\n    let pageState = getPageSettings(PageName.Lessen, getDefaultPageSettings()) as LessenPageState;\r\n    pageState.searchText = (document.getElementById(TXT_FILTER_ID) as HTMLInputElement).value;\r\n    savePageSettings(pageState);\r\n\r\n    let extraFilter: RowFilter = undefined;\r\n    if (isTrimesterTableVisible()) {\r\n\r\n        let textPreFilter = createTextRowFilter(pageState.searchText, (tr) => tr.textContent);\r\n        let preFilter = textPreFilter;\r\n        if (pageState.filterOffline) {\r\n            extraFilter = createRowFilterFromBlockFilter(createBlockFilter(b => b.hasSomeOfflineLessen()));\r\n        } else if (pageState.filterOnline) {\r\n            extraFilter = createRowFilterFromBlockFilter(createBlockFilter(b => !b.hasSomeOfflineLessen()))\r\n        } else if (pageState.filterNoTeacher) {\r\n            extraFilter = createRowFilterFromBlockFilter(createBlockFilter(b => b.hasMissingTeachers()));\r\n        } else if (pageState.filterNoMax) {\r\n            extraFilter = createRowFilterFromBlockFilter(createBlockFilter(b => b.hasMissingMax()));\r\n        } else if (pageState.filterFullClass) {\r\n            extraFilter = createRowFilterFromBlockFilter(createBlockFilter(b => b.hasFullClasses()));\r\n        } else if (pageState.filterOnlineAlc) {\r\n            extraFilter = createRowFilterFromBlockFilter(createBlockFilter(b => b.hasOnlineAlcClasses())); //doesn't really make sense for trimesters, but whatever.\r\n        } else if (pageState.filterWarnings) {\r\n            extraFilter =  createRowFilterFromBlockFilter(createBlockFilter(b => b.hasWarningLessons()));\r\n        }\r\n        if (extraFilter)\r\n            preFilter = combineFilters(createAncestorFilter(textPreFilter), extraFilter);\r\n\r\n        let filter = createAncestorFilter(preFilter);\r\n        filterTable(def.TRIM_TABLE_ID, filter);\r\n    } else { // Filter original table:\r\n        let textFilter = createTextRowFilter(pageState.searchText, (tr) => tr.cells[0].textContent);\r\n        let filter = textFilter;\r\n        if (pageState.filterOffline) {\r\n            extraFilter = createQuerySelectorFilter(\"td>i.fa-eye-slash\");\r\n        } else if (pageState.filterOnline) {\r\n            extraFilter = createInverseFilter(createQuerySelectorFilter(\"td>i.fa-eye-slash\"));\r\n        } else if (pageState.filterNoTeacher) {\r\n            extraFilter = createTextRowFilter(\"(geen klasleerkracht)\", (tr) => tr.cells[0].textContent);\r\n        } else if (pageState.filterNoMax) {\r\n            extraFilter = createTextRowFilter(\"999\", (tr) => tr.cells[1].textContent);\r\n        } else if (pageState.filterFullClass) {\r\n            extraFilter = {\r\n                context: undefined,\r\n                rowFilter(tr: HTMLTableRowElement, context: any): boolean {\r\n                    let scrapeResult = scrapeStudentsCellMeta(tr.cells[1]);\r\n                    return scrapeResult.aantal >= scrapeResult.maxAantal;\r\n                }\r\n            };\r\n        } else if (pageState.filterOnlineAlc) {\r\n             extraFilter = {\r\n                 context: undefined,\r\n                 rowFilter(tr: HTMLTableRowElement, context: any): boolean {\r\n                     let scrapeResult = scrapeLesInfo(tr.cells[0]);\r\n                     return scrapeResult.online && scrapeResult.alc;\r\n                 }\r\n             }\r\n        } else if (pageState.filterWarnings) {\r\n            extraFilter = createQuerySelectorFilter(\".text-warning\");\r\n        }\r\n\r\n        if (extraFilter)\r\n            filter = combineFilters(textFilter, extraFilter);\r\n        filterTable(LESSEN_TABLE_ID, filter);\r\n    }\r\n    if (pageState.filterOnline) {\r\n        setFilterInfo(\"Online lessen\");\r\n    } else if (pageState.filterOffline) {\r\n        setFilterInfo(\"Offline lessen\");\r\n    } else if (pageState.filterNoTeacher) {\r\n        setFilterInfo(\"Zonder leraar\");\r\n    } else if (pageState.filterNoMax) {\r\n        setFilterInfo(\"Zonder maximum\");\r\n    } else if (pageState.filterFullClass) {\r\n        setFilterInfo(\"Volle lessen\");\r\n    } else if (pageState.filterOnlineAlc) {\r\n        setFilterInfo(\"Online ALC lessen\");\r\n    } else if (pageState.filterWarnings) {\r\n        setFilterInfo(\"Opmerkingen\");\r\n    }\r\n\r\n    else {\r\n        setFilterInfo(\"\");\r\n    }\r\n}\r\n\r\nexport function setExtraFilter(set: (pageState: LessenPageState) => void) {\r\n    let pageState = getPageSettings(PageName.Lessen, getDefaultPageSettings()) as LessenPageState;\r\n    pageState.filterOffline = false;\r\n    pageState.filterOnline = false;\r\n    pageState.filterNoTeacher = false;\r\n    pageState.filterNoMax = false;\r\n    pageState.filterFullClass = false;\r\n    pageState.filterOnlineAlc = false;\r\n    pageState.filterWarnings = false;\r\n    set(pageState);\r\n    savePageSettings(pageState);\r\n    applyFilters();\r\n}\r\n\r\nexport function addFilterFields() {\r\n    let divButtonNieuweLes = document.querySelector(\"#lessen_overzicht > div > button\");\r\n    if (!document.getElementById(TXT_FILTER_ID)) {\r\n        let pageState = getPageSettings(PageName.Lessen, getDefaultPageSettings()) as LessenPageState;\r\n        let searchField = createSearchField(TXT_FILTER_ID, applyFilters, pageState.searchText);\r\n        divButtonNieuweLes.insertAdjacentElement(\"afterend\", searchField);\r\n        //menu\r\n        let {first: span, last: idiom} = emmet.insertAfter(searchField, 'span.btn-group-sm>button.btn.btn-sm.btn-outline-secondary.ml-2>i.fas.fa-list');\r\n        let menu = setupMenu(span as HTMLElement, idiom.parentElement);\r\n        addMenuItem(menu, \"Toon alles\", 0, _ => setExtraFilter(_ => {}));\r\n        addMenuItem(menu, \"Filter online lessen\", 0, _ => setExtraFilter(pageState => pageState.filterOnline = true));\r\n        addMenuItem(menu, \"Filter offline lessen\", 0, _ => setExtraFilter(pageState => pageState.filterOffline = true));\r\n        addMenuItem(menu, \"Lessen zonder leraar\", 0, _ => setExtraFilter(pageState => pageState.filterNoTeacher = true));\r\n        addMenuItem(menu, \"Lessen zonder maximum\", 0, _ => setExtraFilter(pageState => pageState.filterNoMax = true));\r\n        addMenuItem(menu, \"Volle lessen\", 0, _ => setExtraFilter(pageState => pageState.filterFullClass = true));\r\n        addMenuItem(menu, \"Online ALC lessen\", 0, _ => setExtraFilter(pageState => pageState.filterOnlineAlc = true));\r\n        addMenuItem(menu, \"Opmerkingen\", 0, _ => setExtraFilter(pageState => pageState.filterWarnings = true));\r\n        emmet.insertAfter(idiom.parentElement, `span#${def.FILTER_INFO_ID}.filterInfo`);\r\n    }\r\n\r\n    applyFilters();\r\n}","import {scrapeLessenOverzicht, scrapeModules} from \"./scrape\";\r\nimport {buildTableData} from \"./convert\";\r\nimport {buildTrimesterTable, getDefaultPageSettings, getSavedNameSorting, LessenPageState, NameSorting, setSavedNameSorting, TrimElements, TrimesterGrouping} from \"./build\";\r\nimport * as def from \"../def\";\r\nimport {LESSEN_TABLE_ID} from \"../def\";\r\nimport {findSchooljaar, getPageSettings, savePageSettings, setButtonHighlighted} from \"../globals\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport * as html from \"../../libs/Emmeter/html\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\nimport {getGotoStateOrDefault, Goto, PageName, saveGotoState} from \"../gotoState\";\r\nimport {addFilterFields, applyFilters} from \"./filter\";\r\n\r\nexport default new HashObserver(\"#lessen-overzicht\", onMutation);\r\n\r\nfunction onMutation (mutation: MutationRecord) {\r\n    let btnZoek = document.getElementById(\"btn_lessen_overzicht_zoeken\");\r\n    if(btnZoek) {\r\n        if (!document.getElementById(\"btn_show_trimesters\")) {\r\n            let {first} = emmet.insertAfter(btnZoek,\r\n                \"button.btn.btn-sm.btn-primary.w-100.mt-1#btn_show_trimesters>i.fas.fa-sitemap+{ Toon trimesters}\");\r\n            (first as HTMLElement).onclick = onClickShowTrimesters;\r\n        }\r\n    }\r\n\r\n    let lessenOverzicht = document.getElementById(def.LESSEN_OVERZICHT_ID);\r\n    if (mutation.target !== lessenOverzicht) {\r\n        return false;\r\n    }\r\n\r\n    let pageState = getGotoStateOrDefault(PageName.Lessen);\r\n    switch (pageState.goto) {\r\n        case Goto.Lessen_trimesters_set_filter:\r\n            pageState.goto = Goto.None;\r\n            saveGotoState(pageState);\r\n            onClickShowTrimesters();\r\n            return true;\r\n        case Goto.Lessen_trimesters_show:\r\n            pageState.goto = Goto.None;\r\n            saveGotoState(pageState);\r\n            return true;\r\n    }\r\n\r\n    return decorateTable() !== undefined;\r\n}\r\n\r\nfunction onClickShowTrimesters() {\r\n    document.getElementById(\"lessen_overzicht\").innerHTML = \"<span class=\\\"text-muted\\\">\\n\" +\r\n        \"                <i class=\\\"fa fa-cog fa-spin\\\"></i> <i>Bezig met laden...</i>\\n\" +\r\n        \"            </span>\";\r\n    setTrimesterFilterAndFetch().then((text) => {\r\n        document.getElementById(\"lessen_overzicht\").innerHTML = text;\r\n        showTrimesterTable(decorateTable(), true);\r\n    });\r\n}\r\n\r\nasync function setTrimesterFilterAndFetch() {\r\n    let params = new URLSearchParams({\r\n        schooljaar: findSchooljaar(),\r\n        domein:\"3\", //muziek\r\n        vestigingsplaats: \"\",\r\n        vak: \"\",\r\n        graad: \"\",\r\n        leerkracht: \"\",\r\n        ag: \"\",\r\n        lesdag: \"\",\r\n        verberg_online:\"-1\",\r\n        soorten_lessen:\"3\", //modules!\r\n        volzet:\"-1\",\r\n        // laad_tabel:\"1\"\r\n    });\r\n    let url = \"https://administratie.dko3.cloud/views/lessen/overzicht/index.filters.php\";\r\n    await fetch(url+\"?\" + params);\r\n    url = \"https://administratie.dko3.cloud/views/lessen/overzicht/index.lessen.php\";\r\n    let res = await fetch(url+\"?\" + params);\r\n    return res.text();\r\n}\r\n\r\nfunction createTrimTableDiv() {\r\n    let trimDiv = document.getElementById(def.TRIM_DIV_ID);\r\n    if (!trimDiv) {\r\n        trimDiv = document.createElement(\"div\");\r\n        let originalTable = document.getElementById(LESSEN_TABLE_ID);\r\n        originalTable.insertAdjacentElement(\"afterend\", trimDiv);\r\n        trimDiv.id = def.TRIM_DIV_ID;\r\n    }\r\n    return trimDiv;\r\n}\r\n\r\nfunction decorateTable() {\r\n    let printButton = document.getElementById(\"btn_print_overzicht_lessen\") as HTMLButtonElement;\r\n    if (!printButton) {\r\n        return undefined;\r\n    }\r\n    let copyLessonButton = printButton.parentElement.querySelector(\"button:has(i.fa-reply-all)\") as HTMLButtonElement;\r\n    if(copyLessonButton?.title === \"\") {\r\n        copyLessonButton.title = copyLessonButton.textContent.replaceAll(\"\\n\", \" \").replaceAll(\"      \", \" \").replaceAll(\"     \", \" \").replaceAll(\"    \", \" \").replaceAll(\"   \", \" \").replaceAll(\"  \", \" \");\r\n        copyLessonButton.childNodes.forEach(node => {\r\n            if(node.nodeType === Node.TEXT_NODE)\r\n                node.remove();\r\n        });\r\n        copyLessonButton.querySelector(\"strong\")?.remove();\r\n        copyLessonButton.style.backgroundColor = \"red\";\r\n        copyLessonButton.style.color = \"white\";\r\n    }\r\n\r\n    //reset state\r\n    let overzichtDiv = document.getElementById(def.LESSEN_OVERZICHT_ID);\r\n    createTrimTableDiv();\r\n    overzichtDiv.dataset.filterFullClasses = \"false\";\r\n\r\n    let badges = document.getElementsByClassName(\"badge\");\r\n    let hasModules = Array.from(badges).some((el) => el.textContent === \"module\");\r\n\r\n    if (hasModules) {\r\n        addButton(printButton, def.TRIM_BUTTON_ID, \"Toon trimesters\", onClickToggleTrimesters, \"fa-sitemap\");\r\n    }\r\n    addFilterFields();\r\n\r\n    return getTrimPageElements();\r\n}\r\n\r\nfunction addButton(printButton: HTMLButtonElement, buttonId: string, title: string, clickFunction: (this: GlobalEventHandlers, ev: MouseEvent) => any, imageId: string) {\r\n    let button = document.getElementById(buttonId);\r\n    if (button === null) {\r\n        const button = document.createElement(\"button\",);\r\n        button.classList.add(\"btn\", \"btn-sm\", \"btn-outline-secondary\", \"w-100\");\r\n        button.id = buttonId;\r\n        button.style.marginTop = \"0\";\r\n        button.onclick = clickFunction;\r\n        button.title = title;\r\n        const buttonContent = document.createElement(\"i\");\r\n        button.appendChild(buttonContent);\r\n        buttonContent.classList.add(\"fas\", imageId);\r\n        printButton.insertAdjacentElement(\"beforebegin\", button);\r\n    }\r\n}\r\n\r\nfunction onClickToggleTrimesters() {\r\n    showTrimesterTable(getTrimPageElements(), !isTrimesterTableVisible());\r\n}\r\n\r\nexport function isTrimesterTableVisible() {\r\n    return document.getElementById(LESSEN_TABLE_ID).style.display === \"none\";\r\n}\r\n\r\nexport function getTrimPageElements(){\r\n    return <TrimElements>{\r\n        trimTable: document.getElementById(def.TRIM_TABLE_ID),\r\n        trimTableDiv: createTrimTableDiv(),\r\n        lessenTable: document.getElementById(LESSEN_TABLE_ID),\r\n        trimButton: document.getElementById(def.TRIM_BUTTON_ID)\r\n    }\r\n}\r\n\r\nexport function showTrimesterTable(trimElements: TrimElements, show: boolean) {\r\n    trimElements.trimTable?.remove();\r\n    let inputModules = scrapeModules(trimElements.lessenTable);\r\n    let tableData = buildTableData(inputModules.trimesterModules.concat(inputModules.jaarModules));\r\n    buildTrimesterTable(tableData, trimElements);\r\n\r\n    trimElements.lessenTable.style.display = show ? \"none\" : \"table\";\r\n    trimElements.trimTable.style.display = show ? \"table\" : \"none\";\r\n    trimElements.trimButton.title = show ? \"Toon normaal\" : \"Toon trimesters\";\r\n    setButtonHighlighted(def.TRIM_BUTTON_ID, show);\r\n    setSorteerLine(show);\r\n    applyFilters();\r\n}\r\n\r\nfunction addSortingAnchorOrText() {\r\n    let sorteerDiv = document.getElementById(\"trimSorteerDiv\");\r\n    sorteerDiv.innerHTML = \"Sorteer : \";\r\n    if(getSavedNameSorting() === NameSorting.FirstName) {\r\n        html.emmet.append(sorteerDiv, \"a{Naam}[href=\\\"#\\\"]+{ | }+strong{Voornaam}\");\r\n    } else {\r\n        html.emmet.append(sorteerDiv, \"strong{Naam}+{ | }+a{Voornaam}[href=\\\"#\\\"]\");\r\n    }\r\n    for (let anchor of sorteerDiv.querySelectorAll(\"a\")) {\r\n        anchor.onclick = (mouseEvent: MouseEvent) => {\r\n            if ((mouseEvent.target as HTMLElement).textContent === \"Naam\")\r\n                setSavedNameSorting(NameSorting.LastName);\r\n            else\r\n                setSavedNameSorting(NameSorting.FirstName);\r\n            showTrimesterTable(getTrimPageElements(), true);\r\n            addSortingAnchorOrText();\r\n            return false;\r\n        };\r\n    }\r\n}\r\n\r\nfunction setSorteerLine(showTrimTable: boolean) {\r\n    let pageState = getPageSettings(PageName.Lessen, getDefaultPageSettings()) as LessenPageState;\r\n    let oldSorteerSpan = document.querySelector(\"#lessen_overzicht > span\") as HTMLElement;\r\n    let newGroupingDiv = document.getElementById(\"trimGroepeerDiv\");\r\n    if(!newGroupingDiv) {\r\n        newGroupingDiv = emmet.insertAfter(oldSorteerSpan, \"div#trimGroepeerDiv.text-muted\").first as HTMLElement;\r\n    }\r\n    let newSortingDiv = document.getElementById(\"trimSorteerDiv\");\r\n    if(!newSortingDiv) {\r\n        html.emmet.insertBefore(newGroupingDiv, 'div#trimSorteerDiv.text-muted');\r\n        addSortingAnchorOrText();\r\n    }\r\n    newGroupingDiv.innerText = \"Groepeer: \";\r\n    oldSorteerSpan.style.display = showTrimTable ? \"none\" : \"\";\r\n    newGroupingDiv.style.display = showTrimTable ? \"\" : \"none\";\r\n\r\n    appendGroupingAnchorOrText(newGroupingDiv, TrimesterGrouping.InstrumentTeacherHour, pageState.grouping, \"\");\r\n    appendGroupingAnchorOrText(newGroupingDiv, TrimesterGrouping.TeacherInstrumentHour, pageState.grouping, \" | \");\r\n    appendGroupingAnchorOrText(newGroupingDiv, TrimesterGrouping.TeacherHour, pageState.grouping, \" | \");\r\n    appendGroupingAnchorOrText(newGroupingDiv, TrimesterGrouping.Instrument, pageState.grouping, \" | \");\r\n    appendGroupingAnchorOrText(newGroupingDiv, TrimesterGrouping.Teacher, pageState.grouping, \" | \");\r\n}\r\n\r\nfunction appendGroupingAnchorOrText(target: HTMLElement, grouping: TrimesterGrouping, activeSorting: TrimesterGrouping, separator: string) {\r\n    let sortingText = \"\";\r\n    switch (grouping) {\r\n        case TrimesterGrouping.InstrumentTeacherHour: sortingText = \"instrument+leraar+lesuur\"; break;\r\n        case TrimesterGrouping.TeacherInstrumentHour: sortingText = \"leraar+instrument+lesuur\"; break;\r\n        case TrimesterGrouping.TeacherHour: sortingText = \"leraar+lesuur\"; break;\r\n        case TrimesterGrouping.InstrumentHour: sortingText = \"instrument+lesuur\"; break;\r\n        case TrimesterGrouping.Instrument: sortingText = \"instrument\"; break;\r\n        case TrimesterGrouping.Teacher: sortingText = \"leraar\"; break;\r\n    }\r\n\r\n    if(separator)\r\n        separator = \"{\"+separator+\"}+\";\r\n\r\n    if (activeSorting === grouping) {\r\n        emmet.appendChild(target,  separator + \"strong{\" + sortingText + \"}\");\r\n    } else {\r\n        let button = emmet.appendChild(target, separator + \"button.likeLink{\" + sortingText + \"}\").last as HTMLButtonElement;\r\n        button.onclick = () => {\r\n            let pageState = getPageSettings(PageName.Lessen, getDefaultPageSettings()) as LessenPageState;\r\n            pageState.grouping = grouping;\r\n            savePageSettings(pageState);\r\n            showTrimesterTable(getTrimPageElements(), true);\r\n            return false;\r\n        };\r\n    }\r\n}","import {HashObserver} from \"../pageObserver\";\r\n\r\nexport default new HashObserver(\"#lessen-les\", onMutation);\r\n\r\nfunction onMutation(mutation: MutationRecord) {\r\n    let tabLeerlingen = document.getElementById(\"les_leerlingen_leerlingen\");\r\n    if (mutation.target === tabLeerlingen) {\r\n        onLeerlingenChanged();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onLeerlingenChanged() {\r\n    console.log(\"Les-Leerlingen changed.\")\r\n    addSortVoornaamLink();\r\n}\r\n\r\nfunction addSortVoornaamLink() {\r\n    try {\r\n        let headerSpans = document.querySelectorAll(\"#les_leerlingen_leerlingen > span\");\r\n        let sortSpan = Array.from(headerSpans).find((value: HTMLSpanElement) => value.textContent.includes(\"gesorteerd op:\"));\r\n        let graadEnNaam = Array.from(sortSpan.querySelectorAll(\"a\")).find(anchor => anchor.textContent === \"graad en naam\");\r\n        const SORT_VOORNAAM_ID = \"dko_plugin_sortVoornaam\";\r\n        if(document.getElementById(SORT_VOORNAAM_ID))\r\n            return;\r\n        let anchorSortVoornaam = document.createElement(\"a\");\r\n        anchorSortVoornaam.id = SORT_VOORNAAM_ID;\r\n        anchorSortVoornaam.href = \"#\";\r\n        anchorSortVoornaam.innerText = \"voornaam\";\r\n        anchorSortVoornaam.classList.add(\"text-muted\");\r\n        anchorSortVoornaam.onclick = onSortVoornaam;\r\n        sortSpan.insertBefore(anchorSortVoornaam, graadEnNaam);\r\n        sortSpan.insertBefore(document.createTextNode(\" | \"), graadEnNaam);\r\n    }\r\n    catch (e) {}\r\n}\r\n\r\nfunction onSortVoornaam(event: MouseEvent) {\r\n    sortVoornaam(event);\r\n    switchNaamVoornaam(event);\r\n    return false;\r\n}\r\n\r\nfunction sortVoornaam(event: MouseEvent) {\r\n    let rows: HTMLTableRowElement[] = Array.from(document.querySelectorAll(\"#les_leerlingen_leerlingen > table > tbody > tr\"));\r\n\r\n    rows.sort((tr1, tr2) => {\r\n        let name1 = tr1.querySelector(\"td > strong\").textContent;\r\n        let name2 = tr2.querySelector(\"td > strong\").textContent;\r\n        let voornaam1 = name1.split(\",\").pop();\r\n        let voornaam2 = name2.split(\",\").pop();\r\n        return voornaam1.localeCompare(voornaam2);\r\n    });\r\n\r\n    let table: HTMLTableElement = document.querySelector(\"#les_leerlingen_leerlingen > table\");\r\n    rows.forEach(row => table.tBodies[0].appendChild(row));\r\n\r\n    Array.from(document.querySelectorAll(\"#les_leerlingen_leerlingen > span > a\"))\r\n        .forEach((a) => a.classList.add(\"text-muted\"));\r\n    (event.target as HTMLElement).classList.remove(\"text-muted\");\r\n}\r\n\r\nfunction switchNaamVoornaam(_event: MouseEvent) {\r\n    let rows: HTMLTableRowElement[] = Array.from(document.querySelectorAll(\"#les_leerlingen_leerlingen > table > tbody > tr\"));\r\n\r\n    rows.forEach((tr) => {\r\n        let strong = tr.querySelector(\"td > strong\");\r\n        let name = strong.textContent;\r\n        let split = name.split(\",\");\r\n        let voornaam = split.pop() ?? \"\";\r\n        let naam = split.pop() ?? \"\";\r\n        strong.textContent = voornaam + \" \" + naam;\r\n    });\r\n}\r\n","import {getUserAndSchoolName, registerSettingsObserver} from \"../globals\";\r\nimport {PageObserver} from \"../pageObserver\";\r\nimport {getGlobalSettings, options} from \"../plugin_options/options\";\r\n\r\nexport default new PageObserver(setSchoolBackground);\r\n\r\nregisterSettingsObserver(setSchoolBackground);\r\n\r\nfunction setSchoolBackground () {\r\n    let {schoolName} = getUserAndSchoolName();\r\n    let isMyAcademy = options.myAcademies\r\n        .split(\"\\n\")\r\n        .filter((needle) => needle !== \"\")\r\n        .find((needle) =>  schoolName.includes(needle)) != undefined;\r\n    if (options.myAcademies === \"\") {\r\n        isMyAcademy = true;\r\n    }\r\n    if (isMyAcademy || getGlobalSettings().globalHide === true || options.markOtherAcademies === false) {\r\n        document.body.classList.remove(\"otherSchool\");\r\n    } else {\r\n        document.body.classList.add(\"otherSchool\");\r\n    }\r\n}","import * as def from \"../def\";\r\nimport {createValidId, findSchooljaar, getSchoolIdString} from \"../globals\";\r\nimport {VakLeraar} from \"./scrapeUren\";\r\nimport {TableFetcher} from \"../table/tableFetcher\";\r\nimport {cloud} from \"../cloud\";\r\nimport {UrenData} from \"./urenData\";\r\n\r\nlet isUpdatePaused = true;\r\nlet cellChanged = false;\r\nlet popoverIndex = 1;\r\n\r\nlet editableObserver = new MutationObserver((mutationList, observer) => editableObserverCallback(mutationList, observer));\r\n\r\nsetInterval(onTimer, 5000);\r\nfunction onTimer() {\r\n    checkAndUpdate(globalUrenData);\r\n}\r\nlet globalUrenData: UrenData = undefined;\r\n\r\ninterface ColDef {\r\n    label: string,\r\n    classList: string[],\r\n    factor: number,\r\n    getText?: (ctx: Context) => string,\r\n    getValue?: (ctx: Context) => number,\r\n    totals?: boolean,\r\n    calculated?: boolean,\r\n    fill?:(ctx: Context) => (number|undefined),\r\n    colIndex?: number,\r\n    total?: number\r\n}\r\n\r\nlet colDefsArray: {key: string, def: ColDef}[] = [\r\n    {key:\"vak\", def: { label:\"Vak\", classList: [], factor: 1.0, getText: (ctx) => ctx.vakLeraar.vak}},\r\n    {key:\"leraar\", def: { label:\"Leraar\", classList: [], factor: 1.0, getText: (ctx) => ctx.vakLeraar.leraar.replaceAll(\"{\", \"\").replaceAll(\"}\", \"\")}},\r\n    {key:\"grjr2_1\", def: { label:\"2.1\", classList: [], factor: 1/4, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr2_2\", def: { label:\"2.2\", classList: [], factor: 1/4, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr2_3\", def: { label:\"2.3\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr2_4\", def: { label:\"2.4\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_2e_gr\", def: { label:\"uren\\n2e gr\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr2_1\", \"grjr2_2\", \"grjr2_3\", \"grjr2_4\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"grjr3_1\", def: { label:\"3.1\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr3_2\", def: { label:\"3.2\", classList: [], factor: 1/3, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr3_3\", def: { label:\"3.3\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_3e_gr\", def: { label:\"uren\\n3e gr\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr3_1\", \"grjr3_2\", \"grjr3_3\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"grjr4_1\", def: { label:\"4.1\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr4_2\", def: { label:\"4.2\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr4_3\", def: { label:\"4.3\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_4e_gr\", def: { label:\"uren\\n4e gr\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr4_1\", \"grjr4_2\", \"grjr4_3\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"grjr_s_1\", def: { label:\"S.1\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n    {key:\"grjr_s_2\", def: { label:\"S.2\", classList: [], factor: 1/2, getValue: (ctx) => ctx.vakLeraar.countMap.get(ctx.colDef.label).count, fill: fillGraadCell }},\r\n\r\n    {key:\"uren_spec\", def: { label:\"uren\\nspec\", classList: [\"yellow\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr_s_1\", \"grjr_s_2\"]), totals:true, calculated:true}},\r\n\r\n    {key:\"aantal_lln\", def: { label:\"aantal\\nlln\", classList: [\"blueish\"], factor: 1.0, getValue: (ctx) => calcUren(ctx, [\"grjr2_1\", \"grjr2_2\", \"grjr2_3\", \"grjr2_4\", \"grjr3_1\", \"grjr3_2\", \"grjr3_3\", \"grjr4_1\", \"grjr4_2\", \"grjr4_3\", \"grjr_s_1\", \"grjr_s_2\"]), totals:true, calculated:true}},\r\n    {key:\"tot_uren\", def: { label:\"tot\\nuren\", classList: [\"creme\"], factor: 1.0, getValue: (ctx) => calcUrenFactored(ctx, [\"grjr2_1\", \"grjr2_2\", \"grjr2_3\", \"grjr2_4\", \"grjr3_1\", \"grjr3_2\", \"grjr3_3\", \"grjr4_1\", \"grjr4_2\", \"grjr4_3\", \"grjr_s_1\", \"grjr_s_2\"]), totals:true, calculated:true}},\r\n    {key:\"over\", def: { label:\"Over\", classList: [], factor: 1.0, getValue: (ctx) => calcOver(ctx), calculated:true}},\r\n];\r\n\r\nlet colDefs = new Map(colDefsArray.map((def) => [def.key, def.def]));\r\n\r\nfunction getYearKeys(year: number) {\r\n    let yrPrev = year - 2000 - 1;\r\n    let yrNow = yrPrev + 1;\r\n    let yrNext = yrPrev + 2;\r\n    let keyPrev = `uren_${yrPrev}_${yrNow}`;\r\n    let keyNext = `uren_${yrNow}_${yrNext}`;\r\n    return {yrPrev, yrNow, yrNext, keyPrev, keyNext};\r\n}\r\n\r\nfunction updateColDefs(year: number) {\r\n    let {yrPrev, yrNow, yrNext, keyPrev, keyNext} = getYearKeys(year);\r\n    let yearColDefs = new Map();\r\n    yearColDefs.set(keyPrev, { label:`Uren\\n${yrPrev}-${yrNow}`, classList: [\"editable_number\"], factor: 1.0, getValue: (ctx: Context) => parseInt(ctx.data.fromCloud.columnMap.get(`uren_${yrPrev}_${yrNow}`)?.get(ctx.vakLeraar.id)), totals:true});\r\n    yearColDefs.set(keyNext, { label:`Uren\\n${yrNow}-${yrNext}`, classList: [\"editable_number\"], factor: 1.0, getValue: (ctx: Context) => parseInt(ctx.data.fromCloud.columnMap.get(`uren_${yrNow}_${yrNext}`)?.get(ctx.vakLeraar.id)), totals:true});\r\n    colDefs = new Map([...yearColDefs, ...new Map(colDefsArray.map((def) => [def.key, def.def]))]);\r\n    let idx = 0;\r\n    colDefs.forEach(colDef => {\r\n        colDef.colIndex = idx++;\r\n        colDef.total = 0;\r\n    });\r\n}\r\n\r\n\r\nfunction calcOver(ctx: Context) {\r\n    let totUren = getColValue(ctx, \"tot_uren\");\r\n    if (isNaN(totUren)) {\r\n        totUren = 0;\r\n    }\r\n    let urenJaar = getColValue(ctx, ctx.yearKey);\r\n    if (isNaN(urenJaar)) {\r\n        urenJaar = 0;\r\n    }\r\n    return urenJaar - totUren;\r\n\r\n}\r\n\r\ninterface Context {\r\n    vakLeraar: VakLeraar;\r\n    colKey: string;\r\n    tr: HTMLTableRowElement,\r\n    td: HTMLTableCellElement,\r\n    colDef: ColDef,\r\n    colDefs: Map<string, ColDef>,\r\n    data: UrenData,\r\n    yearKey: string\r\n}\r\n\r\nfunction getColValue(ctx: Context, colKey: string) {\r\n\r\n    let newCtx: Context = {...ctx};\r\n    newCtx.colKey = colKey;\r\n\r\n    newCtx.colDef = newCtx.colDefs.get(colKey);\r\n    return newCtx.colDef.getValue(newCtx);\r\n}\r\n\r\nfunction editableObserverCallback(mutationList: MutationRecord[], _observer: MutationObserver) {\r\n    if (mutationList.every((mut) => mut.type === \"attributes\"))\r\n        return; //ignore attrubute changes.\r\n    cellChanged = true;\r\n}\r\n\r\nexport function getUrenVakLeraarFileName() {\r\n    return getSchoolIdString() + \"_\" + \"uren_vak_lk_\" + findSchooljaar().replace(\"-\", \"_\") + \".json\";\r\n}\r\n\r\nfunction checkAndUpdate(urenData: UrenData) {\r\n    if(isUpdatePaused) {\r\n        return;\r\n    }\r\n    if(!cellChanged) {\r\n        return;\r\n    }\r\n    cellChanged = false;\r\n    let colKeys = getYearKeys(urenData.year);\r\n    updateCloudColumnMapFromScreen(urenData, colKeys.keyPrev);\r\n    updateCloudColumnMapFromScreen(urenData, colKeys.keyNext);\r\n\r\n    cloud.json.upload(\r\n        getUrenVakLeraarFileName(),\r\n        urenData.fromCloud.toJson(colKeys.keyPrev, colKeys.keyNext))\r\n        .then(_r => { console.log(\"Uploaded uren.\")});\r\n\r\n    recalculate(urenData);\r\n}\r\n\r\nfunction updateCloudColumnMapFromScreen(urenData: UrenData, colKey: string) {\r\n    let colDef = colDefs.get(colKey);\r\n    for(let tr of document.querySelectorAll(\"#\"+def.COUNT_TABLE_ID+\" tbody tr\")) {\r\n        urenData.fromCloud.columnMap.get(colKey).set(tr.id, tr.children[colDef.colIndex].textContent);\r\n    }\r\n}\r\n\r\nfunction observeTable(observe: boolean) {\r\n    const config = {\r\n        attributes: true,\r\n        childList: true,\r\n        subtree: true,\r\n        characterData: true\r\n    };\r\n    let table = document.getElementById(def.COUNT_TABLE_ID);\r\n    if(observe) {\r\n        editableObserver.takeRecords(); //clear\r\n        editableObserver.observe(table, config);\r\n    } else {\r\n        editableObserver.disconnect();\r\n    }\r\n}\r\n\r\nfunction fillCell(ctx: Context): (number| undefined) {\r\n    if(ctx.colDef.getText) {\r\n        ctx.td.innerText = ctx.colDef.getText(ctx);\r\n        return undefined;\r\n    }\r\n    if (ctx.colDef.fill) {\r\n        ctx.colDef.fill(ctx);\r\n        return undefined;\r\n    }\r\n    let theValue = ctx.colDef.getValue(ctx);\r\n    ctx.td.innerText = trimNumber(theValue);\r\n    return theValue;\r\n}\r\n\r\nfunction calculateAndSumCell(colDef: ColDef, ctx: Context, onlyRecalc: boolean) {\r\n    let theValue = undefined;\r\n    if (colDef.calculated || !onlyRecalc)\r\n        theValue = fillCell(ctx);\r\n    if (colDef.totals) {\r\n        if (!theValue)\r\n            theValue = colDef.getValue(ctx); //get value when not a calculated value.\r\n        if (theValue)\r\n            colDef.total += theValue;\r\n    }\r\n}\r\n\r\nfunction clearTotals() {\r\n    for (let [_colKey, colDef] of colDefs) {\r\n        if (colDef.totals) {\r\n            colDef.total = 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction recalculate(urenData: UrenData) {\r\n    isUpdatePaused = true;\r\n    observeTable(false);\r\n    clearTotals();\r\n\r\n    let yearKey = getYearKeys(urenData.year).keyNext;\r\n\r\n    for (let [vakLeraarKey, vakLeraar] of urenData.vakLeraars) {\r\n        let tr = document.getElementById(createValidId(vakLeraarKey)) as HTMLTableRowElement;\r\n        for(let [colKey, colDef] of colDefs) {\r\n            let td = tr.children[colDef.colIndex] as HTMLTableCellElement;\r\n            let ctx: Context = {td, colKey, colDef, vakLeraar, tr, colDefs, data: urenData, yearKey };\r\n            calculateAndSumCell(colDef, ctx, true);\r\n        }\r\n    }\r\n    let trTotal = document.getElementById(\"__totals__\");\r\n    for(let [_colKey, colDef] of colDefs) {\r\n        let td = trTotal.children[colDef.colIndex] as HTMLTableCellElement;\r\n        if(colDef.totals) {\r\n            td.innerText = trimNumber(colDef.total);\r\n        }\r\n    }\r\n\r\n    cellChanged = false;\r\n    isUpdatePaused = false;\r\n    observeTable(true);\r\n}\r\n\r\nexport function buildTable(urenData: UrenData, tableDef: TableFetcher) {\r\n    isUpdatePaused = true;\r\n    globalUrenData = urenData;\r\n    let table = document.createElement(\"table\");\r\n    tableDef.tableRef.getOrgTableContainer().insertAdjacentElement(\"afterend\", table);\r\n    table.id = def.COUNT_TABLE_ID;\r\n    table.classList.add(def.CAN_SORT, def.NO_MENU);\r\n    updateColDefs(urenData.year);\r\n    fillTableHeader(table, urenData.vakLeraars);\r\n    let tbody = document.createElement(\"tbody\");\r\n    table.appendChild(tbody);\r\n\r\n    let lastVak = \"\";\r\n    let rowClass = undefined;\r\n    clearTotals();\r\n\r\n    let yearKey = getYearKeys(urenData.year).keyNext;\r\n\r\n    for(let [vakLeraarKey, vakLeraar] of urenData.vakLeraars) {\r\n        let tr = document.createElement(\"tr\");\r\n        tbody.appendChild(tr);\r\n        tr.dataset[\"vak_leraar\"] = vakLeraarKey;\r\n        tr.id = createValidId(vakLeraarKey);\r\n        if(vakLeraar.vak !== lastVak) {\r\n            rowClass = (rowClass === \"\"? \"darkRow\" : \"\");\r\n        }\r\n        if(rowClass !== \"\")\r\n            tr.classList.add(rowClass);\r\n        lastVak = vakLeraar.vak;\r\n        for(let [colKey, colDef] of colDefs) {\r\n            let td = document.createElement(\"td\");\r\n            tr.appendChild(td);\r\n            td.classList.add(...colDef.classList);\r\n            let ctx = {td, colKey, colDef, vakLeraar, tr, colDefs, data: urenData, yearKey};\r\n            calculateAndSumCell(colDef, ctx, false);\r\n        }\r\n    }\r\n    let tFoot = document.createElement(\"tfoot\");\r\n    table.appendChild(tFoot);\r\n    tFoot.classList.add(\"separatorLine\");\r\n    let trTotal = document.createElement(\"tr\");\r\n    tFoot.appendChild(trTotal);\r\n    \r\n    trTotal.id = \"__totals__\";\r\n    for(let [_colKey, colDef] of colDefs) {\r\n        let td = document.createElement(\"td\") as HTMLTableCellElement;\r\n        trTotal.appendChild(td);\r\n        if(colDef.totals) {\r\n            td.innerText = trimNumber(colDef.total);\r\n        }\r\n    }\r\n\r\n    let editables = table.querySelectorAll(\"td.editable_number\");\r\n    editables.forEach((td) => td.setAttribute(\"contenteditable\", \"true\"));\r\n    observeTable(true);\r\n    isUpdatePaused = false;\r\n}\r\n\r\nfunction calcUren(ctx: Context, keys: string[]) {\r\n    let tot = 0;\r\n    for(let key of keys) {\r\n        let colDef = ctx.colDefs.get(key);\r\n        let cnt = ctx.vakLeraar.countMap.get(colDef.label).students.length;\r\n        tot += cnt;\r\n    }\r\n    return tot;\r\n}\r\n\r\nfunction calcUrenFactored(ctx: Context, keys: string[]) {\r\n    let tot = 0;\r\n    for(let key of keys) {\r\n        let colDef = ctx.colDefs.get(key);\r\n        let cnt = ctx.vakLeraar.countMap.get(colDef.label).students.length;\r\n        let factor = colDefs.get(key).factor;\r\n        tot += cnt * factor;\r\n    }\r\n    return tot;\r\n}\r\n\r\nfunction trimNumber(num: number) {\r\n    if(isNaN(num))\r\n        return \"\";\r\n    // @ts-ignore `num` is checked too be number\r\n    return (Math.round(num * 100) / 100).toFixed(2).replace(\".00\", \"\");\r\n}\r\n\r\nfunction fillTableHeader(table: HTMLTableElement, _vakLeraars: Map<string, VakLeraar>) {\r\n    let thead = document.createElement(\"thead\");\r\n    table.appendChild(thead);\r\n    let tr_head = document.createElement(\"tr\");\r\n    thead.appendChild(tr_head);\r\n    let th = document.createElement(\"th\");\r\n    for (let colDef of colDefs.values()) {\r\n        th = document.createElement(\"th\");\r\n        tr_head.appendChild(th);\r\n        th.innerText = colDef.label;\r\n    }\r\n}\r\n\r\nfunction fillGraadCell(ctx: Context) {\r\n    let graadJaar = ctx.vakLeraar.countMap.get(ctx.colDef.label);\r\n    let button = document.createElement(\"button\") as HTMLButtonElement;\r\n    ctx.td.appendChild(button);\r\n    if(graadJaar.count === 0)\r\n        return graadJaar.count;\r\n    button.innerText = graadJaar.count.toString();\r\n    popoverIndex++;\r\n    button.setAttribute(\"popovertarget\", \"students_\" + popoverIndex);\r\n    let popoverDiv = document.createElement(\"div\");\r\n    ctx.td.appendChild(popoverDiv);\r\n    popoverDiv.id = \"students_\" + popoverIndex;\r\n    popoverDiv.setAttribute(\"popover\", \"auto\");\r\n    for (let student of graadJaar.students) {\r\n        let studentDiv = document.createElement(\"div\");\r\n        popoverDiv.appendChild(studentDiv);\r\n        studentDiv.innerText = student.voornaam + \" \" + student.naam;\r\n        const anchor = document.createElement(\"a\");\r\n        studentDiv.appendChild(anchor);\r\n        anchor.href = \"/?#leerlingen-leerling?id=\" + student.id + \",tab=inschrijvingen\";\r\n        anchor.classList.add(\"pl-1\");\r\n        anchor.dataset.studentid = student.id.toString();\r\n\r\n        const iTag = document.createElement(\"i\");\r\n        anchor.appendChild(iTag);\r\n        iTag.classList.add('fas', \"fa-user-alt\");\r\n    }\r\n    return graadJaar.count;\r\n}\r\n","import {createValidId} from \"../globals\";\r\nimport {TableFetcher} from \"../table/tableFetcher\";\r\nimport {NamedCellTableFetchListener} from \"../pageHandlers\";\r\nimport {StudentInfo} from \"../lessen/scrape\";\r\nimport {TeacherHoursSetup, TeacherHoursSetupMapped} from \"./hoursSettings\";\r\n\r\nexport interface CountStudentsPerJaar {\r\n    count: number,\r\n    students: StudentInfo[]\r\n}\r\nexport interface VakLeraar {\r\n    vak: string,\r\n    leraar: string,\r\n    id: string,\r\n    countMap: Map<string, CountStudentsPerJaar>\r\n}\r\n\r\nexport function scrapeStudent(_tableDef: TableFetcher, fetchListener: NamedCellTableFetchListener, tr: HTMLTableRowElement, collection: any, hourSettings: TeacherHoursSetupMapped) {\r\n    let student: StudentInfo = new StudentInfo();\r\n    student.naam = fetchListener.getColumnText(tr, \"naam\");\r\n    student.voornaam = fetchListener.getColumnText(tr,\"voornaam\");\r\n    student.id = parseInt(tr.attributes['onclick'].value.replace(\"showView('leerlingen-leerling', '', 'id=\", \"\"));\r\n    let leraar = fetchListener.getColumnText(tr,\"klasleerkracht\");\r\n    let vak = fetchListener.getColumnText(tr,\"vak\");\r\n    let graadLeerjaar = fetchListener.getColumnText(tr,\"graad + leerjaar\");\r\n\r\n    if (leraar === \"\") leraar = \"{nieuw}\";\r\n\r\n    if (!isInstrument(vak)) {\r\n        console.error(\"vak is geen instrument!!!\");\r\n        return `Vak \"${vak}\" is geen instrument.`;\r\n    }\r\n    let vakLeraarKey = translateVak(vak, hourSettings) + \"_\" + leraar;\r\n\r\n    if (!collection.has(vakLeraarKey)) {\r\n        let countMap: Map<string, CountStudentsPerJaar> = new Map();\r\n        countMap.set(\"2.1\", {count: 0, students: []});\r\n        countMap.set(\"2.2\", {count: 0, students: []});\r\n        countMap.set(\"2.3\", {count: 0, students: []});\r\n        countMap.set(\"2.4\", {count: 0, students: []});\r\n        countMap.set(\"3.1\", {count: 0, students: []});\r\n        countMap.set(\"3.2\", {count: 0, students: []});\r\n        countMap.set(\"3.3\", {count: 0, students: []});\r\n        countMap.set(\"4.1\", {count: 0, students: []});\r\n        countMap.set(\"4.2\", {count: 0, students: []});\r\n        countMap.set(\"4.3\", {count: 0, students: []});\r\n        countMap.set(\"S.1\", {count: 0, students: []});\r\n        countMap.set(\"S.2\", {count: 0, students: []});\r\n        let vakLeraarObject = {\r\n            vak: translateVak(vak, hourSettings),\r\n            leraar: leraar,\r\n            id: createValidId(vakLeraarKey),\r\n            countMap: countMap\r\n        };\r\n        collection.set(vakLeraarKey, vakLeraarObject);\r\n    }\r\n    let vakLeraar = collection.get(vakLeraarKey);\r\n    if (!vakLeraar.countMap.has(graadLeerjaar)) {\r\n        vakLeraar.countMap.set(graadLeerjaar, {count: 0, students: []});\r\n    }\r\n    let graadLeraarObject = collection.get(vakLeraarKey).countMap.get(graadLeerjaar);\r\n    graadLeraarObject.count += 1;\r\n    graadLeraarObject.students.push(student);\r\n    return null;\r\n}\r\n\r\nfunction isInstrument(vak: string) {\r\n    switch (vak) {\r\n        case \"Muziekatelier\": \r\n        case \"Groepsmusiceren (jazz pop rock)\": \r\n        case \"Groepsmusiceren (klassiek)\": \r\n        case \"Harmonielab\": \r\n        case \"Instrumentinitiatie - elke trimester een ander instrument\": \r\n        case \"instrumentinitiatie – piano het hele jaar\": \r\n        case \"Klanklab elektronische muziek\": \r\n        case \"Muziektheorie\": \r\n        case \"Koor (jazz pop rock)\": \r\n        case \"Koor (musical)\": \r\n        case \"Arrangeren\": \r\n        case \"Groepsmusiceren (opera)\": \r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction translateVak(vak: string, settings: TeacherHoursSetupMapped) {\r\n    // simple alias replacements\r\n    let alias  =  settings.subjectsMap.get(vak)?.alias;\r\n    if(alias)\r\n        vak =  alias;\r\n\r\n    let foundTranslation = false;\r\n    // fragment replacements\r\n    settings.translations\r\n        .filter(translation => translation.find !== \"\")\r\n        .forEach(translation => {\r\n            if(vak.includes(translation.find)) {\r\n                foundTranslation = true;\r\n               vak = translation.prefix + vak.replace(translation.find, translation.replace) + translation.suffix;\r\n            }\r\n        });\r\n    if(foundTranslation)\r\n        return vak;\r\n\r\n    // default replacements\r\n    let defaultTranslation = settings.translations\r\n        .find(defaultTranslation => defaultTranslation.find === \"\");\r\n    if(defaultTranslation)\r\n        return defaultTranslation.prefix + vak.replace(defaultTranslation.find, defaultTranslation.replace) + defaultTranslation.suffix;\r\n\r\n    return vak;\r\n}\r\n\r\n","export async function fetchAvailableSubjects(schoolyear: string) {\r\n    await sendAddCriterium(schoolyear, \"Vak\");\r\n    let text = await fetchCritera(schoolyear);\r\n    const template = document.createElement('template');\r\n    template.innerHTML = text;\r\n    let vakken = template.content.querySelectorAll(\"#form_field_leerling_werklijst_criterium_vak option\");\r\n    return Array.from(vakken).map((vak: HTMLOptionElement) => {  return {name: vak.label, value: vak.value}; });\r\n}\r\n\r\nexport async function fetchCritera(schoolYear: string) {\r\n    return (await fetch(\"https://administratie.dko3.cloud/views/leerlingen/werklijst/index.criteria.php?schooljaar=\" + schoolYear, {\r\n        method: \"GET\"\r\n    })).text();\r\n}\r\n\r\nasync function sendAddCriterium(schoolYear: string, criterium: string) {\r\n    const formData = new FormData();\r\n    formData.append(`criterium`, criterium);\r\n    formData.append(`schooljaar`, schoolYear);\r\n    await fetch(\"https://administratie.dko3.cloud/views/leerlingen/werklijst/index.criteria.session_add.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}\r\n\r\nexport async function sendClearWerklijst() {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"session\", \"leerlingen_werklijst\");\r\n\r\n    await fetch(\"/views/util/clear_session.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n\r\n    //needed to prefill the default fields.\r\n    await fetch(\"views/leerlingen/werklijst/index.velden.php\", {\r\n        method: \"GET\"\r\n    });\r\n}\r\n\r\nexport async function sendCriteria(criteria: object) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"criteria\", JSON.stringify(criteria));\r\n    await fetch(\"/views/leerlingen/werklijst/index.criteria.session_reload.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}\r\n\r\nexport async function sendGrouping(grouping: string) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"groepering\", grouping);\r\n    await fetch(\"/views/leerlingen/werklijst/index.groeperen.session_add.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}\r\n\r\nexport async function sendFields(fields: { value: string, text: string }[]) {\r\n    const formData = new FormData();\r\n\r\n    let fieldCnt = 0;\r\n    for (let field of fields) {\r\n        formData.append(`velden[${fieldCnt}][value]`, field.value);\r\n        formData.append(`velden[${fieldCnt}][text]`, field.text);\r\n        fieldCnt++;\r\n    }\r\n    await fetch(\"/views/leerlingen/werklijst/index.velden.session_add.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n}","import {cloud} from \"../cloud\";\r\nimport {fetchAvailableSubjects} from \"./criteria\";\r\n\r\nexport type SubjectDef = {\r\n    checked: boolean,\r\n    name: string,\r\n    alias: string,\r\n    stillValid: boolean\r\n}\r\n\r\nexport type TranslationDef = {\r\n    find: string,\r\n    replace: string,\r\n    prefix: string,\r\n    suffix: string,\r\n}\r\n\r\nexport type TeacherHoursSetup = {\r\n    schoolyear: string,\r\n    subjects: SubjectDef[];\r\n    translations: TranslationDef[];\r\n}\r\n\r\nexport type TeacherHoursSetupMapped = TeacherHoursSetup & {\r\n    subjectsMap: Map<string, SubjectDef>,\r\n}\r\n\r\nexport function mapHourSettings(hourSettings: TeacherHoursSetup) {\r\n    let mapped = {...hourSettings} as TeacherHoursSetupMapped;\r\n    mapped.subjectsMap = new Map(hourSettings.subjects.map(s => [s.name, s]));\r\n    return mapped;\r\n}\r\n\r\nlet defaultInstruments = [\r\n    {checked:  true, name:  \"Aaaaa\", alias: \"bbb\", stillValid: true},\r\n    {checked:  true, name:  \"Accordeon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altfluit\", alias: \"Dwarsfluit\", stillValid: false},\r\n    {checked:  true, name:  \"Althoorn\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altklarinet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altsaxofoon\", alias: \"Saxofoon\", stillValid: false},\r\n    {checked:  true, name:  \"Altsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altviool\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baglama/saz (wereldmuziek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Bariton\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baritonsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baritonsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basfluit\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basgitaar (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basklarinet\", alias: \"Klarinet\", stillValid: false},\r\n    {checked:  true, name:  \"Bastrombone\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Bastuba\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Bugel\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Cello\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Contrabas (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Contrabas (klassiek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Dwarsfluit\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Engelse hoorn\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Eufonium\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Fagot\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Gitaar\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Gitaar (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Harp\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Hobo\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Hoorn\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Keyboard (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Klarinet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Kornet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Orgel\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piano\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piano (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Pianolab\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piccolo\", alias: \"Dwarsfluit\", stillValid: false},\r\n    {checked:  true, name:  \"Slagwerk\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Slagwerk (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Sopraansaxofoon\", alias: \"Saxofoon\", stillValid: false},\r\n    {checked:  true, name:  \"Sopraansaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Tenorsaxofoon\", alias: \"Saxofoon\", stillValid: false},\r\n    {checked:  true, name:  \"Tenorsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Trombone\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Trompet\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Trompet (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Ud (wereldmuziek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Viool\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (musical 2e graad)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (musical)\", alias: \"\", stillValid: false},\r\n];\r\n\r\nlet defaultInstrumentsMap = new Map<string, SubjectDef>();\r\ndefaultInstruments.forEach(i => defaultInstrumentsMap.set(i.name, i));\r\n\r\nlet defaultTranslationDefs: TranslationDef[] = [\r\n    {find: \"Altsaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n    {find: \"Sopraansaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n    {find: \"Tenorsaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n\r\n    {find: \"(klassiek)\", replace: \"\", prefix: \"K \", suffix: \"\"},\r\n    {find: \"(jazz pop rock)\", replace: \"\", prefix: \"JPR \", suffix: \"\"},\r\n    {find: \"(musical)\", replace: \"\", prefix: \"M \", suffix: \"\"},\r\n    {find: \"(musical 2e graad)\", replace: \"(2e graad)\", prefix: \"M \", suffix: \"\"},\r\n    {find: \"(wereldmuziek)\", replace: \"\", prefix: \"WM \", suffix: \"\"},\r\n    {find: \"instrumentinitiatie\", replace: \"init\", prefix: \"\", suffix: \"\"},\r\n    {find: \"\", replace: \"\", prefix: \"K \", suffix: \"\"},\r\n];\r\n\r\nexport async function fetchHoursSettingsOrDefault(schoolyear: string) {\r\n    let dko3_subjects = await fetchAvailableSubjects(schoolyear);\r\n    let availableSubjects = dko3_subjects.map(vak => vak.name);\r\n    let cloudSettings = await cloud.json.fetch(createTeacherHoursFileName(schoolyear)).catch(e => {}) as TeacherHoursSetup;\r\n    if(!cloudSettings) {\r\n        cloudSettings = {\r\n            schoolyear: schoolyear,\r\n            subjects: defaultInstruments,\r\n            translations: defaultTranslationDefs\r\n        }\r\n    }\r\n    let availableSubjectSet = new Set(availableSubjects);\r\n    cloudSettings.subjects.forEach(s => s.stillValid = availableSubjectSet.has(s.name));\r\n\r\n    return cloudSettings;\r\n}\r\n\r\nexport function createTeacherHoursFileName(schoolyear: string) {\r\n    return \"teacherHoursSetup_\" + schoolyear + \".json\";\r\n}","import {fetchAvailableSubjects, sendClearWerklijst, sendCriteria, sendFields, sendGrouping} from \"./criteria\";\r\nimport * as def from \"../def\";\r\nimport {getGotoStateOrDefault, PageName, saveGotoState, WerklijstGotoState} from \"../gotoState\";\r\nimport {fetchHoursSettingsOrDefault} from \"./hoursSettings\";\r\n\r\nexport async function setCriteriaForTeacherHours(schooljaar: string) {\r\n    await sendClearWerklijst();\r\n    let dko3_vakken = await fetchAvailableSubjects(schooljaar);\r\n    let hourSettings = await fetchHoursSettingsOrDefault(schooljaar);\r\n    let selectedInstrumentNames  =  new Set(hourSettings.subjects.map(i => i.name));\r\n    let validInstruments = dko3_vakken.filter((vak) => selectedInstrumentNames.has(vak.name));\r\n    let values = validInstruments.map(vak => parseInt(vak.value));\r\n    let valueString = values.join();\r\n\r\n    let criteria = [\r\n        {\"criteria\": \"Schooljaar\", \"operator\": \"=\", \"values\": schooljaar},\r\n        {\"criteria\": \"Status\", \"operator\": \"=\", \"values\": \"12\"},\r\n        {\"criteria\": \"Uitschrijvingen\", \"operator\": \"=\", \"values\": \"0\"},\r\n        {\"criteria\": \"Domein\", \"operator\": \"=\", \"values\": \"3\"},\r\n        {\r\n            \"criteria\": \"Vak\",\r\n            \"operator\": \"=\",\r\n            \"values\": valueString\r\n        }\r\n    ];\r\n    await sendCriteria(criteria);\r\n    await sendFields([\r\n        {value: \"vak_naam\", text: \"vak\"},\r\n        {value: \"graad_leerjaar\", text: \"graad + leerjaar\"},\r\n        {value: \"klasleerkracht\", text: \"klasleerkracht\"}]\r\n    );\r\n    await sendGrouping(\"vak_id\");\r\n    let pageState = getGotoStateOrDefault(PageName.Werklijst) as WerklijstGotoState;\r\n    pageState.werklijstTableName = def.UREN_TABLE_STATE_NAME;\r\n    saveGotoState(pageState);\r\n    (document.querySelector(\"#btn_werklijst_maken\") as HTMLButtonElement).click();\r\n}\r\n","import {TableFetcher, TableFetchListener} from \"./table/tableFetcher\";\r\ntype OnBeforeLoadingHandler = (tableDef: TableFetcher) => boolean;\r\ntype OnRequiredColumnsMissingHandler = (tableDef: TableFetcher) => void;\r\ntype NotHTMLTemplate = HTMLDivElement | DocumentFragment; //HTMLDiv element is arbitrarily chosen. Any subclass from HTMLElement will do.\r\n\r\n/**\r\n * NamedCellTableFetchListener with named column labels.\\\r\n * Params are:\r\n * @description\r\n *      * requiredHeaderLabels: array with labels of required columns.\r\n *      * onRequiredColumnsMissing: OnRequiredColumnsMissingHandler, which will be called when labels are missing.\r\n */\r\n\r\nexport class NamedCellTableFetchListener implements TableFetchListener {\r\n    onStartFetching: (tableFetcher: TableFetcher) => void;\r\n    onLoaded: (tableFetcher: TableFetcher) => void;\r\n    onFinished: (tableFetcher: TableFetcher) => void;\r\n\r\n    private requiredHeaderLabels: string[];\r\n    onBeforeLoading?: OnBeforeLoadingHandler;\r\n    private headerIndices: Map<string, number>;\r\n    onColumnsMissing: OnRequiredColumnsMissingHandler;\r\n    isValidPage: boolean;\r\n\r\n    constructor(requiredHeaderLabels: string[], onRequiredColumnsMissing: OnRequiredColumnsMissingHandler) {\r\n        this.requiredHeaderLabels = requiredHeaderLabels;\r\n        this.onColumnsMissing = onRequiredColumnsMissing;\r\n        this.headerIndices = undefined;\r\n        this.isValidPage = false;\r\n    }\r\n\r\n    onPageLoaded(tableFetcher: TableFetcher, _pageCnt: number, _text: string) {\r\n        if(!this.headerIndices) {\r\n            this.headerIndices = NamedCellTableFetchListener.getHeaderIndices(tableFetcher.fetchedTable.getTemplate().content as NotHTMLTemplate);\r\n            if (!this.hasAllHeadersAndAlert()) {\r\n                this.isValidPage = false;\r\n                if (this.onColumnsMissing) {\r\n                    this.onColumnsMissing(tableFetcher);\r\n                } else {\r\n                    throw (\"Cannot build table object - required columns missing\");\r\n                }\r\n            } else {\r\n                this.isValidPage = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onBeforeLoadingPage(tableFetcher: TableFetcher): boolean {\r\n        let orgTableContainer = tableFetcher.tableRef.getOrgTableContainer();\r\n        if(!orgTableContainer)\r\n            return true;//postpone field checks to first page load.\r\n        this.headerIndices = NamedCellTableFetchListener.getHeaderIndices(orgTableContainer as NotHTMLTemplate);\r\n        return this.hasAllHeadersAndAlert();\r\n    }\r\n\r\n    hasAllHeadersAndAlert() {\r\n        if (!this.hasAllHeaders()) {\r\n            let labelString = this.requiredHeaderLabels\r\n                .map((label) => \"\\\"\" + label.toUpperCase() + \"\\\"\")\r\n                .join(\", \");\r\n            alert(`Voeg velden ${labelString} toe.`);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static getHeaderIndices(element: NotHTMLTemplate){\r\n        let headers = element.querySelectorAll(\"thead th\") as NodeListOf<HTMLTableCellElement>;\r\n        return this.getHeaderIndicesFromHeaderCells(headers);\r\n    }\r\n\r\n    static getHeaderIndicesFromHeaderCells(headers: NodeListOf<HTMLTableCellElement>) {\r\n        let headerIndices: Map<string, number> = new Map();\r\n        Array.from(headers)\r\n            .forEach((header, index) => {\r\n                let label = header.innerText;\r\n                if (label.startsWith(\"e-mailadressen\")) {\r\n                    headerIndices.set(\"e-mailadressen\", index);\r\n                } else {\r\n                    headerIndices.set(label, index);\r\n                }\r\n            });\r\n        return headerIndices;\r\n    }\r\n\r\n    hasAllHeaders() {\r\n        return this.requiredHeaderLabels.every((label) => this.hasHeader(label))\r\n    }\r\n\r\n    hasHeader(label: string) {\r\n        return this.headerIndices.has(label);\r\n    }\r\n\r\n    getColumnText(tr: HTMLTableRowElement, label: string) : string {\r\n        return tr.children[this.headerIndices.get(label)].textContent;\r\n    }\r\n}","export class TableNavigation {\r\n    readonly step: number;\r\n    private readonly maxCount: number;\r\n\r\n    constructor(step: number, maxCount: number) {\r\n        this.step = step;\r\n        this.maxCount = maxCount;\r\n    }\r\n\r\n    steps() {\r\n        return Math.ceil(this.maxCount / this.step)\r\n    }\r\n\r\n    isOnePage() {\r\n        return this.step >= this.maxCount;\r\n    }\r\n}\r\n\r\n/* possible ranges of numbers found:\r\n*/\r\nexport function findFirstNavigation(element?: HTMLElement) {\r\n    element = element?? document.body;\r\n    //get all possible numbers from the navigation bar and sort them to get the result above.\r\n    let buttonPagination = element.querySelector(\"button.datatable-paging-numbers\") as HTMLButtonElement;\r\n    if(!buttonPagination)\r\n        return undefined;\r\n    let buttonContainer = buttonPagination.closest(\"div\") as HTMLDivElement;\r\n    if(!buttonContainer) {\r\n        return undefined;\r\n    }\r\n    let rx = /(\\d*) tot (\\d*) van (\\d*)/;\r\n    let matches = buttonPagination.innerText.match(rx);\r\n    let buttons = buttonContainer.querySelectorAll(\"button.btn-secondary\");\r\n    let offsets = Array.from(buttons)\r\n        .filter((btn) => btn.attributes[\"onclick\"]?.value.includes(\"goto(\"))\r\n        .filter((btn: HTMLElement) => !btn.querySelector(\"i.fa-fast-backward\")) //ignore the value of the fast backward button, which is always 0\r\n        .map((btn: HTMLElement) => getGotoNumber(btn.attributes[\"onclick\"].value));\r\n    let numbers = matches.slice(1).map((txt) => parseInt(txt));\r\n    numbers[0] = numbers[0]-1;//convert 1-based user index to 0-based offset.\r\n    numbers = numbers.concat(offsets);\r\n    numbers.sort((a, b) => a - b);\r\n    numbers = [...new Set(numbers)];\r\n    return new TableNavigation(numbers[1] - numbers[0], numbers.pop());\r\n}\r\n\r\nfunction getGotoNumber(functionCall: string) {\r\n    return parseInt(functionCall.substring(functionCall.indexOf(\"goto(\") + 5));\r\n}","import {findFirstNavigation, TableNavigation} from \"./tableNavigation\";\r\nimport * as def from \"../def\";\r\nimport {db3} from \"../globals\";\r\n\r\nexport class TableRef {\r\n    htmlTableId: string;\r\n    buildFetchUrl: (offset: number) => string;\r\n    navigationData: TableNavigation;\r\n\r\n    constructor(htmlTableId: string, navigationData: TableNavigation, buildFetchUrl: (offset: number) => string) {\r\n        this.htmlTableId = htmlTableId;\r\n        this.buildFetchUrl = buildFetchUrl;\r\n        this.navigationData = navigationData;\r\n    }\r\n\r\n    getOrgTableContainer() {\r\n        return document.getElementById(this.htmlTableId) as HTMLElement;\r\n    }\r\n\r\n    createElementAboveTable(element: string): HTMLElement {\r\n        let el = document.createElement(element);\r\n        this.getOrgTableContainer().insertAdjacentElement(\"beforebegin\", el);\r\n        return el;\r\n    }\r\n}\r\n\r\nexport function findTableRefInCode() {\r\n    let foundTableRef = findTable();\r\n    if(!foundTableRef)\r\n        return undefined;\r\n\r\n    let buildFetchUrl = (offset: number) => `/views/ui/datatable.php?id=${foundTableRef.viewId}&start=${offset}&aantal=0`;\r\n\r\n    let navigation = findFirstNavigation();\r\n    if(!navigation)\r\n        return undefined;\r\n\r\n    return new TableRef( foundTableRef.tableId, navigation, buildFetchUrl)\r\n}\r\n\r\nfunction findTable() {\r\n    let table = document.querySelector(\"div.table-responsive > table\");\r\n    let tableId = table.id\r\n        .replace(\"table_\", \"\")\r\n        .replace(\"_table\", \"\");\r\n\r\n    let parentDiv = document.querySelector(\"div#\"+\"table_\"+tableId);\r\n    let scripts = Array.from(parentDiv.querySelectorAll(\"script\")).map((script) => script.text).join(\"\\n\");\r\n    let goto = scripts.split(\"_goto(\")[1];\r\n    let func = goto.split(/ function *\\w/)[0];\r\n\r\n    let viewId = / *datatable_id *= *'(.*)'/.exec(func)[1];\r\n    let url = /_table'\\).load\\('(.*?)\\?id='\\s*\\+\\s*datatable_id\\s*\\+\\s*'&start='\\s*\\+\\s*start/.exec(func)[1];\r\n    //if we got so far, we can be sure this table is a standard one.\r\n    return {\r\n        tableId: table.id,\r\n        viewId,\r\n        url\r\n    };\r\n}\r\n\r\nexport type CheckSumBuilder = (tableDef: TableFetcher) => string;\r\n\r\nexport interface TableHandler {\r\n    onReset: (tableDef: TableFetcher) => void;\r\n}\r\n\r\nexport interface TableFetchListener {\r\n    onStartFetching: (tableFetcher: TableFetcher) => void,\r\n    onLoaded: (tableFetcher: TableFetcher) => void,\r\n    onBeforeLoadingPage: (tableFetcher: TableFetcher) => boolean,\r\n    onFinished: (tableFetcher: TableFetcher, succes: boolean) => void,\r\n    onPageLoaded: (tableFetcher: TableFetcher, pageCnt: number, text: string) => void\r\n}\r\n\r\nexport class TableFetcher {\r\n    tableRef: TableRef;\r\n    calculateTableCheckSum: CheckSumBuilder;\r\n    isUsingCached = false;\r\n    shadowTableDate: Date;\r\n    fetchedTable?: FetchedTable;\r\n    tableHandler?: TableHandler;\r\n    listeners: TableFetchListener[];\r\n\r\n    constructor(tableRef: TableRef, calculateTableCheckSum: CheckSumBuilder, tableHandler?: TableHandler) {\r\n        this.tableRef = tableRef;\r\n        if(!calculateTableCheckSum)\r\n            throw (\"Tablechecksum required.\");\r\n        this.calculateTableCheckSum = calculateTableCheckSum;\r\n        this.fetchedTable = undefined;\r\n        this.tableHandler = tableHandler;\r\n        this.listeners = [];\r\n    }\r\n\r\n    reset() {\r\n        this.clearCache();\r\n        this.tableHandler?.onReset?.(this);\r\n    }\r\n\r\n    clearCache() {\r\n        db3(`Clear cache for ${this.tableRef.htmlTableId}.`);\r\n        window.sessionStorage.removeItem(this.getCacheId());\r\n        window.sessionStorage.removeItem(this.getCacheId()+ def.CACHE_DATE_SUFFIX);\r\n        this.fetchedTable = undefined;\r\n    }\r\n\r\n    loadFromCache() {\r\n        if(this.tableRef.navigationData.isOnePage())\r\n            return null;\r\n\r\n        db3(`Loading from cache: ${this.getCacheId()}.`);\r\n        let text =  window.sessionStorage.getItem(this.getCacheId());\r\n        let dateString = window.sessionStorage.getItem(this.getCacheId() + def.CACHE_DATE_SUFFIX);\r\n        if(!text)\r\n            return undefined;\r\n        return {\r\n            text,\r\n            date: new Date(dateString)\r\n        };\r\n    }\r\n\r\n    getCacheId() {\r\n        let checksum = \"\";\r\n        if (this.calculateTableCheckSum)\r\n            checksum = \"__\" + this.calculateTableCheckSum(this);\r\n        let id = this.tableRef.htmlTableId + checksum;\r\n        return id.replaceAll(/\\s/g, \"\");\r\n    }\r\n\r\n    async fetch() {\r\n        if(this.fetchedTable) {\r\n            this.onFinished(true);\r\n            return this.fetchedTable;\r\n        }\r\n        let cachedData = this.loadFromCache();\r\n        let succes: boolean;\r\n        this.fetchedTable = new FetchedTable(this);\r\n        if(cachedData) {\r\n            this.fetchedTable.addPage(cachedData.text);\r\n            this.shadowTableDate = cachedData.date;\r\n            this.isUsingCached = true;\r\n            this.onPageLoaded(1, cachedData.text); //fake one page load.\r\n            this.onLoaded();\r\n            succes = true;\r\n        } else {\r\n            this.isUsingCached = false;\r\n            succes = await this.#fetchPages(this.fetchedTable);\r\n            if(!succes) {\r\n                this.onFinished(succes);\r\n                throw(\"Failed to fetch the pages.\"); //returns a reject Promise.\r\n            }\r\n            this.fetchedTable.saveToCache();\r\n            this.onLoaded();\r\n        }\r\n        this.onFinished(succes);\r\n        return this.fetchedTable;\r\n    }\r\n\r\n    onStartFetching() {\r\n        for(let lst of this.listeners)\r\n            lst.onStartFetching?.(this);\r\n    }\r\n    onFinished(succes: boolean) {\r\n        for(let lst of this.listeners)\r\n            lst.onFinished?.(this, succes);\r\n    }\r\n    onPageLoaded(pageCnt: number, text: string) {\r\n        for(let lst of this.listeners)\r\n            lst.onPageLoaded?.(this, pageCnt, text);\r\n    }\r\n    onLoaded() {\r\n        for(let lst of this.listeners)\r\n            lst.onLoaded?.(this);\r\n    }\r\n    onBeforeLoadingPage() {\r\n        for(let lst of this.listeners){\r\n            if (lst.onBeforeLoadingPage) {\r\n                if(!lst.onBeforeLoadingPage(this))\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async #fetchPages(fetchedTable: FetchedTable) {\r\n        if(!this.onBeforeLoadingPage())\r\n            return false;\r\n        await this.#doFetchAllPages(fetchedTable);\r\n        return true;\r\n    }\r\n\r\n    async #doFetchAllPages(fetchedTable: FetchedTable) {\r\n        try {\r\n            this.onStartFetching();\r\n            let pageCnt = 0;\r\n            while (true) {\r\n                console.log(\"fetching page \" + fetchedTable.getNextPageNumber());\r\n                let response = await fetch(this.tableRef.buildFetchUrl(fetchedTable.getNextOffset()));\r\n                let text = await response.text();\r\n                fetchedTable.addPage(text);\r\n                pageCnt++;\r\n                this.onPageLoaded(pageCnt, text);\r\n                if(pageCnt >= this.tableRef.navigationData.steps())\r\n                    break;\r\n            }\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    addListener(listener: TableFetchListener) {\r\n        this.listeners.push(listener);\r\n    }\r\n\r\n}\r\n\r\nexport class FetchedTable {\r\n    private readonly shadowTableTemplate: HTMLTemplateElement;\r\n    tableFetcher: TableFetcher;\r\n    lastPageNumber: number;\r\n    lastPageStartRow: number;\r\n\r\n    constructor(tableDef: TableFetcher) {\r\n        this.tableFetcher = tableDef;\r\n        this.lastPageNumber = -1;\r\n        this.lastPageStartRow = 0;\r\n        this.shadowTableTemplate = document.createElement(\"template\");\r\n    }\r\n\r\n    getRows() {\r\n        let template = this.shadowTableTemplate;\r\n        return template.content.querySelectorAll(\"tbody tr:not(:has(i.fa-meh))\") as NodeListOf<HTMLTableRowElement>;\r\n    }\r\n\r\n    getRowsAsArray = () => Array.from(this.getRows());\r\n    getLastPageRows = () => this.getRowsAsArray().slice(this.lastPageStartRow);\r\n    getLastPageNumber = () => this.lastPageNumber;\r\n    getNextPageNumber = () => this.lastPageNumber+1;\r\n    getNextOffset = () => this.getNextPageNumber()*this.tableFetcher.tableRef.navigationData.step;\r\n    getTemplate = () => this.shadowTableTemplate;\r\n\r\n    saveToCache() {\r\n        db3(`Caching ${this.tableFetcher.getCacheId()}.`);\r\n        window.sessionStorage.setItem(this.tableFetcher.getCacheId(), this.shadowTableTemplate.innerHTML);\r\n        window.sessionStorage.setItem(this.tableFetcher.getCacheId()+ def.CACHE_DATE_SUFFIX, (new Date()).toJSON());\r\n    }\r\n\r\n    addPage(text: string) {\r\n        let pageTemplate: HTMLTemplateElement;\r\n        pageTemplate = document.createElement('template');\r\n        pageTemplate.innerHTML = text;\r\n        let rows = pageTemplate.content.querySelectorAll(\"tbody > tr\") as NodeListOf<HTMLTableRowElement>;\r\n\r\n        this.lastPageStartRow = this.getRows().length;\r\n        if(this.lastPageNumber === -1)\r\n            this.shadowTableTemplate.innerHTML = text; //to create the <table> and <tbody> and such.\r\n        else\r\n            this.shadowTableTemplate.content.querySelector(\"tbody\").append(...rows);\r\n        this.lastPageNumber++;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {addTableNavigationButton, getBothToolbars} from \"../globals\";\r\nimport * as def from \"../def\";\r\nimport {AllPageFilter, BaseObserver} from \"../pageObserver\";\r\nimport {CheckSumBuilder, findTableRefInCode, TableFetcher} from \"./tableFetcher\";\r\nimport {decorateTableHeader} from \"./tableHeaders\";\r\nimport {downloadTableRows} from \"./loadAnyTable\";\r\n\r\nexport default new BaseObserver(undefined, new AllPageFilter(), onMutation);\r\n\r\nfunction onMutation (_mutation: MutationRecord) {\r\n    let navigationBars = getBothToolbars();\r\n    if(!navigationBars)\r\n        return; //wait for top and bottom bars.\r\n    if(!findTableRefInCode()?.navigationData.isOnePage()) {\r\n        addTableNavigationButton(navigationBars, def.DOWNLOAD_TABLE_BTN_ID, \"download full table\", () => {\r\n            downloadTableRows().then(_r => {});\r\n        }, \"fa-arrow-down\");\r\n    }\r\n    if(document.querySelector(\"main div.table-responsive table thead\")) {\r\n        let table = document.querySelector(\"main div.table-responsive table\");\r\n        decorateTableHeader(document.querySelector(\"main div.table-responsive table\"));\r\n    }\r\n    let canSort = document.querySelector(\"table.\"+def.CAN_SORT) as HTMLTableElement;\r\n    if(canSort) {\r\n        decorateTableHeader(canSort);\r\n    }\r\n    return true;\r\n}\r\n\r\nlet tableCriteriaBuilders = new Map<string, CheckSumBuilder>();\r\n\r\nexport function getChecksumBuilder(tableId: string): CheckSumBuilder {\r\n    let builder = tableCriteriaBuilders.get(tableId);\r\n    if(builder)\r\n        return builder;\r\n    return (_tableFetcher: TableFetcher) => \"\";\r\n}\r\n\r\nexport function registerChecksumHandler(tableId: string, checksumHandler: CheckSumBuilder) {\r\n    tableCriteriaBuilders.set(tableId, checksumHandler);\r\n}","import * as def from \"./def\";\r\nimport {emmet} from \"../libs/Emmeter/html\";\r\n\r\nexport class InfoBar{\r\n    divInfoContainer: HTMLDivElement;\r\n    divInfoLine: HTMLDivElement;\r\n    divTempLine: HTMLParagraphElement;\r\n    divExtraLine: HTMLDivElement;\r\n    private tempMessage: string;\r\n    private divCacheInfo: HTMLDivElement;\r\n\r\n    constructor(divInfoContainer: HTMLDivElement) {\r\n        this.divInfoContainer = divInfoContainer;\r\n        this.divInfoContainer.id = def.INFO_CONTAINER_ID;\r\n        this.divInfoContainer.innerHTML = \"\";\r\n        this.divExtraLine = emmet.appendChild(divInfoContainer, `div#${def.INFO_EXTRA_ID}.infoMessage`).last as HTMLDivElement;\r\n        this.divInfoLine = emmet.appendChild(divInfoContainer, \"div.infoLine\").last as HTMLDivElement;\r\n        this.divTempLine = emmet.appendChild(divInfoContainer, `div#${def.INFO_TEMP_ID}.infoMessage.tempLine`).last as HTMLDivElement;\r\n        this.divCacheInfo = emmet.appendChild(this.divInfoContainer, `div#${def.INFO_CACHE_ID}.cacheInfo`).last as HTMLDivElement;\r\n        this.tempMessage = \"\";\r\n    }\r\n\r\n    setCacheInfo(cacheInfo: string, reset_onclick: (ev: MouseEvent) => any) {\r\n        this.updateCacheInfo(cacheInfo, reset_onclick);\r\n    }\r\n\r\n    setTempMessage(msg : string ) {\r\n        this.tempMessage = msg;\r\n        this.#updateTempMessage();\r\n        setTimeout(this.clearTempMessage.bind(this), 4000);\r\n    }\r\n\r\n    clearTempMessage() {\r\n        this.tempMessage = \"\";\r\n        this.#updateTempMessage();\r\n    }\r\n\r\n    #updateTempMessage() {\r\n        this.divTempLine.innerHTML = this.tempMessage;\r\n    }\r\n\r\n    setInfoLine(message: string) {\r\n        this.divInfoLine.innerHTML = message;\r\n    }\r\n\r\n    clearCacheInfo() {\r\n        this.divCacheInfo.innerHTML = \"\";\r\n    }\r\n\r\n    updateCacheInfo(info: string, reset_onclick: (ev: MouseEvent) => any) {\r\n        this.divCacheInfo.innerHTML = info;\r\n        let button = emmet.appendChild(this.divCacheInfo, \"button.likeLink\").first as HTMLButtonElement;\r\n        button.innerHTML = \"refresh\";\r\n        button.onclick = reset_onclick;\r\n    }\r\n\r\n    setExtraInfo(message: string, click_element_id?: string, callback?: () => void) {\r\n        this.divExtraLine.innerHTML = message;\r\n        if(click_element_id) {\r\n            document.getElementById(click_element_id).onclick = callback;\r\n        }\r\n    }\r\n\r\n}","import * as def from \"./def\";\r\nimport {emmet} from \"../libs/Emmeter/html\";\r\n\r\nexport class ProgressBar {\r\n    private barElement: HTMLElement;\r\n    private containerElement: HTMLElement;\r\n    private maxCount: number;\r\n    private count: number;\r\n\r\n    constructor(containerElement: HTMLElement, barElement: HTMLElement) {\r\n        this.barElement = barElement;\r\n        this.containerElement = containerElement;\r\n        this.hide();\r\n        this.maxCount = 0;\r\n        this.count = 0;\r\n    }\r\n\r\n    reset(maxCount: number) {\r\n        this.maxCount = maxCount;\r\n        this.count = 0;\r\n        this.barElement.innerHTML = \"\";\r\n        for (let i = 0; i < maxCount; i++) {\r\n            let block = document.createElement(\"div\");\r\n            this.barElement.appendChild(block);\r\n            block.classList.add(\"progressBlock\");\r\n        }\r\n    }\r\n    start(maxCount: number) {\r\n        this.reset(maxCount);\r\n        this.containerElement.style.display = \"block\";\r\n        this.next();\r\n    }\r\n\r\n    hide() {\r\n        this.containerElement.style.display = \"none\";\r\n    }\r\n    stop() {\r\n        this.hide();\r\n    }\r\n\r\n    next() {\r\n        if (this.count >= this.maxCount)\r\n            return false;\r\n        this.barElement.children[this.count].classList.remove(\"iddle\", \"loaded\");\r\n        this.barElement.children[this.count].classList.add(\"loading\");\r\n        for (let i = 0; i < this.count; i++) {\r\n            this.barElement.children[i].classList.remove(\"iddle\", \"loading\");\r\n            this.barElement.children[i].classList.add(\"loaded\");\r\n        }\r\n        for (let i = this.count + 1; i < this.maxCount; i++) {\r\n            this.barElement.children[i].classList.remove(\"loaded\", \"loading\");\r\n            this.barElement.children[i].classList.add(\"iddle\");\r\n        }\r\n        this.count++;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function insertProgressBar(container: HTMLElement, text: string = \"\") {\r\n    container.innerHTML = \"\";\r\n    let {first: divProgressLine, last: divProgressBar} = emmet.appendChild(container, `div.infoLine${def.PROGRESS_BAR_ID}>div.progressText{${text}}+div.progressBar`);\r\n    return new ProgressBar(divProgressLine as HTMLDivElement, divProgressBar as HTMLDivElement);\r\n}","import {findFirstNavigation} from \"./tableNavigation\";\r\nimport {findTableRefInCode, TableFetcher, TableFetchListener, TableRef} from \"./tableFetcher\";\r\nimport {getChecksumBuilder} from \"./observer\";\r\nimport {millisToString, Result, setViewFromCurrentUrl} from \"../globals\";\r\nimport {InfoBar} from \"../infoBar\";\r\nimport {insertProgressBar, ProgressBar} from \"../progressBar\";\r\nimport * as def from \"../def\";\r\nimport {executeTableCommands, TableHandlerForHeaders} from \"./tableHeaders\";\r\n\r\nasync function getTableRefFromHash(hash: string) {\r\n    await fetch(\"https://administratie.dko3.cloud/#\" + hash).then(res => res.text());\r\n\r\n    // call to changeView() - assuming this is always the same, so no parsing here.\r\n    let view = await fetch(\"view.php?args=\" + hash).then(res => res.text());\r\n    let index_viewUrl = getDocReadyLoadUrl(view);\r\n\r\n    //get the htmlTableId (from index.view.php\r\n    let index_view = await fetch(index_viewUrl).then(res => res.text());\r\n    let htmlTableId = getDocReadyLoadScript(index_view)\r\n        .find(\"$\", \"(\", \"'#\")\r\n        .clipTo(\"'\")\r\n        .result();\r\n    if (!htmlTableId) {\r\n        htmlTableId = getDocReadyLoadScript(index_view)\r\n            .find(\"$\", \"(\", \"\\\"#\")\r\n            .clipTo(\"\\\"\")\r\n            .result();\r\n    }\r\n    let someUrl = getDocReadyLoadUrl(index_view); //NOT SURE THIS IS datatable.php !!!\r\n    //>> keep going unti we get to datatable.php...\r\n    if (!someUrl.includes(\"ui/datatable.php\")) {\r\n        //fetch again. Don't loop to avoid dead loop.\r\n        let someCode = await fetch(someUrl).then(res => res.text());\r\n        someUrl = getDocReadyLoadUrl(someCode); //NOT SURE THIS IS datatable.php !!!\r\n    }\r\n    let datatableUrl = someUrl; //hope and pray...\r\n    //get datatable id an url from datatable.php\r\n    let datatable = await fetch(datatableUrl).then(result => result.text());\r\n    let scanner = new TokenScanner(datatable);\r\n    let datatable_id = \"\";\r\n    let tableNavUrl = \"\";\r\n    scanner\r\n        .find(\"var\", \"datatable_id\", \"=\")\r\n        .getString(res => {\r\n            datatable_id = res;\r\n        })\r\n        .clipTo(\"</script>\")\r\n        .find(\".\", \"load\", \"(\")\r\n        .getString(res => tableNavUrl = res)\r\n        .result();\r\n    tableNavUrl += datatable_id + '&pos=top';\r\n    let tableNavText = await fetch(tableNavUrl).then(res => res.text().then());\r\n\r\n    let div = document.createElement(\"div\");\r\n    div.innerHTML = tableNavText;\r\n    let tableNav = findFirstNavigation(div);\r\n    console.log(tableNav);\r\n    let buildFetchUrl = (offset: number) => `/views/ui/datatable.php?id=${datatable_id}&start=${offset}&aantal=0`;\r\n\r\n    return new TableRef(htmlTableId, tableNav, buildFetchUrl);\r\n}\r\n\r\nexport async function getTableFromHash(hash: string, clearCache: boolean, infoBarListener: InfoBarTableFetchListener) {\r\n    let tableRef = await getTableRefFromHash(hash);\r\n    console.log(tableRef);\r\n\r\n    let tableFetcher = new TableFetcher(\r\n        tableRef,\r\n        getChecksumBuilder(tableRef.htmlTableId)\r\n    );\r\n\r\n    tableFetcher.addListener(infoBarListener);\r\n\r\n    if(clearCache)\r\n        tableFetcher.clearCache();\r\n\r\n    let fetchedTable = await tableFetcher.fetch();\r\n    await setViewFromCurrentUrl();\r\n    return fetchedTable;\r\n}\r\n\r\nfunction findDocReady(scanner: TokenScanner) {\r\n    return scanner.find(\"$\", \"(\", \"document\", \")\", \".\", \"ready\", \"(\");\r\n}\r\n\r\nfunction getDocReadyLoadUrl(text: string) {\r\n    let scanner = new TokenScanner(text);\r\n    while(true) {\r\n        let docReady = findDocReady(scanner);\r\n        if(!docReady.valid)\r\n            return undefined;\r\n        let url = docReady\r\n            .clone()\r\n            .clipTo(\"</script>\")\r\n            .find(\".\", \"load\", \"(\")\r\n            .clipString()\r\n            .result();\r\n        if(url)\r\n            return url;\r\n        scanner = docReady;\r\n    }\r\n}\r\n\r\nfunction getDocReadyLoadScript(text: string) {\r\n    let scanner = new TokenScanner(text);\r\n    while(true) {\r\n        let docReady = findDocReady(scanner);\r\n        if(!docReady.valid)\r\n            return undefined;\r\n        let script = docReady\r\n            .clone()\r\n            .clipTo(\"</script>\");\r\n        let load = script\r\n            .clone()\r\n            .find(\".\", \"load\", \"(\");\r\n        if(load.valid)\r\n            return script;\r\n        scanner = docReady;\r\n    }\r\n}\r\n\r\n\r\nfunction escapeRegexChars(text: string): string {\r\n    return text\r\n        .replaceAll(\"\\\\\", \"\\\\\\\\\")\r\n        .replaceAll(\"^\", \"\\\\^\")\r\n        .replaceAll(\"$\", \"\\\\$\")\r\n        .replaceAll(\".\", \"\\\\.\")\r\n        .replaceAll(\"|\", \"\\\\|\")\r\n        .replaceAll(\"?\", \"\\\\?\")\r\n        .replaceAll(\"*\", \"\\\\*\")\r\n        .replaceAll(\"+\", \"\\\\+\")\r\n        .replaceAll(\"(\", \"\\\\(\")\r\n        .replaceAll(\")\", \"\\\\)\")\r\n        .replaceAll(\"[\", \"\\\\[\")\r\n        .replaceAll(\"]\", \"\\\\]\")\r\n        .replaceAll(\"{\", \"\\\\{\")\r\n        .replaceAll(\"}\", \"\\\\}\")\r\n}\r\n\r\nclass ScannerElse {\r\n    scannerIf: ScannerIf;\r\n\r\n    constructor(scannerIf: ScannerIf) {\r\n        this.scannerIf = scannerIf;\r\n    }\r\n\r\n    not(callback?: (scanner: TokenScanner) => TokenScanner) {\r\n        if(!this.scannerIf.yes) {\r\n            callback?.(this.scannerIf.scanner);\r\n        }\r\n        return this.scannerIf.scanner;\r\n    }\r\n}\r\n\r\nclass ScannerIf {\r\n    yes: boolean;\r\n    scanner: TokenScanner;\r\n\r\n    constructor(yes: boolean, scanner: TokenScanner) {\r\n        this.yes = yes;\r\n        this.scanner = scanner;\r\n    }\r\n\r\n    then(callback: (scanner: TokenScanner) => TokenScanner) : ScannerElse {\r\n        if(this.yes) {\r\n            callback(this.scanner);\r\n        }\r\n        return new ScannerElse(this);\r\n    }\r\n}\r\n\r\nclass TokenScanner {\r\n    valid: boolean;\r\n    source: string;\r\n    cursor: string;\r\n    constructor(text: string) {\r\n        this.valid = true;\r\n        this.source = text;\r\n        this.cursor = text;\r\n    }\r\n\r\n    result(): string | undefined {\r\n        if(this.valid)\r\n            return this.cursor;\r\n        return undefined;\r\n    }\r\n\r\n    find(...tokens: string[]) {\r\n        return this.#find(\"\", tokens);\r\n    }\r\n\r\n    match(...tokens: string[]) {\r\n        return this.#find(\"^\\\\s*\", tokens);\r\n    }\r\n\r\n    #find(prefix: string, tokens: string[]) {\r\n        if(!this.valid)\r\n            return this;\r\n        let rxString = prefix + tokens\r\n            .map(token => escapeRegexChars(token) + \"\\\\s*\")\r\n            .join(\"\");\r\n        let match = RegExp(rxString).exec(this.cursor);\r\n        if (match) {\r\n            this.cursor = this.cursor.substring(match.index + match[0].length);\r\n            return this;\r\n        }\r\n        this.valid = false;\r\n        return this;\r\n    }\r\n\r\n    ifMatch(...tokens: string[]) : ScannerIf {\r\n        if(!this.valid)\r\n            return new ScannerIf(true, this); //never mind the yes: the scanner is invalid.\r\n\r\n        this.match(...tokens);\r\n        if(this.valid) {\r\n            return new ScannerIf(true, this);\r\n        } else {\r\n            this.valid = true;\r\n            return new ScannerIf(false, this);\r\n        }\r\n    }\r\n\r\n    clip(len: number) {\r\n        if(!this.valid)\r\n            return this;\r\n        this.cursor = this.cursor.substring(0, len);\r\n        return this;\r\n    }\r\n\r\n    clipTo(end: string) {\r\n        if(!this.valid)\r\n            return this;\r\n        let found = this.cursor.indexOf(end);\r\n        if(found < 0) {\r\n            this.valid = false;\r\n            return this;\r\n        }\r\n        this.cursor = this.cursor.substring(0, found);\r\n        return this;\r\n    }\r\n\r\n    clone() : TokenScanner {\r\n        let newScanner = new TokenScanner(this.cursor);\r\n        newScanner.valid = this.valid;\r\n        return newScanner;\r\n    }\r\n\r\n    clipString() {\r\n        let isString = false;\r\n        this.ifMatch(\"'\")\r\n            .then(result => {\r\n                isString = true;\r\n                return result.clipTo(\"'\");\r\n            })\r\n            .not()\r\n        .ifMatch(\"\\\"\")\r\n            .then(result => {\r\n                isString = true;\r\n                return result.clipTo(\"\\\"\")\r\n            })\r\n            .not();\r\n        this.valid = this.valid && isString;\r\n        return this;\r\n    }\r\n\r\n    getString(callback: (res: string) => void) {\r\n        let subScanner = this.clone();\r\n        let result = subScanner\r\n            .clipString()\r\n            .result();\r\n        if(result) {\r\n            callback(result);\r\n            //now skip the string in <this>.\r\n            this\r\n                .ifMatch(\"'\")\r\n                .then(result => result.find(\"'\"))\r\n                .not()\r\n                .ifMatch(\"\\\"\")\r\n                .then(result => result.find(\"\\\"\"))\r\n                .not();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport async function downloadTableRows() {\r\n    let result = createDefaultTableFetcher();\r\n    if(\"error\" in result) {\r\n        console.error(result.error);\r\n        return;\r\n    }\r\n    let {tableFetcher} = result.result;\r\n    tableFetcher.tableHandler = new TableHandlerForHeaders();\r\n\r\n    let fetchedTable = await tableFetcher.fetch();\r\n    let fetchedRows = fetchedTable.getRows();\r\n    let tableContainer = fetchedTable.tableFetcher.tableRef.getOrgTableContainer();\r\n    tableContainer\r\n        .querySelector(\"tbody\")\r\n        .replaceChildren(...fetchedRows);\r\n    tableContainer.querySelector(\"table\").classList.add(\"fullyFetched\");\r\n    executeTableCommands(fetchedTable.tableFetcher.tableRef);\r\n    return fetchedTable;\r\n}\r\n\r\nexport async function checkAndDownloadTableRows() {\r\n    let tableRef = findTableRefInCode();\r\n    if(tableRef.getOrgTableContainer().querySelector(\"table\").classList.contains(\"fullyFetched\"))\r\n        return tableRef;\r\n    await downloadTableRows();\r\n    return tableRef;\r\n}\r\n\r\nexport class InfoBarTableFetchListener implements TableFetchListener {\r\n    infoBar: InfoBar;\r\n    progressBar: ProgressBar;\r\n\r\n    constructor(infoBar: InfoBar, progressBar: ProgressBar) {\r\n        this.infoBar = infoBar;\r\n        this.progressBar = progressBar;\r\n    }\r\n\r\n    onStartFetching(tableFetcher: TableFetcher): void {\r\n        this.progressBar.start(tableFetcher.tableRef.navigationData.steps());\r\n    }\r\n    onLoaded (tableFetcher: TableFetcher): void {\r\n        if(tableFetcher.isUsingCached) {\r\n            let reset_onclick = (e: MouseEvent ) => {\r\n                e.preventDefault();\r\n                tableFetcher.reset();\r\n                downloadTableRows().then(_fetchedTable => {});\r\n                return true;\r\n            }\r\n            this.infoBar.setCacheInfo(`Gegevens uit cache, ${millisToString((new Date()).getTime()-tableFetcher.shadowTableDate.getTime())} oud. `, reset_onclick);\r\n        }\r\n    }\r\n\r\n    onBeforeLoadingPage(_tableFetcher: TableFetcher): boolean {\r\n        return true;\r\n    }\r\n\r\n    onFinished(_tableFetcher: TableFetcher): void {\r\n        this.progressBar.stop();\r\n    }\r\n\r\n    onPageLoaded(_tableFetcher: TableFetcher, _pageCnt: number, _text: string): void {\r\n        this.progressBar.next();\r\n    }\r\n}\r\n\r\ninterface DefaultTableRef {\r\n    tableRef: TableRef,\r\n    infoBar: InfoBar,\r\n    progressBar: ProgressBar\r\n}\r\nexport function createDefaultTableRefAndInfoBar(): Result<DefaultTableRef> {\r\n    let tableRef = findTableRefInCode();\r\n    if(!tableRef) {\r\n        return { error: \"Cannot find table.\" };\r\n    }\r\n    document.getElementById(def.INFO_CONTAINER_ID)?.remove();\r\n    let divInfoContainer = tableRef.createElementAboveTable(\"div\");\r\n    let infoBar = new InfoBar(divInfoContainer.appendChild(document.createElement(\"div\")));\r\n    let progressBar = insertProgressBar(infoBar.divInfoLine, \"loading pages... \");\r\n    return { result: {tableRef, infoBar, progressBar} };\r\n}\r\n\r\ninterface DefaultTableFetcher {\r\n    tableFetcher: TableFetcher,\r\n    infoBar: InfoBar,\r\n    progressBar: ProgressBar,\r\n    infoBarListener: InfoBarTableFetchListener\r\n}\r\nexport function createDefaultTableFetcher(): Result<DefaultTableFetcher> {\r\n    let result = createDefaultTableRefAndInfoBar();\r\n    if(\"error\" in result)\r\n        return { error: result.error };\r\n\r\n    let {tableRef, infoBar, progressBar} = result.result;\r\n\r\n    let tableFetcher = new TableFetcher(\r\n        tableRef,\r\n        getChecksumBuilder(tableRef.htmlTableId)\r\n    );\r\n    let infoBarListener = new InfoBarTableFetchListener(infoBar, progressBar);\r\n    tableFetcher.addListener(infoBarListener);\r\n    return { result: {tableFetcher, infoBar, progressBar, infoBarListener} };\r\n}","import {createTable, distinct, getPageTransientStateValue, openHtmlTab, range, rangeGenerator} from \"../globals\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\nimport {checkAndDownloadTableRows} from \"./loadAnyTable\";\r\nimport {addMenuItem, addMenuSeparator, setupMenu} from \"../menus\";\r\nimport {TableFetcher, TableHandler, TableRef} from \"./tableFetcher\";\r\nimport * as def from \"../def\";\r\nimport {options} from \"../plugin_options/options\";\r\nimport {Actions} from \"../messaging\";\r\n\r\n\r\nfunction sortRows(cmpFunction: (a: HTMLTableCellElement, b: HTMLTableCellElement) => number, header: Element, rows: HTMLTableRowElement[], index: number, descending: boolean) {\r\n    let cmpDirectionalFunction: (a: HTMLTableRowElement, b: HTMLTableRowElement) => number;\r\n    if (descending) {\r\n        cmpDirectionalFunction = (a: HTMLTableRowElement, b: HTMLTableRowElement) => cmpFunction(b.cells[index], a.cells[index]);\r\n        header.classList.add(\"sortDescending\");\r\n    } else {\r\n        cmpDirectionalFunction = (a: HTMLTableRowElement, b: HTMLTableRowElement) => cmpFunction(a.cells[index], b.cells[index]);\r\n        header.classList.add(\"sortAscending\");\r\n    }\r\n\r\n    rows.sort((a, b) => cmpDirectionalFunction(a, b));\r\n}\r\n\r\nfunction cmpAlpha(a: HTMLTableCellElement, b: HTMLTableCellElement) {\r\n    return a.innerText.localeCompare(b.innerText);\r\n}\r\n\r\nfunction cmpDate(a: HTMLTableCellElement, b: HTMLTableCellElement) {\r\n    return normalizeDate(a.innerText).localeCompare(normalizeDate(b.innerText));\r\n}\r\n\r\n// Convert date string for sorting: DD-MM-YYYY >  YYYYMMDD\r\nfunction normalizeDate(date: string) {\r\n    let dateParts = date.split('-');\r\n    return dateParts[2] + dateParts[1] + dateParts[0];\r\n}\r\n\r\nfunction cmpNumber(a: HTMLTableCellElement, b: HTMLTableCellElement) {\r\n    let res = Number(a.innerText) - Number(b.innerText);\r\n    if (isNaN(res)) {\r\n        throw new Error();\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction sortTableByColumn(table: HTMLTableElement, index: number, descending: boolean) {\r\n    let header = table.tHead.children[0].children[index];\r\n    let rows = Array.from(table.tBodies[0].rows);\r\n    for (let thead of table.tHead.children[0].children) {\r\n        thead.classList.remove(\"sortAscending\", \"sortDescending\")\r\n    }\r\n    let cmpFunc = cmpAlpha;\r\n    if (isColumnProbablyNumeric(table, index)) {\r\n        cmpFunc = cmpNumber;\r\n    } else if (isColumnProbablyDate(table, index)) {\r\n        cmpFunc = cmpDate;\r\n    }\r\n    try {\r\n        sortRows(cmpFunc, header, rows, index, descending);\r\n    } catch (e) {\r\n        console.error(e);\r\n        if (cmpFunc !== cmpAlpha)\r\n            sortRows(cmpAlpha, header, rows, index, descending);\r\n    }\r\n\r\n    rows.forEach(row => table.tBodies[0].appendChild(row));\r\n}\r\n\r\nfunction copyFullTable(table: HTMLTableElement) {\r\n    let headerCells = table.tHead.children[0].children as HTMLCollectionOf<HTMLTableCellElement>;\r\n    let headers = [...headerCells].filter(cell => cell.style.display !== \"none\").map(cell => cell.innerText);\r\n    let rows = table.tBodies[0].children as HTMLCollectionOf<HTMLTableRowElement>;\r\n    let cells = [...rows].map(row => [...row.cells].filter(cell => cell.style.display !== \"none\").map(cell => cell.innerText));\r\n    createAndCopyTable(headers, cells);\r\n}\r\n\r\nfunction copyOneColumn(table: HTMLTableElement, index: number) {\r\n    createAndCopyTable(\r\n        [(table.tHead.children[0].children[index] as HTMLTableCellElement).innerText],\r\n        [...table.tBodies[0].rows].map(row => [row.cells[index].innerText])\r\n    );\r\n}\r\n\r\nfunction createAndCopyTable(headers: Iterable<string>, cols: Iterable<Iterable<string>>) {\r\n    navigator.clipboard.writeText(createTable(headers, cols).outerHTML).then(_r => {});\r\n}\r\n\r\nfunction reSortTableByColumn(ev: MouseEvent, table: HTMLTableElement) {\r\n    let header = table.tHead.children[0].children[getColumnIndex(ev)];\r\n    let wasAscending = header.classList.contains(\"sortAscending\");\r\n    forTableDo(ev, (_fetchedTable, index) => sortTableByColumn(table, index, wasAscending));\r\n}\r\n\r\nfunction isColumnProbablyDate(table: HTMLTableElement, index: number) {\r\n    let rows = Array.from(table.tBodies[0].rows);\r\n    return stringToDate(rows[0].cells[index].textContent);\r\n}\r\n\r\nfunction stringToDate(text: string) {\r\n    let reDate = /^(\\d\\d)[-\\/](\\d\\d)[-\\/](\\d\\d\\d\\d)/;\r\n    let matches = text.match(reDate);\r\n    if (!matches)\r\n        return undefined;\r\n    return new Date(matches[3] + \"-\" + matches[2] + \"/\" + matches[1]);\r\n}\r\n\r\nfunction isColumnProbablyNumeric(table: HTMLTableElement, index: number) {\r\n    let rows = Array.from(table.tBodies[0].rows);\r\n\r\n    const MAX_SAMPLES = 100;\r\n    let samples = rangeGenerator(0, rows.length, rows.length > MAX_SAMPLES ? rows.length / MAX_SAMPLES : 1)\r\n        .map(float => Math.floor(float));\r\n    return !samples\r\n        .map(rowIndex => rows[rowIndex])\r\n        .some(row => {\r\n            return isNaN(Number((row.children[index] as HTMLElement).innerText));\r\n        });\r\n}\r\n\r\nexport function decorateTableHeader(table: HTMLTableElement) {\r\n    if (table.tHead.classList.contains(\"clickHandler\"))\r\n        return;\r\n    table.tHead.classList.add(\"clickHandler\");\r\n    if(!options.showTableHeaders)\r\n        return;\r\n\r\n    Array.from(table.tHead.children[0].children)\r\n        .forEach((colHeader: HTMLElement) => {\r\n            colHeader.onclick = (ev) => {\r\n                reSortTableByColumn(ev, table);\r\n            };\r\n            if(table.classList.contains(def.NO_MENU))\r\n                return;\r\n            let {first: span, last: idiom} = emmet.appendChild(colHeader, 'span>button.miniButton.naked>i.fas.fa-list');\r\n            let menu = setupMenu(span as HTMLElement, idiom.parentElement);\r\n            addMenuItem(menu, \"Toon unieke waarden\", 0, (ev) => { forTableDo(ev, showDistinctColumn); });\r\n            addMenuItem(menu, \"Verberg kolom\", 0, (ev) => { console.log(\"verberg kolom\"); forTableColumnDo(ev, hideColumn)});\r\n            addMenuItem(menu, \"Toon alle kolommen\", 0, (ev) => { console.log(\"verberg kolom\"); forTableColumnDo(ev, showColumns)});\r\n            addMenuSeparator(menu, \"Sorteer\", 0);\r\n            addMenuItem(menu, \"Laag naar hoog (a > z)\", 1, (ev) => { forTableDo(ev, (_fetchedTable, index) => sortTableByColumn(table, index, false))});\r\n            addMenuItem(menu, \"Hoog naar laag (z > a)\", 1, (ev) => { forTableDo(ev, (_fetchedTable, index) => sortTableByColumn(table, index, true))});\r\n            addMenuSeparator(menu, \"Sorteer als:\", 1);\r\n            addMenuItem(menu, \"Tekst\", 2, (_ev) => { });\r\n            addMenuItem(menu, \"Getallen\", 2, (_ev) => { });\r\n            addMenuSeparator(menu, \"Kopieer nr klipbord\", 0);\r\n            addMenuItem(menu, \"Kolom\", 1, (ev) => { forTableDo(ev, (_fetchedTable, index) => copyOneColumn(table, index))});\r\n            addMenuItem(menu, \"Hele tabel\", 1, (ev) => { forTableDo(ev, (_fetchedTable, _index) => copyFullTable(table))});\r\n            addMenuSeparator(menu, \"<= Samenvoegen\", 0);\r\n            addMenuItem(menu, \"met spatie\", 1, (ev) => { forTableColumnDo(ev, createTwoColumnsCmd(Direction.LEFT, mergeColumnWithSpace))});\r\n            addMenuItem(menu, \"met comma\", 1, (ev) => { forTableColumnDo(ev, createTwoColumnsCmd(Direction.LEFT, mergeColumnWithComma))});\r\n            addMenuSeparator(menu, \"Verplaatsen\", 0);\r\n            addMenuItem(menu, \"<=\", 1, (ev) => { forTableColumnDo(ev, createTwoColumnsCmd(Direction.LEFT, swapColumns))});\r\n            addMenuItem(menu, \"=>\", 1, (ev) => { forTableColumnDo(ev, createTwoColumnsCmd(Direction.RIGHT, swapColumns))});\r\n        });\r\n    relabelHeaders(table.tHead.children[0] as HTMLTableRowElement);\r\n}\r\n\r\nfunction getDistinctColumn(tableContainer: HTMLElement, index: number) {\r\n    let rows = Array.from(tableContainer.querySelector(\"tbody\").rows);\r\n\r\n    return distinct(rows.map(row => row.children[index].textContent)).sort();\r\n}\r\n\r\nexport class TableHandlerForHeaders implements TableHandler {\r\n    onReset(_tableDef: TableFetcher){\r\n        console.log(\"RESET\");\r\n    }\r\n}\r\n\r\nfunction getColumnIndex(ev: MouseEvent) {\r\n    let td = ev.target as HTMLElement;\r\n    if (td.tagName !== \"TD\") {\r\n        td = td.closest(\"TH\");\r\n    }\r\n    return Array.prototype.indexOf.call(td.parentElement.children, td);\r\n}\r\n\r\ntype DoForRow = (row: HTMLTableRowElement, index: number, context: unknown) => void;\r\ntype GetContext = (tableRef: TableRef, index: number) => unknown;\r\n\r\ntype TableColumnCmdDef = {\r\n    getContext?: GetContext\r\n    doForRow: DoForRow,\r\n}\r\n\r\ntype TableColumnCmd = {\r\n    cmdDef: TableColumnCmdDef,\r\n    index: number\r\n}\r\n\r\nexport function executeTableCommands(tableRef: TableRef) {\r\n    let cmds = getPageTransientStateValue(def.GLOBAL_COMMAND_BUFFER_KEY, []) as TableColumnCmd[];\r\n    console.log(\"Executing:\");\r\n    console.log(cmds);\r\n    for(let cmd of cmds) {\r\n        executeCmd(cmd, tableRef, true);\r\n    }\r\n}\r\n\r\nfunction forTableDo(ev: MouseEvent, doIt: (tableRef: TableRef, index: number) => void) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n    checkAndDownloadTableRows()\r\n        .then(tableRef => {\r\n            doIt(tableRef, getColumnIndex(ev));\r\n        });\r\n}\r\n\r\nfunction forTableColumnDo(ev: MouseEvent, cmdDef: TableColumnCmdDef) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n    checkAndDownloadTableRows()\r\n        .then(tableRef => {\r\n            let index = getColumnIndex(ev);\r\n            let cmd: TableColumnCmd = {\r\n                cmdDef,\r\n                index\r\n            }\r\n            executeCmd(cmd, tableRef, false);\r\n            let cmds = getPageTransientStateValue(def.GLOBAL_COMMAND_BUFFER_KEY, []) as TableColumnCmd[];\r\n            cmds.push(cmd);\r\n            relabelHeaders(tableRef.getOrgTableContainer().querySelector(\"thead>tr\"))\r\n        });\r\n}\r\n\r\nfunction executeCmd(cmd: TableColumnCmd, tableRef: TableRef, onlyBody: boolean) {\r\n    let context = cmd.cmdDef.getContext?.(tableRef, cmd.index);\r\n\r\n    let rows: Iterable<HTMLTableRowElement>;\r\n    if(onlyBody)\r\n        rows = tableRef.getOrgTableContainer().querySelector(\"tbody\").rows;\r\n    else\r\n        rows = tableRef.getOrgTableContainer().querySelectorAll(\"tr\");\r\n\r\n    for(let row of rows) {\r\n        cmd.cmdDef.doForRow(row, cmd.index, context);\r\n    }\r\n}\r\n\r\nfunction showDistinctColumn(tableRef: TableRef, index: number) {\r\n    let cols = getDistinctColumn(tableRef.getOrgTableContainer(), index);\r\n    let tmpDiv = document.createElement(\"div\");\r\n    let tbody = emmet.appendChild(tmpDiv, \"table>tbody\").last as HTMLTableSectionElement;\r\n    for(let col of cols) {\r\n        emmet.appendChild(tbody, `tr>td>{${col}}`);\r\n    }\r\n    let headerRow = tableRef.getOrgTableContainer().querySelector(\"thead>tr\");\r\n    let headerNodes = [...headerRow.querySelectorAll(\"th\")[index].childNodes];\r\n    let headerText = headerNodes.filter(node => node.nodeType === Node.TEXT_NODE).map(node => node.textContent).join(\" \");\r\n    openHtmlTab(tmpDiv.innerHTML, headerText + \" (uniek)\");\r\n}\r\n\r\nlet hideColumn: TableColumnCmdDef = {\r\n    doForRow: function (row, index, _context) {\r\n        row.cells[index].style.display = \"none\";\r\n    }\r\n}\r\n\r\nlet showColumns: TableColumnCmdDef = {\r\n    doForRow: function (row, _index, _context) {\r\n        for(let cell of row.cells)\r\n            cell.style.display = \"\";\r\n    }\r\n}\r\n\r\nfunction  mergeColumnWithSpace(row: HTMLTableRowElement, index: number, leftIndex: number) {\r\n    mergeColumnToLeft(row, index, leftIndex, \" \");\r\n}\r\n\r\nfunction  mergeColumnWithComma(row: HTMLTableRowElement, index: number, leftIndex: number) {\r\n    mergeColumnToLeft(row, index, leftIndex, \", \");\r\n}\r\n\r\nfunction mergeColumnToLeft(row: HTMLTableRowElement, index: number, leftIndex: number, separator: string) {\r\n    if(index === 0)\r\n        return; //just to be sure.\r\n    if(row.parentElement.tagName == \"TBODY\") {\r\n        row.cells[index].style.display = \"none\";\r\n        row.cells[leftIndex].innerText += separator + row.cells[index].innerText;\r\n    } else { //THEAD\r\n        row.cells[index].style.display = \"none\";\r\n        let firstTextNode = [...row.cells[leftIndex].childNodes].filter(node => node.nodeType === Node.TEXT_NODE)[0];\r\n        let secondTextNode = [...row.cells[index].childNodes].filter(node => node.nodeType === Node.TEXT_NODE)[0];\r\n        if (firstTextNode && secondTextNode) {\r\n            firstTextNode.textContent += separator + secondTextNode.textContent;\r\n        }\r\n    }\r\n}\r\n\r\nfunction relabelHeaders(headerRow: HTMLTableRowElement) {\r\n    for(let cell of headerRow.cells) {\r\n        cell.classList.remove(\"shiftMenuLeft\");\r\n    }\r\n    headerRow.cells[headerRow.cells.length-1].classList.add(\"shiftMenuLeft\");\r\n}\r\n\r\nfunction findNextVisibleCell(headerRow: HTMLTableRowElement, indexes: number[]) {\r\n    let index = undefined;\r\n    for (let i of indexes) {\r\n        if ((headerRow.children[i] as HTMLElement).style.display !== \"none\") {\r\n            index = i;\r\n            break;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n\r\nenum Direction {  LEFT, RIGHT}\r\nfunction createTwoColumnsCmd(direction: Direction, twoColumnFunc: (row: HTMLTableRowElement, index1: number, index2: number) => void) : TableColumnCmdDef  {\r\n    return {\r\n        getContext: function (tableRef, index: number): unknown {\r\n            let row = tableRef.getOrgTableContainer().querySelector(\"thead>tr\") as HTMLTableRowElement;\r\n            let cellRange = direction === Direction.LEFT ? range(index-1, -1) :  range(index+1, row.cells.length);\r\n            return findNextVisibleCell(row, cellRange);\r\n        },\r\n        doForRow: function (row, index, context) {\r\n            twoColumnFunc(row, index, context as number);\r\n        }\r\n    }\r\n}\r\n\r\nfunction swapColumns(row: HTMLTableRowElement, index1: number,  index2: number) {\r\n    if(index1 == undefined || index2 == undefined)\r\n        return;\r\n    if(index1 > index2) {\r\n        [index1, index2] = [index2, index1];\r\n    }\r\n    row.children[index1].parentElement.insertBefore(row.children[index2], row.children[index1]);\r\n}\r\n","import {VakLeraar} from \"./scrapeUren\";\r\n\r\nexport class UrenData {\r\n    year: number;\r\n    fromCloud: CloudData;\r\n    vakLeraars: Map<string, VakLeraar>;\r\n\r\n    constructor(year: number, cloudData: CloudData, vakLeraars: Map<string, VakLeraar>) {\r\n        this.year = year;\r\n        this.fromCloud = cloudData;\r\n        this.vakLeraars = vakLeraars;\r\n    }\r\n}\r\n\r\nexport class JsonCloudData {\r\n    version: string;\r\n    columns: JsonColumn[];\r\n\r\n    constructor(object?: Object) {\r\n        this.version = \"1.0\";\r\n        this.columns = [];\r\n        if(object) {\r\n            Object.assign(this, object);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CloudData {\r\n    columnMap?: Map<string, Map<string, string>>;\r\n\r\n    constructor(jsonCloudData: JsonCloudData) {\r\n        this.#buildMapFromJsonData(jsonCloudData);\r\n    }\r\n\r\n    #buildMapFromJsonData(jsonCloudData: JsonCloudData) {\r\n        for (let column of jsonCloudData.columns) {\r\n            column.rowMap = new Map(column.rows.map((row) => [row.key, row.value]));\r\n        }\r\n        this.columnMap = new Map(jsonCloudData.columns.map((col) => [col.key, col.rowMap]));\r\n    }\r\n\r\n    toJson(colKey1: string, colKey2: string) {\r\n        let data = new JsonCloudData();\r\n        let col1 = this.#columnToJson(colKey1);\r\n        let col2 = this.#columnToJson(colKey2);\r\n        data.columns.push({key: colKey1, rows: col1});\r\n        data.columns.push({key: colKey2, rows: col2});\r\n        return data;\r\n    }\r\n\r\n    #columnToJson(colKey: string) {\r\n        let cells: JsonCell[] = [];\r\n        for (let [key, value] of this.columnMap.get(colKey)) {\r\n            let row: JsonCell = {\r\n                key: key,\r\n                value: value\r\n            };\r\n            cells.push(row);\r\n        }\r\n        return cells;\r\n    }\r\n}\r\n\r\nexport interface JsonCell {\r\n    key: string,\r\n    value: string\r\n}\r\n\r\ninterface JsonColumn {\r\n    key: string,\r\n    rows: JsonCell[]\r\n    rowMap?: Map<string, string>;\r\n}\r\n\r\n","import {addButton, calculateSchooljaar, createSchoolyearString, createShortSchoolyearString, createTable, findSchooljaar, getHighestSchooljaarAvailable, getSchoolIdString, openHoursSettings, openHtmlTab, setButtonHighlighted} from \"../globals\";\r\nimport * as def from \"../def\";\r\nimport {buildTable, getUrenVakLeraarFileName} from \"./buildUren\";\r\nimport {scrapeStudent, VakLeraar} from \"./scrapeUren\";\r\nimport {cloud} from \"../cloud\";\r\nimport {TableFetcher} from \"../table/tableFetcher\";\r\nimport {setCriteriaForTeacherHours} from \"./prefillInstruments\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport {NamedCellTableFetchListener} from \"../pageHandlers\";\r\nimport {decorateTableHeader} from \"../table/tableHeaders\";\r\nimport {getGotoStateOrDefault, Goto, PageName, saveGotoState, WerklijstGotoState} from \"../gotoState\";\r\nimport {registerChecksumHandler} from \"../table/observer\";\r\nimport {CloudData, JsonCloudData, UrenData} from \"./urenData\";\r\nimport {createDefaultTableFetcher} from \"../table/loadAnyTable\";\r\nimport {Actions, sendRequest, TabType} from \"../messaging\";\r\nimport {fetchHoursSettingsOrDefault, mapHourSettings} from \"./hoursSettings\";\r\n\r\nconst tableId = \"table_leerlingen_werklijst_table\";\r\n\r\nregisterChecksumHandler(tableId,  (_tableDef: TableFetcher) => {\r\n    return document.querySelector(\"#view_contents > div.alert.alert-primary\")?.textContent.replace(\"Criteria aanpassen\", \"\")?.replace(\"Criteria:\", \"\") ?? \"\"\r\n    }\r\n    );\r\n\r\nexport default new HashObserver(\"#leerlingen-werklijst\", onMutation, false, onPageLoaded);\r\n\r\nfunction onPageLoaded() {\r\n    console.log(\"Werklijst onPageLoaded\");\r\n    if (document.querySelector(\"#btn_werklijst_maken\")) {\r\n        onCriteriaShown();\r\n    }\r\n}\r\n\r\nfunction onMutation(mutation: MutationRecord) {\r\n    console.log(\"Werklijst onMutation\");\r\n    if ((mutation.target as HTMLElement).id === \"table_leerlingen_werklijst_table\") {\r\n        onWerklijstChanged();\r\n        return true;\r\n    }\r\n    let buttonBar = document.getElementById(\"tablenav_leerlingen_werklijst_top\");\r\n    if (mutation.target === buttonBar) {\r\n        onButtonBarChanged();\r\n        return true;\r\n    }\r\n    if (document.querySelector(\"#btn_werklijst_maken\")) {\r\n        onCriteriaShown();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onCriteriaShown() {\r\n    let pageState = getGotoStateOrDefault(PageName.Werklijst) as WerklijstGotoState;\r\n    if(pageState.goto == Goto.Werklijst_uren_prevYear) {\r\n        pageState.goto = Goto.None;\r\n        saveGotoState(pageState);\r\n        setCriteriaForTeacherHours(createSchoolyearString(calculateSchooljaar())).then(() => {});\r\n        return;\r\n    }\r\n    if(pageState.goto == Goto.Werklijst_uren_nextYear) {\r\n        pageState.goto = Goto.None;\r\n        saveGotoState(pageState);\r\n        setCriteriaForTeacherHours(createSchoolyearString(calculateSchooljaar()+1)).then(() => {});\r\n        return;\r\n    }\r\n    pageState.werklijstTableName = \"\";\r\n    saveGotoState(pageState);\r\n    let btnWerklijstMaken = document.querySelector(\"#btn_werklijst_maken\") as HTMLButtonElement;\r\n    if(document.getElementById(def.UREN_PREV_BTN_ID))\r\n        return;\r\n\r\n    let year = parseInt(getHighestSchooljaarAvailable());\r\n    let prevSchoolyear = createSchoolyearString(year-1);\r\n    let nextSchoolyear = createSchoolyearString(year);\r\n    let prevSchoolyearShort = createShortSchoolyearString(year-1);\r\n    let nextSchoolyearShort = createShortSchoolyearString(year);\r\n    addButton(btnWerklijstMaken, def.UREN_PREV_BTN_ID, \"Toon lerarenuren voor \"+ prevSchoolyear, async () => { await setCriteriaForTeacherHours(prevSchoolyear); }, \"\", [\"btn\", \"btn-outline-dark\"], \"Uren \"+ prevSchoolyearShort);\r\n    addButton(btnWerklijstMaken, def.UREN_PREV_SETUP_BTN_ID, \"Setup voor \"+ prevSchoolyear, async () => { await showUrenSetup(prevSchoolyear); }, \"fas-certificate\", [\"btn\", \"btn-outline-dark\"], \"\");\r\n    addButton(btnWerklijstMaken, def.UREN_PREV_SETUP_BTN_ID+\"sdf\", \"test \", async () => { await sendMessageToHoursSettings(); }, \"fas-certificate\", [\"btn\", \"btn-outline-dark\"], \"\");\r\n    addButton(btnWerklijstMaken, def.UREN_NEXT_BTN_ID, \"Toon lerarenuren voor \"+ nextSchoolyear, async () => { await setCriteriaForTeacherHours(nextSchoolyear); }, \"\", [\"btn\", \"btn-outline-dark\"], \"Uren \"+ nextSchoolyearShort);\r\n    getSchoolIdString();\r\n}\r\n\r\nchrome.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\r\n    console.log(\"Received message from service worker: \", request);\r\n})\r\n\r\n\r\nasync function showUrenSetup(schoolyear: string) {\r\n    let setup = await fetchHoursSettingsOrDefault(schoolyear);\r\n    let res = await openHoursSettings(setup);\r\n    globalHoursSettingsTabId = res.tabId;\r\n}\r\n\r\nlet globalHoursSettingsTabId: number;\r\n\r\nasync function sendMessageToHoursSettings() {\r\n    sendRequest(Actions.GreetingsFromParent, TabType.Main, TabType.HoursSettings, globalHoursSettingsTabId, \"Hello the main content script.\").then(_ => {});\r\n}\r\n\r\nfunction onWerklijstChanged() {\r\n    let werklijstPageState = getGotoStateOrDefault(PageName.Werklijst) as WerklijstGotoState;\r\n    if(werklijstPageState.werklijstTableName === def.UREN_TABLE_STATE_NAME) {\r\n        tryUntil(onShowLerarenUren);\r\n    }\r\n    decorateTableHeader(document.querySelector(\"table#table_leerlingen_werklijst_table\") as HTMLTableElement);\r\n}\r\n\r\nfunction onButtonBarChanged() {\r\n    let targetButton = document.querySelector(\"#tablenav_leerlingen_werklijst_top > div > div.btn-group.btn-group-sm.datatable-buttons > button:nth-child(1)\") as HTMLButtonElement;\r\n    addButton(targetButton, def.COUNT_BUTTON_ID, \"Toon telling\", onShowLerarenUren, \"fa-guitar\", [\"btn-outline-info\"]);\r\n    addButton(targetButton, def.MAIL_BTN_ID, \"Email to clipboard\", onClickCopyEmails, \"fa-envelope\", [\"btn\", \"btn-outline-info\"]);\r\n}\r\n\r\nfunction onClickCopyEmails() {\r\n    let requiredHeaderLabels = [\"e-mailadressen\"];\r\n\r\n    let namedCellListener = new NamedCellTableFetchListener(requiredHeaderLabels, _tableDef1 => {\r\n        navigator.clipboard.writeText(\"\").then(_value => {\r\n            console.log(\"Clipboard cleared.\")\r\n        });\r\n    });\r\n\r\n    let result = createDefaultTableFetcher();\r\n    if(\"error\" in result) {\r\n        console.error(result.error);\r\n        return;\r\n    }\r\n\r\n    let {tableFetcher, infoBar} = result.result;\r\n    tableFetcher.addListener(namedCellListener);\r\n\r\n    tableFetcher.fetch( )\r\n        .then((fetchedTable) => {\r\n            let allEmails = fetchedTable.getRowsAsArray()\r\n                .map(tr=> namedCellListener.getColumnText(tr, \"e-mailadressen\"));\r\n\r\n            let flattened = allEmails\r\n                .map((emails: string) => emails.split(/[,;]/))\r\n                .flat()\r\n                .filter((email: string) => !email.includes(\"@academiestudent.be\"))\r\n                .filter((email: string) => email !== \"\");\r\n            navigator.clipboard.writeText(flattened.join(\";\\n\")).then(() =>\r\n                infoBar.setTempMessage(\"Alle emails zijn naar het clipboard gekopieerd. Je kan ze plakken in Outlook.\")\r\n            );\r\n        }).catch(reason => {\r\n            console.log(\"Loading failed (gracefully.\");\r\n            console.log(reason);\r\n    });\r\n}\r\n\r\nfunction tryUntil(func: () => boolean) {\r\n    if(!func())\r\n        setTimeout(() => tryUntil(func), 100);\r\n}\r\n\r\nfunction onShowLerarenUren() {\r\n    //Build lazily and only once. Table will automatically be erased when filters are changed.\r\n    if (!document.getElementById(def.COUNT_TABLE_ID)) {\r\n        let result = createDefaultTableFetcher();\r\n        if(\"error\" in result) {\r\n            console.log(result.error); //don't report as log.error.\r\n            return false;\r\n        }\r\n\r\n        let {tableFetcher} = result.result;\r\n        let fileName = getUrenVakLeraarFileName();\r\n        let requiredHeaderLabels = [\"naam\", \"voornaam\", \"vak\", \"klasleerkracht\", \"graad + leerjaar\"];\r\n        let tableFetchListener = new NamedCellTableFetchListener(requiredHeaderLabels, () => {});\r\n        tableFetcher.addListener(tableFetchListener);\r\n\r\n        Promise.all([tableFetcher.fetch(), getUrenFromCloud(fileName)]).then(async results => {\r\n            let schoolYear = findSchooljaar();\r\n            let [fetchedTable, jsonCloudData] = results;\r\n            let vakLeraars = new Map();\r\n            let rows = fetchedTable.getRows();\r\n            let errors = [];\r\n            let hourSettings = await fetchHoursSettingsOrDefault(schoolYear);\r\n            let hourSettingsMapped = mapHourSettings(hourSettings);\r\n            for(let tr of rows) {\r\n                let error = scrapeStudent(tableFetcher, tableFetchListener, tr, vakLeraars, hourSettingsMapped);\r\n                if(error)\r\n                    errors.push(error);\r\n            }\r\n            if(errors.length)\r\n                openHtmlTab(createTable([\"Error\"], errors.map(error => [error])).outerHTML, \"Errors\").then(_ => {});\r\n            let fromCloud = upgradeCloudData(jsonCloudData);\r\n            vakLeraars = new Map([...vakLeraars.entries()].sort((a, b) => a[0] < b[0] ? -1 : ((a[0] > b[0])? 1 : 0))) as Map<string, VakLeraar>;\r\n            document.getElementById(def.COUNT_TABLE_ID)?.remove();\r\n            let year = parseInt(schoolYear);\r\n            buildTable(new UrenData(year, new CloudData(fromCloud), vakLeraars), tableFetcher);\r\n            document.getElementById(def.COUNT_TABLE_ID).style.display = \"none\";\r\n            showOrHideNewTable();\r\n        });\r\n\r\n        return true;\r\n    }\r\n    showOrHideNewTable();\r\n    return true;\r\n}\r\n\r\nasync function getUrenFromCloud(fileName: string): Promise<JsonCloudData> {\r\n    try {\r\n        return await cloud.json.fetch(fileName);\r\n    } catch (e) {\r\n        return new JsonCloudData();\r\n    }\r\n}\r\n\r\nfunction showOrHideNewTable() {\r\n    let showNewTable = document.getElementById(def.COUNT_TABLE_ID).style.display === \"none\";\r\n    document.getElementById(\"table_leerlingen_werklijst_table\").style.display = showNewTable ? \"none\" : \"table\";\r\n    document.getElementById(def.COUNT_TABLE_ID).style.display = showNewTable ? \"table\" : \"none\";\r\n    document.getElementById(def.COUNT_BUTTON_ID).title = showNewTable ? \"Toon normaal\" : \"Toon telling\";\r\n    setButtonHighlighted(def.COUNT_BUTTON_ID, showNewTable);\r\n    let pageState = getGotoStateOrDefault(PageName.Werklijst) as WerklijstGotoState;\r\n    pageState.werklijstTableName = showNewTable ? def.UREN_TABLE_STATE_NAME : \"\";\r\n    saveGotoState(pageState);\r\n}\r\n\r\nfunction upgradeCloudData(fromCloud: JsonCloudData) {\r\n    //if fromCloud.version === \"....\" --> convert.\r\n    return new JsonCloudData(fromCloud); //re-create, just to be sure we have all the fields.\r\n\r\n\r\n}\r\n","import {HashObserver} from \"../pageObserver\";\r\nimport {createSearchField} from \"../globals\";\r\nimport {createTextRowFilter, filterTable} from \"../filter\";\r\n\r\nexport default new HashObserver(\"#extra-inschrijvingen-vakgroepen-vakgroep\", onMutation);\r\n\r\nfunction onMutation (mutation: MutationRecord) {\r\n    let divVakken = document.getElementById(\"div_table_vakgroepen_vakken\");\r\n    if (mutation.target !== divVakken) {\r\n        return false;\r\n    }\r\n    onVakgroepChanged(divVakken);\r\n    return true;\r\n}\r\n\r\nconst TXT_FILTER_ID = \"txtFilter\";\r\nlet savedSearch = \"\";\r\n\r\nfunction onVakgroepChanged(divVakken: HTMLElement) {\r\n    let table = divVakken.querySelector(\"table\");\r\n    if(!document.getElementById(TXT_FILTER_ID))\r\n        table.parentElement.insertBefore(createSearchField(TXT_FILTER_ID, onSearchInput, savedSearch), table);\r\n\r\n    onSearchInput();\r\n}\r\n\r\nfunction onSearchInput() {\r\n    savedSearch = (document.getElementById(TXT_FILTER_ID) as HTMLInputElement).value;\r\n\r\n    function getRowText(tr: HTMLTableRowElement) {\r\n        let instrumentName = tr.cells[0].querySelector(\"label\").textContent.trim();\r\n        let strong = tr.cells[0].querySelector(\"strong\")?.textContent.trim();\r\n        return instrumentName + \" \" + strong;\r\n    }\r\n\r\n    let rowFilter = createTextRowFilter(savedSearch, getRowText);\r\n    filterTable(document.querySelector(\"#div_table_vakgroepen_vakken table\") as HTMLTableElement, rowFilter);\r\n}","import {HashObserver} from \"../pageObserver\";\r\n\r\nexport default new HashObserver(\"#leerlingen-verwittigen\", onMutation);\r\n\r\nconst CHAR_COUNTER = \"charCounterClass\";\r\nconst COUNTER_ID = \"charCounter\"\r\nfunction onMutation (_mutation: MutationRecord) {\r\n    // console.log(mutation)\r\n    let txtSms = document.getElementById(\"leerlingen_verwittigen_bericht_sjabloon\");\r\n    if(txtSms && !txtSms?.classList.contains(CHAR_COUNTER)) {\r\n        txtSms.classList.add(CHAR_COUNTER);\r\n        txtSms.addEventListener(\"input\", onSmsChanged);\r\n        let span = document.createElement(\"span\");\r\n        span.id = COUNTER_ID;\r\n        txtSms.parentElement.appendChild(span);\r\n        onSmsChanged(undefined);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction onSmsChanged(_event: Event) {\r\n    let txtSms = document.getElementById(\"leerlingen_verwittigen_bericht_sjabloon\") as HTMLTextAreaElement;\r\n    let spanCounter: HTMLSpanElement =  document.getElementById(COUNTER_ID);\r\n    spanCounter.textContent = txtSms.value.length.toString();\r\n}\r\n","import * as def from \"../def.js\";\r\nimport {HashObserver} from \"../pageObserver\";\r\nimport {addTableNavigationButton, getBothToolbars} from \"../globals\";\r\nimport {createDefaultTableFetcher, getTableFromHash} from \"../table/loadAnyTable\";\r\nimport {InfoBar} from \"../infoBar\";\r\n\r\nexport default new HashObserver(\"#leerlingen-lijsten-awi-percentages_leerling_vak\", onMutationAanwezgheden);\r\n\r\nfunction onMutationAanwezgheden(_mutation: MutationRecord) {\r\n    let tableId = document.getElementById(\"table_lijst_awi_percentages_leerling_vak_table\") as HTMLTableElement;\r\n    if (!tableId) {\r\n        return false;\r\n    }\r\n    let navigationBars = getBothToolbars();\r\n    if(!navigationBars)\r\n        return; //wait for top and bottom bars.\r\n    addTableNavigationButton(navigationBars, def.COPY_TABLE_BTN_ID, \"copy table to clipboard\", copyTable, \"fa-clipboard\");\r\n    return true;\r\n}\r\n\r\ninterface Aanwezigheid {\r\n    naam: string,\r\n    voornaam: string,\r\n    vakReduced: string,\r\n    vak: string,\r\n    percentFinancierbaar: number,\r\n    percentTotaal: number,\r\n    percentFinancierbaarAP: number,\r\n    percentTotaalAP: number,\r\n    weken: string,\r\n    codeP: number\r\n}\r\n\r\ninterface Weken {\r\n    naam: string,\r\n    voornaam: string,\r\n    weken: number\r\n}\r\n\r\ninterface Pees {\r\n    naam: string,\r\n    voornaam: string,\r\n    code: string,\r\n    vak: string,\r\n    leraar: string\r\n}\r\n\r\ninterface Attest {\r\n    datum: string,\r\n    leerling: string,\r\n    vak: string,\r\n    leraar: string,\r\n    reden: string\r\n}\r\n\r\nasync function copyTable() {\r\n    let result = createDefaultTableFetcher();\r\n    if(\"error\" in result) {\r\n        console.error(result.error);\r\n        return;\r\n    }\r\n    let {tableFetcher, infoBar, infoBarListener} = result.result;\r\n\r\n    infoBar.setExtraInfo(\"Fetching 3-weken data...\");\r\n\r\n    let wekenLijst = await getTableFromHash(\"leerlingen-lijsten-awi-3weken\", true, infoBarListener).then(bckTableDef => {\r\n        // convert table to text\r\n        let rowsArray = bckTableDef.getRowsAsArray();\r\n        return rowsArray\r\n            .map(row => {\r\n                let namen = row.cells[0].textContent.split(\", \");\r\n                return { naam: namen[0], voornaam: namen[1], weken: parseInt(row.cells[2].textContent)} as Weken;\r\n            });\r\n    });\r\n    console.log(wekenLijst);\r\n\r\n    infoBar.setExtraInfo(\"Fetching attesten...\");\r\n\r\n    let attestenLijst = await getTableFromHash(\"leerlingen-lijsten-awi-ontbrekende_attesten\", true, infoBarListener).then(bckTableDef => {\r\n        return bckTableDef.getRowsAsArray().map(tr => {\r\n                return {\r\n                    datum: tr.cells[0].textContent,\r\n                    leerling: tr.cells[1].textContent,\r\n                    vak: tr.cells[2].textContent,\r\n                    leraar: tr.cells[3].textContent,\r\n                    reden: tr.cells[4].textContent,\r\n                } as Attest;\r\n            }\r\n        )\r\n    });\r\n    console.log(attestenLijst);\r\n\r\n    infoBar.setExtraInfo(\"Fetching afwezigheidscodes...\");\r\n\r\n    let pList = await getTableFromHash(\"leerlingen-lijsten-awi-afwezigheidsregistraties\", true, infoBarListener).then(bckTableDef => {\r\n        let rowsArray = bckTableDef.getRowsAsArray();\r\n\r\n        return rowsArray\r\n            .map(row => {\r\n                let namen = row.cells[1].querySelector(\"strong\").textContent.split(\", \");\r\n                let vakTxt = Array.from(row.cells[1].childNodes).filter(node => node.nodeType === Node.TEXT_NODE).map(node => node.textContent).join(\"\");\r\n                let vak =  reduceVaknaam(vakTxt.substring(3));\r\n                let leraar = row.cells[1].querySelector(\"small\").textContent.substring(16); //remove \"Klasleerkracht: \"\r\n                return { naam: namen[0], voornaam: namen[1], code: row.cells[2].textContent[0], vak, leraar} as Pees;\r\n            });\r\n    });\r\n    console.log(pList);\r\n\r\n    tableFetcher.clearCache();\r\n    tableFetcher.fetch().then((fetchedTable) => {\r\n\r\n        let wekenMap: Map<string, Weken> = new Map();\r\n\r\n        for(let week of wekenLijst) {\r\n            wekenMap.set(week.naam+\",\"+week.voornaam, week);\r\n        }\r\n\r\n        // convert table to text\r\n        let rowsArray = fetchedTable.getRowsAsArray();\r\n        let nu = new Date();\r\n        let text = \"data:\"+ nu.toLocaleDateString() +\"\\n\";\r\n        let aanwList = rowsArray\r\n            .map(row => {\r\n                let percentFinancierbaar =  parseFloat(row.cells[1].querySelector(\"strong\")?.textContent?.replace(\",\", \".\") ?? \"0\")/100;\r\n                let percentTotaal =  parseFloat(row.cells[2].querySelector(\"strong\")?.textContent?.replace(\",\", \".\") ?? \"0\")/100;\r\n                let vak = row.cells[0].querySelector(\"br\")?.nextSibling?.textContent;\r\n                let namen = row.cells[0].querySelector(\"strong\").textContent.split(\", \");\r\n                let aanw: Aanwezigheid = {\r\n                    naam: namen[0],\r\n                    voornaam: namen[1],\r\n                    vak,\r\n                    vakReduced: reduceVaknaam(vak),\r\n                    percentFinancierbaar,\r\n                    percentTotaal,\r\n                    percentFinancierbaarAP: 0,\r\n                    percentTotaalAP: 0,\r\n                    weken: \"\",\r\n                    codeP: 0\r\n                };\r\n                let week = wekenMap.get(aanw.naam+\",\"+aanw.voornaam);\r\n                if(week) {\r\n                    if (aanw.weken) {\r\n                        aanw.weken += \" + \" + week.weken;\r\n                    } else {\r\n                        aanw.weken = week.weken.toString();\r\n                    }\r\n                }\r\n                return aanw;\r\n            });\r\n\r\n        let studentVakPees = new Map<string, number>();\r\n        let leraarPees = new Map<string, number>();\r\n\r\n        pList\r\n            .filter(line => line.code === \"P\")\r\n            .forEach(p => {\r\n               studentVakPees.set(p.naam+\",\"+p.voornaam+\",\"+p.vak, (studentVakPees.get(p.naam+\",\"+p.voornaam+\",\"+p.vak)??0)+1);\r\n               leraarPees.set(p.leraar, (leraarPees.get(p.leraar)??0)+1);\r\n            });\r\n\r\n        console.log(studentVakPees);\r\n        console.log(leraarPees);\r\n\r\n        aanwList.forEach(aanw => {\r\n            let newP = studentVakPees.get(aanw.naam+\",\"+aanw.voornaam+\",\"+aanw.vakReduced)??0;\r\n            if(newP > aanw.codeP)\r\n                aanw.codeP = newP;\r\n        });\r\n\r\n        aanwList.forEach(aanw => {\r\n            text += \"lln: \" + aanw.naam + \",\" + aanw.voornaam + \",\" + aanw.vakReduced + \",\" + aanw.percentFinancierbaar + \",\" + aanw.weken + \",\" + aanw.codeP + \"\\n\";\r\n        });\r\n        leraarPees.forEach((leraarP , key)=> {\r\n            text += \"leraar: \" + key + \",\" + leraarP + \"\\n\";\r\n        });\r\n        attestenLijst.forEach((attest)=> {\r\n            text += \"attest: \" + attest.datum + \",\" + attest.leerling + \",\" + attest.vak + \",\" + attest.leraar + \",\" + attest.reden + \"\\n\";\r\n        });\r\n        console.log(text);\r\n        window.sessionStorage.setItem(def.AANW_LIST, text);\r\n        aanwezighedenToClipboard(infoBar);\r\n\r\n        //replace the visible table\r\n        tableFetcher.tableRef.getOrgTableContainer()\r\n            .querySelector(\"tbody\")\r\n            .replaceChildren(...fetchedTable.getRows());\r\n    });\r\n}\r\n\r\nfunction aanwezighedenToClipboard(infoBar: InfoBar) {\r\n    let text = window.sessionStorage.getItem(def.AANW_LIST);\r\n    navigator.clipboard.writeText(text)\r\n        .then(_r => {\r\n            infoBar.setExtraInfo(\"Data copied to clipboard. <a id=\"+def.COPY_AGAIN+\" href='javascript:void(0);'>Copy again</a>\", def.COPY_AGAIN, () => {\r\n                aanwezighedenToClipboard(infoBar);\r\n            });\r\n        })\r\n        .catch(_reason => {\r\n            infoBar.setExtraInfo(\"Could not copy to clipboard!!! <a id=\"+def.COPY_AGAIN+\" href='javascript:void(0);'>Copy again</a>\", def.COPY_AGAIN, () => {\r\n                aanwezighedenToClipboard(infoBar);\r\n            });\r\n        });\r\n}\r\n\r\nfunction reduceVaknaam(vaknaam: string) : string {\r\n    let vak = reduceVaknaamStep1(vaknaam);\r\n    return vak\r\n        .replace(\"orkestslagwerk\", \"slagwerk\")\r\n        .replace(\"jazz pop rock)\", \"JPR\")\r\n        .replace(\"koor\", \"GM\")\r\n        .replace(\": musical\", \"\")\r\n        .replace(\" (musical)\", \"\");\r\n}\r\n\r\nfunction reduceVaknaamStep1(vaknaam: string) : string {\r\n    vaknaam = vaknaam.toLowerCase();\r\n    if (vaknaam.includes(\"culturele vorming\")) {\r\n        if(vaknaam.includes(\"3.\"))\r\n            return \"ML\";\r\n        else\r\n            return \"MA\";\r\n    }\r\n    if (vaknaam.includes(\"uziekatelier\")) {\r\n        return \"MA\";\r\n    }\r\n    if (vaknaam.includes(\"uzieklab\")) {\r\n        return \"ML\";\r\n    }\r\n    if (vaknaam.includes(\"roepsmusiceren\")) {\r\n        return \"GM\";\r\n    }\r\n    if (vaknaam.includes(\"theorie\")) {\r\n        return \"MT\";\r\n    }\r\n    if (vaknaam.includes(\"geleidingspraktijk\")) {\r\n        return \"BP\";\r\n    }\r\n    if (vaknaam.includes(\"oordatelier\")) {\r\n        return \"WA\";\r\n    }\r\n    if (vaknaam.includes(\"oordlab\")) {\r\n        return \"WL\";\r\n    }\r\n    if (vaknaam.includes(\"mprovisatie\")) {\r\n        return \"impro\";\r\n    }\r\n    if (vaknaam.includes(\"omeinoverschrijdende\")) {\r\n        return \"KB\";\r\n    }\r\n    if (vaknaam.includes(\"unstenbad\")) {\r\n        return \"KB\";\r\n    }\r\n    if (vaknaam.includes(\"ramalab\")) {\r\n        return \"DL\";\r\n    }\r\n    if (vaknaam.includes(\"oordstudio\")) {\r\n        return \"WS\";\r\n    }\r\n    if (vaknaam.includes(\"ramastudio\")) {\r\n        return \"DS\";\r\n    }\r\n    if (vaknaam.includes(\"ompositie\")) {\r\n        return \"compositie\";\r\n    }\r\n    if (vaknaam.includes(\" saz\")) {\r\n        return \"saz\";\r\n    }\r\n    if (vaknaam.includes(\"instrument: klassiek: \")) {\r\n        let rx = /instrument: klassiek: (\\S*)/;\r\n        let matches = vaknaam.match(rx);\r\n        if(matches.length > 1)\r\n            return matches[1];\r\n        else\r\n            return vaknaam;\r\n    }\r\n    if (vaknaam.includes(\"instrument: jazz-pop-rock: \")) {\r\n        let rx = /instrument: jazz-pop-rock: (\\S*)/;\r\n        let matches = vaknaam.match(rx);\r\n        if(matches.length > 1) {\r\n            if(matches[1].includes(\"elektrische\"))\r\n                return \"gitaar JPR\"\r\n            else\r\n                return matches[1] + \" JPR\";\r\n        }\r\n        else\r\n            return vaknaam;\r\n    }\r\n\r\n    if (vaknaam.includes(\"rrangeren\") || vaknaam.includes(\"opname\") || vaknaam.includes(\"electronics\")) {\r\n        return \"elektronische muziek\";\r\n    }\r\n    let rx2 = /(.*).•./;\r\n    let matches = vaknaam.match(rx2);\r\n    if(matches.length > 1)\r\n        return matches[1];\r\n    return \"??\";\r\n}","import {ExactHashObserver} from \"../pageObserver\";\r\nimport {fetchStudentsSearch, rxEmail, setViewFromCurrentUrl, whoAmI} from \"../globals\";\r\nimport {emmet} from \"../../libs/Emmeter/html\";\r\n\r\nexport default new ExactHashObserver(\"#extra-tickets?h=afwezigheden\", onMutation, true);\r\n\r\nfunction onMutation (mutation: MutationRecord) {\r\n    if (mutation.target === document.getElementById(\"ticket_payload\")){\r\n        // noinspection JSIgnoredPromiseFromCall\r\n        onTicket();\r\n        return true;\r\n    }\r\n    if (mutation.target === document.getElementById(\"dko3_modal_contents\")){\r\n        onAddMelding();\r\n        return true;\r\n    }\r\n\r\n    if (mutation.target === document.getElementById(\"div_tickets_afwezigheid_toevoegen_leerling\")\r\n        && mutation.addedNodes.length > 0) {\r\n        setTimeout(gotoVolgende, 10); //wait for document.ready\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction gotoVolgende() {\r\n    let table = document.querySelector(\"#div_tickets_afwezigheid_toevoegen_leerling table\") as HTMLTableElement;\r\n    let tableHasOneStudent = table.querySelectorAll(\"i.fa-square\").length === 1;\r\n    if(tableHasOneStudent) {\r\n        let tr = document.querySelector(\".tr-ticket-afwezigheidsmelding-leerling\") as HTMLTableRowElement;\r\n        tr.click();\r\n        document.getElementById(\"btn_opslaan_tickets_afwezigheid_toevoegen\").click();\r\n    }\r\n}\r\n\r\nfunction addMatchingStudents() {\r\n    let leerlingLabel = document.querySelector(\"#form_field_tickets_afwezigheid_toevoegen_leerling_zoeken > label\") as HTMLLabelElement;\r\n    if (leerlingLabel && !leerlingLabel.dataset.filled) {\r\n        leerlingLabel.dataset.filled = \"true\";\r\n        leerlingLabel.textContent = \"Leerling:   reeds gevonden: \";\r\n        let target = leerlingLabel as HTMLElement;\r\n        for (let lln of matchingLeerlingen) {\r\n            let anchorClasses = lln.winner ? \".bold\" : \"\";\r\n            function hook(el: HTMLElement) {\r\n                if(el.tagName == \"A\") {\r\n                    el.onclick = () => fillAndClick(lln.name);\r\n                }\r\n            }\r\n            target = emmet.insertAfter(target, `a[href=\"#\"].leerlingLabel${anchorClasses}{${lln.name}}`, undefined, hook).first as HTMLElement;\r\n        }\r\n    }\r\n}\r\n\r\nfunction addEmailText() {\r\n    let emailDiv  = emmet.create('div.modal-body>div>button#btnShowEmail{Show email}.btn.btn-sm.btn-outline-success+div#showEmail.collapsed').last;\r\n    emailDiv.innerHTML = currentEmailHtml;\r\n    document.getElementById(\"btnShowEmail\").addEventListener(\"click\", showEmail);\r\n}\r\n\r\nfunction showEmail() {\r\n    document.getElementById(\"showEmail\").classList.toggle(\"collapsed\");\r\n}\r\n\r\nfunction onAddMelding() {\r\n    addMatchingStudents();\r\n    addEmailText();\r\n}\r\n\r\nfunction fillAndClick(name: string) {\r\n    let formDiv = document.querySelector(\"#form_field_tickets_afwezigheid_toevoegen_leerling_zoeken\") as HTMLDivElement;\r\n    let input = formDiv.querySelector(\"input\");\r\n    input.value = name;\r\n    let button = formDiv.querySelector(\"button\");\r\n    button.click();\r\n    return false;\r\n}\r\n\r\nlet matchingLeerlingen: MatchingLeerling[] = [];\r\n\r\ninterface MatchingLeerling {\r\n    id: string\r\n    name: string\r\n    weight: number,\r\n    winner: boolean\r\n}\r\n\r\nlet currentEmailHtml = \"\";\r\n\r\nasync function onTicket() {\r\n    let card_bodyDiv = document.querySelector(\".card-body\");\r\n    if(!card_bodyDiv)\r\n        return;\r\n    let emailText = card_bodyDiv.textContent;\r\n    currentEmailHtml = card_bodyDiv.innerHTML;\r\n\r\n    let matches = [...emailText.matchAll(rxEmail)];\r\n    let uniqueEmails = [...new Set(matches.map(match => match[0]))];\r\n    \r\n    let {email: myEmail} = whoAmI();\r\n    uniqueEmails = uniqueEmails.filter(m => m != myEmail);\r\n    console.log(uniqueEmails);\r\n\r\n    let template = document.createElement(\"div\");\r\n    template.innerHTML = await fetchStudentsSearch(uniqueEmails.join(\" \"));\r\n    let tdLln = [...template.querySelectorAll(\"td\")];\r\n    matchingLeerlingen = tdLln.map(td => {\r\n        let id = td.querySelector(\"small\").textContent;\r\n        let name = td.querySelector(\"strong\").textContent;\r\n        setViewFromCurrentUrl();\r\n        return <MatchingLeerling>{id, name, weight: 0, winner: false};\r\n    });\r\n    findUniqueMatch(emailText, matchingLeerlingen);\r\n}\r\n\r\nfunction findUniqueMatch(emailText: string, matchingLeerlingen: MatchingLeerling[]) {\r\n    if(matchingLeerlingen.length === 1)\r\n        return matchingLeerlingen[0];\r\n\r\n    //lln: [Erik Pierre Bongers, Iris Marlies Bongers]\r\n    // \"Onzen Erik is ziek.\"\r\n    // Erik: weight:2, Iris: 1\r\n    let strippedText = emailText.replaceAll('\\n', ' ').replaceAll('\\r', ' ');\r\n    let mailLowerCase = strippedText.toLowerCase();\r\n    for(let lln of matchingLeerlingen) {\r\n        let nameParts = lln.name.split(\" \");\r\n        for(let namePart of nameParts) {\r\n            if(strippedText.includes(\" \"+namePart+\" \")) {\r\n                lln.weight++;\r\n            }\r\n            if(mailLowerCase.includes(\" \"+namePart.toLowerCase()+\" \")) {\r\n                lln.weight++;\r\n            }\r\n        }\r\n    }\r\n    //do we have a winner?\r\n    matchingLeerlingen.sort((a, b) => b.weight - a.weight);\r\n    if(matchingLeerlingen[0].weight > matchingLeerlingen[1].weight)\r\n        matchingLeerlingen[0].winner = true;\r\n}","import {ExactHashObserver, MenuScrapingObserver} from \"../pageObserver\";\r\nimport {createQueryItem, saveQueryItems, scrapeMenuPage} from \"../powerQuery/setupPowerQuery\";\r\n\r\nexport let extraInschrijvingenObserver = new ExactHashObserver(\"#extra-inschrijvingen\", onMutationExtraInschrijvingen);\r\n\r\nexport let allLijstenObserver = new MenuScrapingObserver(\"#leerlingen-lijsten\", \"Lijsten\", \"Lijsten > \");\r\nexport let financialObserver = new MenuScrapingObserver(\"#extra-financieel\", \"Financieel\", \"Financieel > \");\r\nexport let assetsObserver = new MenuScrapingObserver(\"#extra-assets\", \"Assets\", \"Assets > \");\r\nexport let evaluatieObserver = new MenuScrapingObserver(\"#extra-evaluatie\", \"Evaluatie\", \"Evaluatie > \");\r\nexport let academieMenuObserver = new MenuScrapingObserver(\"#extra-academie\", \"Academie\", \"Academie > \");\r\n\r\nfunction onMutationExtraInschrijvingen(_mutation: MutationRecord) {\r\n    saveQueryItems(\"ExtraInschrijvingen\", scrapeMenuPage(\"Inschrijvingen > \", inschrijvingenLinkToQueryItem));\r\n    return true;\r\n}\r\n\r\nfunction inschrijvingenLinkToQueryItem(headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) {\r\n    let label = link.textContent.trim();\r\n    let longLabel = longLabelPrefix + headerLabel + \" > \" + label;\r\n    if (label.toLowerCase().includes(\"inschrijving\")) {\r\n        longLabel = headerLabel + \" > \" + label;\r\n    }\r\n    return createQueryItem(headerLabel, label, link.href, undefined, longLabel);\r\n}\r\n\r\nfunction defaultLinkToQueryItem(headerLabel: string, link: HTMLAnchorElement, longLabelPrefix: string) {\r\n    let label = link.textContent.trim();\r\n    return createQueryItem(headerLabel, label, link.href, undefined, longLabelPrefix + label);\r\n}\r\n\r\n","//to avoid \"unused function\" errors in linters, this file is called as a module.\r\nimport {clearPageTransientState, equals, getOptions, observers, registerObserver, settingsObservers} from \"./globals\";\r\nimport leerlingObserver from \"./leerling/observer\";\r\nimport lessenObserver from \"./lessen/observer\";\r\nimport lesObserver from \"./les/observer\";\r\nimport academieObserver from \"./academie/observer\";\r\nimport werklijstObserver from \"./werklijst/observer\";\r\nimport tableObserver from \"./table/observer\";\r\nimport vakgroepObserver from \"./vakgroep/observer\";\r\nimport smsObserver from \"./verwittigen/observer\";\r\nimport aanwezighedenObserver from \"./aanwezigheden/observer\";\r\nimport afwezighedenObserver from \"./afwezigheden/observer\";\r\nimport {setupPowerQuery} from \"./powerQuery/setupPowerQuery\";\r\nimport {academieMenuObserver, allLijstenObserver, assetsObserver, evaluatieObserver, extraInschrijvingenObserver, financialObserver} from \"./pages/observer\";\r\nimport {fetchGlobalSettings, getGlobalSettings, setGlobalSetting} from \"./plugin_options/options\";\r\n\r\ninit();\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nfunction init() {\r\n    getOptions()\r\n        .then(() => {\r\n        // @ts-ignore\r\n        chrome.storage.onChanged.addListener((_changes: any, area: string) => {\r\n            if (area === 'sync') {\r\n                getOptions().then(_r => {\r\n                    onSettingsChanged();\r\n                });\r\n            }\r\n        });\r\n\r\n        // @ts-ignore\r\n        window.navigation.addEventListener(\"navigatesuccess\", () => {\r\n            checkGlobalSettings();\r\n            onPageChanged();\r\n        });\r\n\r\n        //do registrations here to get all these observers/pages into the same compilation unit.\r\n        registerObserver(leerlingObserver);\r\n        registerObserver(lessenObserver);\r\n        registerObserver(lesObserver);\r\n        registerObserver(academieObserver);\r\n        registerObserver(werklijstObserver);\r\n        registerObserver(tableObserver);\r\n        registerObserver(extraInschrijvingenObserver);\r\n        registerObserver(allLijstenObserver);\r\n        registerObserver(financialObserver);\r\n        registerObserver(assetsObserver);\r\n        registerObserver(evaluatieObserver);\r\n        registerObserver(vakgroepObserver);\r\n        registerObserver(smsObserver);\r\n        registerObserver(academieMenuObserver);\r\n        registerObserver(aanwezighedenObserver);\r\n        registerObserver(afwezighedenObserver);\r\n        onPageChanged();\r\n        setupPowerQuery();\r\n        if(document.readyState == \"complete\") {\r\n            console.log(\"document ready. firing onPageLoaded.\");\r\n            onPageLoaded();\r\n        }\r\n        else {\r\n            window.addEventListener(\"load\", () => {\r\n                console.log(\"load event fired.\");\r\n                onPageLoaded();\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nlet lastCheckTime = Date.now();\r\nfunction checkGlobalSettings() {\r\n    if(Date.now() > (lastCheckTime+10*1000)) {\r\n        lastCheckTime = Date.now();\r\n        console.log(\"Re-fetching global settings.\");\r\n        fetchGlobalSettings(getGlobalSettings()).then(r => {\r\n            if(!equals(getGlobalSettings(), r)) {\r\n                setGlobalSetting(r);\r\n                onSettingsChanged();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction onSettingsChanged() {\r\n    console.log(\"on settings changed.\");\r\n    for(let observer of settingsObservers) {\r\n        observer();\r\n    }\r\n}\r\n\r\nfunction onPageChanged() {\r\n    if(getGlobalSettings().globalHide) {\r\n        return;\r\n    }\r\n    clearPageTransientState();\r\n    for(let observer of observers) {\r\n        observer.onPageChanged();\r\n    }\r\n}\r\n\r\nfunction onPageLoaded() {\r\n    if(getGlobalSettings().globalHide) {\r\n        return;\r\n    }\r\n    clearPageTransientState();\r\n    for(let observer of observers) {\r\n        observer.onPageLoaded();\r\n    }\r\n}\r\n\r\n"],"mappings":"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"}
{
  "version": 3,
  "sources": ["../typescript/serviceworker.ts"],
  "sourcesContent": ["import MessageSender = chrome.runtime.MessageSender;\r\nimport {Actions, ServiceRequest, TabType} from \"./messaging\";\r\n\r\nlet defaultOptions = { //todo: integrate in options.ts.\r\n    showDebug: true,\r\n    showNotAssignedClasses: true,\r\n    markOtherAcademies: true,\r\n    otherAcademies: \"\"\r\n};\r\n\r\nchrome.runtime.onInstalled.addListener(() => {\r\n    console.log(\"installed.\");\r\n    chrome.storage.sync.get(\r\n        defaultOptions,\r\n        (items) => {\r\n            chrome.storage.sync.set(\r\n                {...defaultOptions, ...items},\r\n                () => {\r\n                    console.log(\"Options initialized\");\r\n                }\r\n            );\r\n        }\r\n    );\r\n});\r\n\r\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {\r\n    console.log(\"service worker: tab updated: \", tabId, changeInfo.status);\r\n});\r\n\r\nchrome.tabs.onRemoved.addListener(function(tabId, removeInfo) {\r\n    console.log(\"service worker: tab removed: \", tabId);\r\n});\r\n\r\nlet global_request = {};\r\n\r\nchrome.runtime.onMessage.addListener( onMessage);\r\n\r\nasync function getTabId(tabType: TabType) {\r\n    let data = await chrome.storage.session.get(tabType);\r\n    console.log(data);\r\n    let tabId = data[tabType];\r\n    return parseInt(tabId);\r\n}\r\n\r\nasync function setTabId(tabType: TabType, tabId: number) {\r\n    let data = {};\r\n    data[tabType] = tabId.toString();\r\n    await chrome.storage.session.set(data);\r\n}\r\n\r\nfunction onMessage(message: ServiceRequest, sender: MessageSender, sendResponse: (response?: any) => void) {\r\n    switch (message.action) {\r\n        case Actions.OpenHtmlTab:\r\n            let url = chrome.runtime.getURL(\"resources/blank.html\");\r\n            global_request = message;\r\n            if(message.senderTabType === TabType.Main)\r\n                setTabId(TabType.Main, sender.tab.id);\r\n            chrome.tabs.create({url}).then(_tab => {\r\n                sendResponse({tabId: _tab.id});\r\n            });\r\n            return true;\r\n        case Actions.OpenHoursSettings:\r\n            global_request = message;\r\n            setTabId(TabType.Main, sender.tab.id);\r\n            //todo: if already exists: activate?\r\n            chrome.tabs.create({url: chrome.runtime.getURL(\"resources/teacherHoursSetup.html\")}).then(tab => {\r\n                sendResponse({tabId: tab.id}); //todo: make a Response type.\r\n            });\r\n            return true; //needed because sendResponse is called asynchronously.\r\n        case Actions.GetTabData: //todo: move to sender instead of worker?\r\n            sendResponse(global_request);\r\n            break;\r\n        case Actions.GetParentTabId:\r\n            sendResponse(getTabId(TabType.Main));\r\n            break;\r\n        case Actions.GreetingsFromChild:\r\n        default: {\r\n            console.log(\"passing message to...\");\r\n            if (message.targetTabType === TabType.Main) {\r\n                getTabId(TabType.Main).then(id => {\r\n                    console.log(\"Tab: \" + id);\r\n                    chrome.tabs.sendMessage(id, message).then(r => {\r\n                    });\r\n                });\r\n            }\r\n            else\r\n                console.log(\"TODO: send to other than main???\");\r\n            break;\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": ";;AAGA,MAAI,iBAAiB;AAAA;AAAA,IACjB,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,EACpB;AAEA,SAAO,QAAQ,YAAY,YAAY,MAAM;AACzC,YAAQ,IAAI,YAAY;AACxB,WAAO,QAAQ,KAAK;AAAA,MAChB;AAAA,MACA,CAAC,UAAU;AACP,eAAO,QAAQ,KAAK;AAAA,UAChB,EAAC,GAAG,gBAAgB,GAAG,MAAK;AAAA,UAC5B,MAAM;AACF,oBAAQ,IAAI,qBAAqB;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,CAAC;AAED,SAAO,KAAK,UAAU,YAAY,SAAS,OAAO,YAAY,KAAK;AAC/D,YAAQ,IAAI,iCAAiC,OAAO,WAAW,MAAM;AAAA,EACzE,CAAC;AAED,SAAO,KAAK,UAAU,YAAY,SAAS,OAAO,YAAY;AAC1D,YAAQ,IAAI,iCAAiC,KAAK;AAAA,EACtD,CAAC;AAED,MAAI,iBAAiB,CAAC;AAEtB,SAAO,QAAQ,UAAU,YAAa,SAAS;AAE/C,iBAAe,SAAS,SAAkB;AACtC,QAAI,OAAO,MAAM,OAAO,QAAQ,QAAQ,IAAI,OAAO;AACnD,YAAQ,IAAI,IAAI;AAChB,QAAI,QAAQ,KAAK,OAAO;AACxB,WAAO,SAAS,KAAK;AAAA,EACzB;AAEA,iBAAe,SAAS,SAAkB,OAAe;AACrD,QAAI,OAAO,CAAC;AACZ,SAAK,OAAO,IAAI,MAAM,SAAS;AAC/B,UAAM,OAAO,QAAQ,QAAQ,IAAI,IAAI;AAAA,EACzC;AAEA,WAAS,UAAU,SAAyB,QAAuB,cAAwC;AACvG,YAAQ,QAAQ,QAAQ;AAAA,MACpB;AACI,YAAI,MAAM,OAAO,QAAQ,OAAO,sBAAsB;AACtD,yBAAiB;AACjB,YAAG,QAAQ;AACP,sCAAuB,OAAO,IAAI,EAAE;AACxC,eAAO,KAAK,OAAO,EAAC,IAAG,CAAC,EAAE,KAAK,UAAQ;AACnC,uBAAa,EAAC,OAAO,KAAK,GAAE,CAAC;AAAA,QACjC,CAAC;AACD,eAAO;AAAA,MACX;AACI,yBAAiB;AACjB,oCAAuB,OAAO,IAAI,EAAE;AAEpC,eAAO,KAAK,OAAO,EAAC,KAAK,OAAO,QAAQ,OAAO,kCAAkC,EAAC,CAAC,EAAE,KAAK,SAAO;AAC7F,uBAAa,EAAC,OAAO,IAAI,GAAE,CAAC;AAAA,QAChC,CAAC;AACD,eAAO;AAAA;AAAA,MACX;AACI,qBAAa,cAAc;AAC3B;AAAA,MACJ;AACI,qBAAa,0BAAqB,CAAC;AACnC;AAAA,MACJ;AAAA,MACA,SAAS;AACL,gBAAQ,IAAI,uBAAuB;AACnC,YAAI,QAAQ,qCAAgC;AACxC,oCAAqB,EAAE,KAAK,QAAM;AAC9B,oBAAQ,IAAI,UAAU,EAAE;AACxB,mBAAO,KAAK,YAAY,IAAI,OAAO,EAAE,KAAK,OAAK;AAAA,YAC/C,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AAEI,kBAAQ,IAAI,kCAAkC;AAClD;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;",
  "names": []
}

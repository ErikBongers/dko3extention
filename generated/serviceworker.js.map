{
  "version": 3,
  "sources": ["../typescript/serviceworker.ts"],
  "sourcesContent": ["let defaultOptions = {\r\n    showDebug: true,\r\n    showNotAssignedClasses: true,\r\n    markOtherAcademies: true,\r\n    otherAcademies: \"\"\r\n};\r\n\r\nchrome.runtime.onInstalled.addListener(() => {\r\n    console.log(\"installed.\");\r\n    chrome.storage.sync.get(\r\n        defaultOptions,\r\n        (items) => {\r\n            chrome.storage.sync.set(\r\n                {...defaultOptions, ...items},\r\n                () => {\r\n                    console.log(\"Options initialized\");\r\n                }\r\n            );\r\n        }\r\n    );\r\n\r\n});\r\n\r\nchrome.runtime.onMessage.addListener(\r\n    function(request, sender, sendResponse) {\r\n        console.log(\"received \");\r\n        console.log(request);\r\n        switch (request.action) { //todo: make a shared type with content generated.\r\n            case \"hello\":\r\n                sendResponse({farewell: \"goodbye\"});\r\n                break;\r\n            case \"open_tab\":\r\n                let url = chrome.runtime.getURL(\"resources/blank.html\");\r\n                chrome.storage.session.set({ blank_html: request.data})\r\n                    .then(() => {\r\n                        console.log(\"Opening \" + url);\r\n                        chrome.tabs.create({url}).then(tab => {\r\n                            console.log(\"tab created.\");\r\n                        });\r\n                    });\r\n                break;\r\n            case \"getTabData\":\r\n                console.log(\"Sending tab data to tab \" + request.tabId);\r\n                chrome.tabs.sendMessage(request.tabId, {data: \"Some data!!!\", action: \"setBackground\"}).then(r => {});\r\n                break;\r\n        }\r\n    }\r\n);\r\n"],
  "mappings": ";;AAAA,MAAI,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,EACpB;AAEA,SAAO,QAAQ,YAAY,YAAY,MAAM;AACzC,YAAQ,IAAI,YAAY;AACxB,WAAO,QAAQ,KAAK;AAAA,MAChB;AAAA,MACA,CAAC,UAAU;AACP,eAAO,QAAQ,KAAK;AAAA,UAChB,EAAC,GAAG,gBAAgB,GAAG,MAAK;AAAA,UAC5B,MAAM;AACF,oBAAQ,IAAI,qBAAqB;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EAEJ,CAAC;AAED,SAAO,QAAQ,UAAU;AAAA,IACrB,SAAS,SAAS,QAAQ,cAAc;AACpC,cAAQ,IAAI,WAAW;AACvB,cAAQ,IAAI,OAAO;AACnB,cAAQ,QAAQ,QAAQ;AAAA;AAAA,QACpB,KAAK;AACD,uBAAa,EAAC,UAAU,UAAS,CAAC;AAClC;AAAA,QACJ,KAAK;AACD,cAAI,MAAM,OAAO,QAAQ,OAAO,sBAAsB;AACtD,iBAAO,QAAQ,QAAQ,IAAI,EAAE,YAAY,QAAQ,KAAI,CAAC,EACjD,KAAK,MAAM;AACR,oBAAQ,IAAI,aAAa,GAAG;AAC5B,mBAAO,KAAK,OAAO,EAAC,IAAG,CAAC,EAAE,KAAK,SAAO;AAClC,sBAAQ,IAAI,cAAc;AAAA,YAC9B,CAAC;AAAA,UACL,CAAC;AACL;AAAA,QACJ,KAAK;AACD,kBAAQ,IAAI,6BAA6B,QAAQ,KAAK;AACtD,iBAAO,KAAK,YAAY,QAAQ,OAAO,EAAC,MAAM,gBAAgB,QAAQ,gBAAe,CAAC,EAAE,KAAK,OAAK;AAAA,UAAC,CAAC;AACpG;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;",
  "names": []
}

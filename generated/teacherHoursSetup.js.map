{
  "version": 3,
  "sources": ["../typescript/messaging.ts", "../libs/Emmeter/tokenizer.ts", "../libs/Emmeter/html.ts", "../typescript/def.ts", "../typescript/cloud.ts", "../typescript/werklijst/hoursSettings.ts", "../typescript/teacherHoursSetup.ts"],
  "sourcesContent": ["export enum Actions {\r\n    OpenHtmlTab = \"open_tab\",\r\n    GetTabData = \"get_tab_data\",\r\n    GetParentTabId = \"get_parent_tab_id\",\r\n    OpenHoursSettings = \"open_hours_settings\",\r\n    HoursSettingsChanged = \"open_hours_settings_changed\",\r\n    GreetingsFromParent = \"greetingsFromParent\",\r\n    GreetingsFromChild = \"greetingsFromChild\",\r\n}\r\n\r\nexport enum TabType {Undefined, Main, HoursSettings, Html}\r\n\r\nexport interface ServiceRequest {\r\n    action: Actions,\r\n    senderTabType: TabType,\r\n    targetTabType: TabType,\r\n    data: any,\r\n    pageTitle?: string,\r\n    senderTabId?: number,\r\n    targetTabId?: number,\r\n}\r\n\r\nexport function sendRequest(action: Actions, from: TabType, to: TabType,  toId: number, data: any, pageTitle?: string) {\r\n    let req: ServiceRequest = {\r\n        action,\r\n        data,\r\n        pageTitle,\r\n        senderTabType: from,\r\n        targetTabType: to,\r\n        targetTabId: toId,\r\n    };\r\n    return chrome.runtime.sendMessage(req);\r\n}\r\n\r\nexport interface ServiceResponse {\r\n    result: any,\r\n    error: string,\r\n}\r\n\r\nexport async function sendGetDataRequest(sender: TabType) {\r\n    let tab = await chrome.tabs.getCurrent();\r\n    return await sendRequest(Actions.GetTabData, sender, TabType.Undefined, undefined, {tabId: tab.id});\r\n}\r\n\r\nexport type MessageHandler = {\r\n    getListener: () => (request: ServiceRequest, _sender, _sendResponse) => void;\r\n    onMessageForMyTabType: (callback: (msg: ServiceRequest) => void) => MessageHandler;\r\n    onMessageForMe: (callback: (msg: ServiceRequest) => void) => MessageHandler;\r\n    onData: (callback: (data: any) => void) => MessageHandler;\r\n}\r\n\r\nexport interface InternalMessageHandler extends MessageHandler {\r\n    _onMessageForMyTabType(request: ServiceRequest): void;\r\n    _onMessageForMe(request: ServiceRequest): void;\r\n    _onData(data: any): void;\r\n}\r\n\r\nexport function createMessageHandler(tabType: TabType): MessageHandler {\r\n    let handler:InternalMessageHandler = {\r\n        getListener: function () {\r\n            let self: InternalMessageHandler = this;\r\n            return async function onMessage(request: ServiceRequest, _sender, _sendResponse) {\r\n                console.log(`blank received: `, request);\r\n                if (request.targetTabType === tabType) {\r\n                    self._onMessageForMyTabType?.(request);\r\n                    let tab = await chrome.tabs.getCurrent();\r\n                    if (request.targetTabId === tab.id) {\r\n                        self._onMessageForMe?.(request)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onMessageForMyTabType: function (callback: (msg: ServiceRequest) => void): MessageHandler {\r\n            this._onMessageForMyTabType = callback;\r\n            return this;\r\n        },\r\n        onMessageForMe: function (callback: (msg: ServiceRequest) => void): MessageHandler {\r\n            this._onMessageForMe = callback;\r\n            return this;\r\n        },\r\n        onData: function (callback: (data: any) => void): MessageHandler {\r\n            this._onData = callback;\r\n            return this;\r\n        },\r\n        _onMessageForMyTabType: undefined,\r\n        _onMessageForMe: undefined,\r\n        _onData: undefined\r\n    };\r\n    document.addEventListener(\"DOMContentLoaded\", async () => {\r\n        let res = await sendGetDataRequest(tabType);\r\n        handler._onData?.(res);\r\n    });\r\n    return handler;\r\n}", "export const CLOSING_BRACE = \"__CLOSINGBRACE__\";\r\nexport const DOUBLE_QUOTE = \"__DOUBLEQUOTE__\";\r\n\r\nexport const NBSP = 160;\r\n\r\nexport function tokenize(textToTokenize: string) {\r\n    let tokens: string[] = [];\r\n    let txt = textToTokenize.replaceAll(\"\\\\}\", CLOSING_BRACE).replaceAll('\\\\\"', DOUBLE_QUOTE);\r\n    let pos = 0;\r\n    let start = pos;\r\n\r\n    function pushToken() {\r\n        if (start != pos)\r\n            tokens.push(txt.substring(start, pos));\r\n        start = pos;\r\n    }\r\n\r\n    function getTo(to: string) {\r\n        pushToken();\r\n        do {\r\n            pos++;\r\n        } while (pos < txt.length && txt[pos] != to);\r\n        if (pos >= txt.length)\r\n            throw `Missing '${to}' at matching from pos ${start}.`;\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    function getChar() {\r\n        pushToken();\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    while (pos < txt.length) {\r\n        //only test for special chars. All others are assumed alphanumeric\r\n        switch (txt[pos]) {\r\n            case '{':\r\n                getTo(\"}\");\r\n                break;\r\n            case '\"':\r\n                getTo('\"');\r\n                break;\r\n            case '#':\r\n                pushToken();\r\n                pos++;\r\n                break;\r\n            case '>':\r\n            case '+':\r\n            case '[':\r\n            case ']':\r\n            case '(':\r\n            case ')':\r\n            case '*':\r\n            case '.':\r\n            case '=':\r\n                getChar();\r\n                break;\r\n            case ' ':\r\n                pushToken();\r\n                start = ++pos;\r\n                break;\r\n            default:\r\n                pos++;\r\n        }\r\n    }\r\n    pushToken();\r\n    return tokens;\r\n}", "// noinspection JSUnusedGlobalSymbols\r\nimport {tokenize} from \"./tokenizer\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport let emmet = {\r\n    create,\r\n    append,\r\n    insertBefore,\r\n    insertAfter,\r\n    appendChild,\r\n    test: {\r\n        testEmmet,\r\n        tokenize,\r\n    }\r\n};\r\n\r\nexport interface AttDef {\r\n    name: string,\r\n    sub: string,\r\n    value: string\r\n}\r\n\r\nexport interface GroupDef {\r\n    count: number,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface ListDef {\r\n    list: EmmetNode[];\r\n}\r\n\r\nexport interface ElementDef {\r\n    tag: string,\r\n    id: string,\r\n    atts: AttDef[]\r\n    classList: string[],\r\n    innerText: string,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface TextDef {\r\n    text: string\r\n}\r\n\r\nexport type EmmetNode = GroupDef | ElementDef | ListDef | TextDef;\r\n\r\nlet nested: string[] = undefined;\r\nlet lastCreated: Element = undefined;\r\n\r\nfunction toSelector(node: EmmetNode) {\r\n    if(!('tag' in node)) {\r\n        throw \"TODO: not yet implemented.\";\r\n    }\r\n    let selector = \"\";\r\n    if(node.tag)\r\n        selector += node.tag;\r\n    if(node.id)\r\n        selector += \"#\" + node.id;\r\n    if(node.classList.length>0) {\r\n        selector += \".\" + node.classList.join(\".\");\r\n    }\r\n    return selector;\r\n}\r\n\r\nfunction create(text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let root = parse();\r\n    let parent = document.querySelector(toSelector(root)) as Element;\r\n    if(\"tag\" in root) {\r\n        root = root.child;\r\n    } else {\r\n        throw \"root should be a single element.\";\r\n    }\r\n    buildElement(parent, root, 1, onIndex, hook);\r\n    return {root: parent, last: lastCreated};\r\n}\r\n\r\nfunction append(root: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    return parseAndBuild(root, onIndex, hook);\r\n}\r\n\r\nfunction insertBefore(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforebegin\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAfter(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"afterend\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction appendChild(parent: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforeend\", parent, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAt(position: InsertPosition, target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let tempRoot = document.createElement(\"div\");\r\n    let result = parseAndBuild(tempRoot, onIndex, hook);\r\n    let first: Node = undefined;\r\n    let insertPos = target as Node;\r\n    let children = [...tempRoot.childNodes]; //we'll be removing children from tempRoot, so copy the list.\r\n    for(let child of children) {\r\n        if(!first) {\r\n            //first element should be inserted at the specified position\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                first = insertPos = insertAdjacentText(target, position, (child as Text).wholeText);\r\n            else\r\n                first = insertPos = target.insertAdjacentElement(position, child as Element);\r\n        } else {\r\n            //consequent children should be inserted after the previous one.\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                insertPos = insertPos.parentElement.insertBefore(document.createTextNode((child as Text).wholeText), insertPos.nextSibling);\r\n            else\r\n                insertPos = insertPos.parentElement.insertBefore(child, insertPos.nextSibling);\r\n        }\r\n    }\r\n    return {target, first, last: result.last};\r\n}\r\n\r\nfunction insertAdjacentText(target: Node, position: InsertPosition, text: string) {\r\n    switch(position) {\r\n        case \"beforebegin\": // Before the element itself.\r\n            return target.parentElement.insertBefore(document.createTextNode(text), target);\r\n        case \"afterbegin\": // Just inside the element, before its first child.\r\n            return target.insertBefore(document.createTextNode(text), target.firstChild);\r\n        case \"beforeend\": // Just inside the element, after its last child.\r\n            return target.appendChild(document.createTextNode(text));\r\n        case \"afterend\": // After the element itself.\r\n            return target.parentElement.appendChild(document.createTextNode(text));\r\n    }\r\n}\r\n\r\nfunction parseAndBuild(root: HTMLElement, onIndex: (index: number) => string, hook: (el: Element) => void) {\r\n    buildElement(root, parse(), 1, onIndex, hook);\r\n    return {root, last: lastCreated};\r\n}\r\n\r\nfunction testEmmet(text: string): EmmetNode {\r\n    nested = tokenize(text);\r\n    return parse();\r\n}\r\n\r\nfunction parse() {\r\n    return parsePlus() ;\r\n}\r\n\r\n//parse a+b+c>d...\r\nfunction parsePlus(): EmmetNode {\r\n    let list = [];\r\n    while(true) {\r\n        let el = parseMult();\r\n        if (!el)\r\n            return list.length===1 ? list[0] : {list};\r\n        list.push(el)\r\n        if(!match('+'))\r\n            return list.length===1 ? list[0] : {list};\r\n    }\r\n}\r\n\r\nfunction parseMult() : EmmetNode {\r\n    let el = parseElement();\r\n    if(!el)\r\n        return el;\r\n    if(match('*')) {\r\n        let count = parseInt(nested.shift());\r\n        //wrap el in a count group.\r\n        return  {\r\n            count,\r\n            child: el\r\n        };\r\n    } else {\r\n        return el;\r\n    }\r\n}\r\n\r\n// parse group or primary element (and children)\r\nfunction parseElement(): EmmetNode {\r\n    let el: EmmetNode;\r\n    if(match('(')) {\r\n        el = parsePlus();\r\n        if(!match(\")\"))\r\n            throw \"Expected ')'\";\r\n        return el;\r\n    } else {\r\n        let text = matchStartsWith('{');\r\n        if (text) {\r\n            text = stripStringDelimiters(text);\r\n            return <TextDef>{text};\r\n        } else {\r\n            return parseChildDef();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction parseChildDef(): ElementDef {\r\n    let tag = nested.shift();\r\n    let id = undefined;\r\n    let atts: AttDef[] = [];\r\n    let classList: string[] = [];\r\n    let text = undefined;\r\n\r\n    while(nested.length) {\r\n        if (match('.')) {\r\n            let className = nested.shift();\r\n            if(!className)\r\n                throw \"Unexpected end of stream. Class name expected.\";\r\n            classList.push(className);\r\n        } else if (match('[')) {\r\n            atts = getAttributes();\r\n        } else {\r\n            let token = matchStartsWith('#');\r\n            if(token) {\r\n                id = token.substring(1);\r\n            } else {\r\n                let token = matchStartsWith('{')\r\n                if (token) {\r\n                    text = stripStringDelimiters(token);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {tag, id, atts, classList, innerText: text, child: parseDown()};\r\n}\r\n\r\n// parse >...\r\nfunction parseDown() : EmmetNode {\r\n    if(match('>')) {\r\n        return parsePlus();\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getAttributes() {\r\n    //gather all the attributes\r\n    let tokens: string[] = [];\r\n    while(nested.length) {\r\n        let prop = nested.shift();\r\n        if(prop == ']')\r\n            break;\r\n        tokens.push(prop);\r\n    }\r\n\r\n    let attDefs: AttDef[] = [];\r\n\r\n    while(tokens.length) {\r\n        let name = tokens.shift();\r\n        let eq = tokens.shift();\r\n        let sub = \"\";\r\n        if(eq === '.') {\r\n            sub = tokens.shift();\r\n            eq = tokens.shift();\r\n        }\r\n        if (eq != '=') {\r\n            throw \"Equal sign expected.\";\r\n        }\r\n        let value = tokens.shift();\r\n        if(value[0] === '\"') {\r\n            value = stripStringDelimiters(value);\r\n        }\r\n        if (!value)\r\n            throw \"Value expected.\";\r\n            attDefs.push({name, sub, value});\r\n        if(!tokens.length)\r\n            break;\r\n    }\r\n    return attDefs;\r\n}\r\n\r\nfunction match(expected: string) {\r\n    let next = nested.shift();\r\n    if(next === expected)\r\n        return true;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return false;\r\n}\r\n\r\nfunction matchStartsWith(expected: string) {\r\n    let next = nested.shift();\r\n    if(next.startsWith(expected))\r\n        return next;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return undefined;\r\n}\r\n\r\nfunction stripStringDelimiters(text: string) {\r\n    if(text[0] === \"'\" || text[0] === '\"' || text[0] === '{')\r\n        return text.substring(1, text.length-1);\r\n    return text;\r\n}\r\n\r\n//CREATION\r\nfunction createElement(parent: Element, def: ElementDef, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    let el = parent.appendChild(document.createElement(def.tag));\r\n    if (def.id)\r\n        el.id = addIndex(def.id, index, onIndex);\r\n    for(let clazz of def.classList) {\r\n        el.classList.add(addIndex(clazz, index, onIndex));\r\n    }\r\n    for (let att of def.atts) {\r\n        if (att.sub)\r\n            el[addIndex(att.name, index, onIndex)][addIndex(att.sub, index, onIndex)] = addIndex(att.value, index, onIndex);\r\n        else {\r\n            el.setAttribute(addIndex(att.name, index, onIndex), addIndex(att.value, index, onIndex));\r\n        }\r\n    }\r\n    if(def.innerText) {\r\n        el.appendChild(document.createTextNode(addIndex(def.innerText, index, onIndex)));\r\n    }\r\n    lastCreated = el;\r\n    if(hook)\r\n        hook(el);\r\n    return el;\r\n}\r\n\r\nfunction buildElement(parent: Element, el: EmmetNode, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    if(\"tag\" in el) { //ElementDef\r\n        let created = createElement(parent, el, index, onIndex, hook);\r\n        if(el.child)\r\n            buildElement(created, el.child, index, onIndex, hook);\r\n        return;\r\n    }\r\n    if(\"list\" in el) { //ListDef\r\n        for( let def of el.list) {\r\n            buildElement(parent, def, index, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"count\" in el) { //GroupDef\r\n        for(let i = 0; i < el.count; i++) {\r\n            buildElement(parent, el.child, i, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"text\" in el) { //TextDef\r\n        parent.appendChild(document.createTextNode(addIndex(el.text, index, onIndex)));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction addIndex(text: string, index: number, onIndex: (index: number) => string) {\r\n    if(onIndex) {\r\n        let result = onIndex(index);\r\n        text = text.replace(\"$$\", result);\r\n    }\r\n    return text.replace(\"$\", (index+1).toString());\r\n}", "export const COPY_AGAIN = \"copy_again\";\r\nexport const PROGRESS_BAR_ID = \"progressBarFetch\";\r\nexport const UREN_PREV_BTN_ID = \"prefillInstrButton\";\r\nexport const UREN_PREV_SETUP_BTN_ID = \"prefillInstrSetupButton\";\r\nexport const UREN_NEXT_BTN_ID = \"prefillInstrButtonNext\";\r\nexport const UREN_NEXT_SETUP_BTN_ID = \"prefillInstrSetupButtonNext\";\r\nexport const MAIL_BTN_ID = \"mailButton\";\r\nexport const DOWNLOAD_TABLE_BTN_ID = \"downloadTableButton\";\r\nexport const COPY_TABLE_BTN_ID = \"copyTableButton\";\r\nexport const LESSEN_OVERZICHT_ID = \"lessen_overzicht\";\r\nexport const TRIM_BUTTON_ID = \"moduleButton\";\r\nexport const CHECKS_BUTTON_ID = \"checksButton\";\r\nexport const COUNT_BUTTON_ID = \"fetchAllButton\";\r\nexport const FULL_CLASS_BUTTON_ID = \"fullClassButton\";\r\nexport const TRIM_TABLE_ID = \"trimesterTable\";\r\nexport const COUNT_TABLE_ID = \"werklijst_uren\";\r\nexport const TRIM_DIV_ID = \"trimesterDiv\";\r\nexport const JSON_URL = \"https://europe-west1-ebo-tain.cloudfunctions.net/json\";\r\nexport const INFO_CONTAINER_ID =  \"dp3p_infoContainer\";\r\nexport const INFO_CACHE_ID =  \"dp3p_cacheInfo\";\r\nexport const INFO_TEMP_ID =  \"dp3_tempInfo\";\r\nexport const INFO_EXTRA_ID =  \"dp3_extraInfo\";\r\nexport const AANW_LIST =  \"aanwezighedenList\";\r\nexport const GLOBAL_SETTINGS_FILENAME =  \"global_settings.json\";\r\nexport const CACHE_DATE_SUFFIX = \"__date\";\r\nexport const POWER_QUERY_ID = \"savedPowerQuery\";\r\nexport const STORAGE_GOTO_STATE_KEY = \"gotoState\";\r\nexport const STORAGE_PAGE_SETTINGS_KEY_PREFIX = \"pageSettings_\";\r\nexport const UREN_TABLE_STATE_NAME = \"__uren__\";\r\nexport const CAN_SORT = \"canSort\";\r\nexport const NO_MENU = \"noMenu\";\r\nexport const LESSEN_TABLE_ID = \"table_lessen_resultaat_tabel\";\r\nexport const FILTER_INFO_ID = \"filterInfo\";\r\nexport const GLOBAL_COMMAND_BUFFER_KEY = \"globalCmdBuffer\";", "import * as def from \"./def\";\r\n\r\nexport let cloud = {\r\n    json: {\r\n        fetch: fetchJson,\r\n        upload: uploadJson\r\n    }\r\n};\r\n\r\nasync function fetchJson(fileName: string) {\r\n    return fetch(def.JSON_URL + \"?fileName=\"+fileName, {method: \"GET\"})\r\n        .then((res) => res.json());\r\n}\r\n\r\nasync function uploadJson(fileName: string, data: any) {\r\n    let res = await fetch(def.JSON_URL + \"?fileName=\" + fileName, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        keepalive: true, //keeps the data valid even if window is closing.\r\n    });\r\n    return await res.text();\r\n}", "import {cloud} from \"../cloud\";\r\nimport {fetchAvailableSubjects} from \"./criteria\";\r\n\r\nexport type SubjectDef = {\r\n    checked: boolean,\r\n    name: string,\r\n    alias: string,\r\n    stillValid: boolean\r\n}\r\n\r\nexport type TranslationDef = {\r\n    find: string,\r\n    replace: string,\r\n    prefix: string,\r\n    suffix: string,\r\n}\r\n\r\nexport type TeacherHoursSetup = {\r\n    schoolyear: string,\r\n    subjects: SubjectDef[];\r\n    translations: TranslationDef[];\r\n}\r\n\r\nexport type TeacherHoursSetupMapped = TeacherHoursSetup & {\r\n    subjectsMap: Map<string, SubjectDef>,\r\n}\r\n\r\nexport function mapHourSettings(hourSettings: TeacherHoursSetup) {\r\n    let mapped = {...hourSettings} as TeacherHoursSetupMapped;\r\n    mapped.subjectsMap = new Map(hourSettings.subjects.map(s => [s.name, s]));\r\n    return mapped;\r\n}\r\n\r\nlet defaultInstruments = [\r\n    {checked:  true, name:  \"Aaaaa\", alias: \"bbb\", stillValid: true},\r\n    {checked:  true, name:  \"Accordeon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altfluit\", alias: \"Dwarsfluit\", stillValid: false},\r\n    {checked:  true, name:  \"Althoorn\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altklarinet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altviool\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baglama/saz (wereldmuziek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Bariton\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baritonsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baritonsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basfluit\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basgitaar (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basklarinet\", alias: \"Klarinet\", stillValid: false},\r\n    {checked:  true, name:  \"Bastrombone\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Bastuba\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Bugel\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Cello\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Contrabas (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Contrabas (klassiek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Dwarsfluit\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Engelse hoorn\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Eufonium\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Fagot\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Gitaar\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Gitaar (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Harp\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Hobo\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Hoorn\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Keyboard (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Klarinet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Kornet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Orgel\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piano\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piano (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Pianolab\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piccolo\", alias: \"Dwarsfluit\", stillValid: false},\r\n    {checked:  true, name:  \"Slagwerk\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Slagwerk (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Sopraansaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Sopraansaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Tenorsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Tenorsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Trombone\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Trompet\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Trompet (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Ud (wereldmuziek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Viool\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (musical 2e graad)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (musical)\", alias: \"\", stillValid: false},\r\n];\r\n\r\nlet defaultInstrumentsMap = new Map<string, SubjectDef>();\r\ndefaultInstruments.forEach(i => defaultInstrumentsMap.set(i.name, i));\r\n\r\nlet defaultTranslationDefs: TranslationDef[] = [\r\n    {find: \"Altsaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n    {find: \"Sopraansaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n    {find: \"Tenorsaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n\r\n    {find: \"(klassiek)\", replace: \"\", prefix: \"K \", suffix: \"\"},\r\n    {find: \"(jazz pop rock)\", replace: \"\", prefix: \"JPR \", suffix: \"\"},\r\n    {find: \"(musical)\", replace: \"\", prefix: \"M \", suffix: \"\"},\r\n    {find: \"(musical 2e graad)\", replace: \"(2e graad)\", prefix: \"M \", suffix: \"\"},\r\n    {find: \"(wereldmuziek)\", replace: \"\", prefix: \"WM \", suffix: \"\"},\r\n    {find: \"instrumentinitiatie\", replace: \"init\", prefix: \"\", suffix: \"\"},\r\n    {find: \"\", replace: \"\", prefix: \"K \", suffix: \"\"},\r\n    {find: \"K JPR \", replace: \"JPR \", prefix: \" \", suffix: \"\"},\r\n    {find: \"K M \", replace: \"M \", prefix: \" \", suffix: \"\"},\r\n    {find: \"K WM \", replace: \"WM \", prefix: \" \", suffix: \"\"},\r\n    {find: \"K K \", replace: \"K \", prefix: \" \", suffix: \"\"},\r\n];\r\n\r\nexport async function fetchHoursSettingsOrDefault(schoolyear: string) {\r\n    let dko3_subjects = await fetchAvailableSubjects(schoolyear);\r\n    let availableSubjects = dko3_subjects.map(vak => vak.name);\r\n    let cloudSettings = await cloud.json.fetch(createTeacherHoursFileName(schoolyear)).catch(e => {}) as TeacherHoursSetup;\r\n    if(!cloudSettings) {\r\n        cloudSettings = {\r\n            schoolyear: schoolyear,\r\n            subjects: defaultInstruments,\r\n            translations: defaultTranslationDefs\r\n        }\r\n    }\r\n    let availableSubjectSet = new Set(availableSubjects);\r\n    cloudSettings.subjects.forEach(s => s.stillValid = availableSubjectSet.has(s.name));\r\n    let cloudSubjectMap = new Map(cloudSettings.subjects.map(s => [s.name, s]));\r\n    //add new subjects\r\n    for(let name of availableSubjectSet) {\r\n        if(!cloudSubjectMap.has(name)) {\r\n            cloudSubjectMap.set(name, {\r\n                checked: false,\r\n                name,\r\n                alias: \"\",\r\n                stillValid: true\r\n            });\r\n        }\r\n    }\r\n    cloudSettings.subjects = [...cloudSubjectMap.values()].sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    return cloudSettings;\r\n}\r\n\r\nexport function createTeacherHoursFileName(schoolyear: string) {\r\n    return \"teacherHoursSetup_\" + schoolyear + \".json\";\r\n}", "import {Actions, createMessageHandler, sendRequest, ServiceRequest, TabType} from \"./messaging\";\r\nimport {emmet} from \"../libs/Emmeter/html\";\r\nimport {cloud} from \"./cloud\";\r\n\r\nimport {createTeacherHoursFileName, mapHourSettings, SubjectDef, TeacherHoursSetup, TeacherHoursSetupMapped, TranslationDef} from \"./werklijst/hoursSettings\";\r\n\r\nlet handler  = createMessageHandler(TabType.HoursSettings);\r\n\r\nchrome.runtime.onMessage.addListener(handler.getListener());\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", onDocumentLoaded)\r\n\r\nhandler\r\n    .onMessageForMyTabType(msg => {\r\n        console.log(\"message for my tab type: \", msg);\r\n        document.getElementById(\"container\").innerHTML = \"Message was for my tab type\" + msg.data;\r\n    })\r\n    .onMessageForMe(msg => {\r\n        console.log(\"message for me: \", msg);\r\n        document.getElementById(\"container\").innerHTML = \"DATA:\" + msg.data;\r\n    })\r\n    .onData(onData);\r\n\r\nfunction fillSubjectsTable(cloudData: TeacherHoursSetup) {\r\n    if (cloudData) {\r\n        let globalSubjectMap = new Map<string, SubjectDef>(globalSetup.subjects.map(s => [s.name, s]));\r\n        let cloudSubjectMap = new Map<string, SubjectDef>(cloudData.subjects.map(s => [s.name, s]));\r\n        //merge:globalData has more recent and valud subjects but cloud data has priority\r\n        //for now, ignore the old subjects from cloud data.\r\n        for (let [key, value] of cloudSubjectMap) {\r\n            globalSubjectMap.set(key, value);\r\n        }\r\n        globalSetup.subjects = [...globalSubjectMap.values()];\r\n    }\r\n    let container = document.getElementById(\"subjectsContainer\");\r\n    let tbody = container.querySelector(\"table>tbody\") as HTMLTableSectionElement;\r\n    tbody.innerHTML = \"\";\r\n    for (let vak of globalSetup.subjects) {\r\n        let validClass = \"\";\r\n        let bucket = \"\";\r\n        if(!vak.stillValid) {\r\n            validClass = \".invalid\";\r\n            bucket = `+button.deleteRow.naked>img[src=\"${chrome.runtime.getURL(\"images/trash-can.svg\")}\"]`;\r\n        }\r\n        let valueAttribute = \"\";\r\n        if (vak.alias)\r\n            valueAttribute = ` value=\"${vak.alias}\"`;\r\n        let checkedAttribute = \"\";\r\n        if (vak.checked)\r\n            checkedAttribute = ` checked=\"checked\"`;\r\n        emmet.appendChild(tbody, `tr>(td>input[type=\"checkbox\" ${checkedAttribute}])+(td${validClass}>({${vak.name}}${bucket}))+td>input[type=\"text\" ${valueAttribute}]`)\r\n    }\r\n    document.querySelectorAll(\"#subjectsContainer button.deleteRow\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", deleteTableRow));\r\n}\r\n\r\nfunction addTranslationRow(trns: TranslationDef, tbody: HTMLTableSectionElement) {\r\n    let text = `tr>`\r\n        + buildField(\"Vind\", trns.find, \"trnsFind\")\r\n        + \"+\"\r\n        + buildField(\"vervang door\", trns.replace, \"trnsReplace\")\r\n        + \"+\"\r\n        + buildField(\"prefix\", trns.prefix, \"trnsPrefix\")\r\n        + \"+\"\r\n        + buildField(\"suffix\", trns.suffix, \"trnsSuffix\");\r\n    let tr = emmet.appendChild(tbody, text).first as HTMLTableRowElement;\r\n    let up = `button.moveUp.naked>img[src=\"${chrome.runtime.getURL(\"images/up-arrow.svg\")}\"]`;\r\n    let down = `button.moveDown.naked>img.upSideDown[src=\"${chrome.runtime.getURL(\"images/up-arrow.svg\")}\"]`;\r\n    let bucket = `button.deleteRow.naked>img[src=\"${chrome.runtime.getURL(\"images/trash-can.svg\")}\"]`;\r\n    emmet.appendChild(tr, `(td>${up})+(td>${down})+(td>${bucket})`);\r\n\r\n    tbody.querySelectorAll(\"button.deleteRow\")\r\n        .forEach(btn => btn.addEventListener(\"click\", deleteTableRow));\r\n\r\n    function buildField(label: string, value: string, id: string){\r\n        let attrValue = value ? ` value=\"${value}\"` : \"\";\r\n        return `(td>{${label}})+(td>input#${id}[type=\"text\"${attrValue}])`;\r\n    }\r\n}\r\n\r\nfunction fillTranslationsTable(cloudData: TeacherHoursSetup) {\r\n    let container = document.getElementById(\"translationsContainer\");\r\n    let tbody = container.querySelector(\"table>tbody\") as HTMLTableSectionElement;\r\n    tbody.innerHTML = \"\";\r\n    for (let trns of globalSetup.translations) {\r\n        addTranslationRow(trns, tbody);\r\n    }\r\n\r\n    document.querySelectorAll(\"button.moveUp\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", (ev) => {\r\n                let btn = ev.target as HTMLButtonElement;\r\n                let row = btn.closest(\"tr\") as HTMLTableRowElement;\r\n                let prevRow =row.previousElementSibling;\r\n                row.parentElement.insertBefore(row, prevRow);\r\n                hasTableChanged = true;\r\n            }));\r\n    document.querySelectorAll(\"button.moveDown\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", (ev) => {\r\n                let btn = ev.target as HTMLButtonElement;\r\n                let row = btn.closest(\"tr\") as HTMLTableRowElement;\r\n                let nextRow =row.nextElementSibling;\r\n                row.parentElement.insertBefore(nextRow, row);\r\n                hasTableChanged = true;\r\n            }));\r\n    document.querySelectorAll(\"#translationsContainer button.deleteRow\")\r\n        .forEach(btn => btn.addEventListener(\"click\", deleteTableRow));\r\n}\r\n\r\nfunction deleteTableRow(ev: Event) {\r\n    let btn = ev.target as HTMLButtonElement;\r\n    btn.closest(\"tr\").remove();\r\n    hasTableChanged = true;\r\n}\r\n\r\nasync function onData(data: ServiceRequest) {\r\n    document.title = data.pageTitle;\r\n    //test...\r\n    document.querySelector(\"button\").addEventListener(\"click\", async () => {\r\n        await sendRequest(Actions.GreetingsFromChild, TabType.Undefined, TabType.Main, undefined, \"Hullo! Fly safe!\");\r\n    });\r\n\r\n    globalSetup = mapHourSettings(data.data as TeacherHoursSetup);\r\n    let cloudData: TeacherHoursSetup = await cloud.json.fetch(createTeacherHoursFileName(globalSetup.schoolyear)).catch(e => {});\r\n    fillSubjectsTable(cloudData);\r\n    fillTranslationsTable(cloudData);\r\n    //set change even AFTER filling the tables:\r\n    document.querySelectorAll(\"tbody\").forEach(tbody => tbody.addEventListener(\"change\", (e) => {\r\n        hasTableChanged = true;\r\n    }));\r\n    document.querySelector('tbody').addEventListener('input', function (e) {\r\n        hasTableChanged = true;\r\n    });\r\n    document.getElementById('btnNewTranslationRow').addEventListener('click', function (e) {\r\n        let def: TranslationDef = {\r\n            find: \"\",\r\n            replace: \"\",\r\n            prefix: \"\",\r\n            suffix: \"\"\r\n        }\r\n        addTranslationRow(def, document.querySelector(\"#translationsContainer tbody\"));\r\n        hasTableChanged = true;\r\n    });\r\n\r\n\r\n}\r\n\r\nlet globalSetup: TeacherHoursSetupMapped = undefined;\r\n\r\nlet hasTableChanged = false;\r\n\r\nsetInterval(onCheckTableChanged, 2000);\r\n\r\nfunction scrapeSubjects() {\r\n    let rows = document.querySelectorAll(\"#subjectsContainer>table>tbody>tr\") as NodeListOf<HTMLTableRowElement>;\r\n    return [...rows]\r\n        .filter(row => row.cells[0].querySelector(\"input:checked\") !== null || row.cells[2].querySelector(\"input\").value)\r\n        .map(row => {\r\n            return {\r\n                checked: row.cells[0].querySelector(\"input:checked\") !== null,\r\n                name: row.cells[1].textContent,\r\n                alias: row.cells[2].querySelector(\"input\").value,\r\n                stillValid: row.cells[1].classList.contains(\"invalid\") == false\r\n            }\r\n        });\r\n}\r\n\r\nfunction scrapeTranslations(): TranslationDef[] {\r\n    let rows = document.querySelectorAll(\"#translationsContainer>table>tbody>tr\") as NodeListOf<HTMLTableRowElement>;\r\n    return [...rows]\r\n        .map(row => {\r\n            return {\r\n                find: (row.querySelector(\"#trnsFind\") as HTMLInputElement).value,\r\n                replace: (row.querySelector(\"#trnsReplace\") as HTMLInputElement).value,\r\n                prefix: (row.querySelector(\"#trnsPrefix\") as HTMLInputElement).value,\r\n                suffix: (row.querySelector(\"#trnsSuffix\") as HTMLInputElement).value,\r\n            }\r\n        });\r\n}\r\n\r\nfunction onCheckTableChanged() {\r\n    if (!hasTableChanged)\r\n        return;\r\n    let setupData: TeacherHoursSetup = {\r\n        schoolyear: globalSetup.schoolyear,\r\n        subjects: scrapeSubjects(),\r\n        translations: scrapeTranslations(),\r\n    };\r\n    hasTableChanged = false;\r\n    let fileName = createTeacherHoursFileName(globalSetup.schoolyear);\r\n    cloud.json.upload(fileName, setupData) //todo: make function to generate file name.\r\n    .then(res => {\r\n        sendRequest(Actions.HoursSettingsChanged, TabType.HoursSettings, TabType.Main, undefined, setupData);\r\n    });\r\n}\r\n\r\nwindow.onbeforeunload = () => {\r\n    onCheckTableChanged();\r\n}\r\n\r\nfunction switchTab(btn: HTMLButtonElement) {\r\n    let tabId = btn.dataset.tabId;\r\n    let tabs = btn.parentElement;\r\n    tabs.querySelectorAll(\".tab\").forEach((tab: HTMLElement) => {\r\n        tab.classList.add(\"notSelected\");\r\n        document.getElementById(tab.dataset.tabId).style.display = \"none\";\r\n    });\r\n    btn.classList.remove(\"notSelected\");\r\n    document.getElementById(tabId).style.display = \"block\";\r\n}\r\n\r\nfunction onDocumentLoaded(this: Document, ev: Event) {\r\n    let tabs = document.querySelector(\".tabs\");\r\n    switchTab(tabs.querySelector(\".tab\"));\r\n    document.querySelectorAll(\".tabs > button.tab\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", (ev) => {\r\n                switch ((ev.target as HTMLElement).id) {\r\n                    case \"btnTabSubjects\":\r\n                        switchTab(ev.target as HTMLButtonElement);\r\n                        break;\r\n                    case \"btnTabTranslations\":\r\n                        switchTab(ev.target as HTMLButtonElement);\r\n                        break;\r\n                }\r\n            }));\r\n}\r\n"],
  "mappings": "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",
  "names": ["handler", "token", "btn", "ev"]
}

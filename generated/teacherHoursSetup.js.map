{"version":3,"file":"teacherHoursSetup.js","names":["action: Actions","from: TabType","to: TabType","toId: number","data: any","pageTitle?: string","req: ServiceRequest","sender: TabType","tabType: TabType","handler:InternalMessageHandler","self: InternalMessageHandler","request: ServiceRequest","callback: (msg: ServiceRequest) => void","callback: (data: any) => void","handler","textToTokenize: string","tokens: string[]","to: string","nested: string[]","lastCreated: Element","node: EmmetNode","text: string","onIndex?: (index: number) => string","hook?: (el: Element) => void","root: HTMLElement","target: Element","parent: HTMLElement","position: InsertPosition","first: Node","target: Node","onIndex: (index: number) => string","hook: (el: Element) => void","el: EmmetNode","atts: AttDef[]","classList: string[]","token","tokens: string[]","attDefs: AttDef[]","expected: string","parent: Element","def: ElementDef","index: number","fileName: string","data: any","startYear: number","schoolyearString: string","hourSettings: TeacherHoursSetup","schoolyear: string","hoursSetup: TeacherHoursSetup","#shadow","name: string","_oldValue: string","newValue: string","_: Event","dko3Setup: TeacherHoursSetupMapped","trns: TranslationDef","tbody: HTMLTableSectionElement","label: string","value: string","id: string","cloudData: TeacherHoursSetup","btn","ev: Event","data: ServiceRequest","def: TranslationDef","globalSetup: TeacherHoursSetupMapped","setupData: TeacherHoursSetup","btn: HTMLButtonElement","tab: HTMLElement","_: Event"],"sources":["../typescript/messaging.ts","../libs/Emmeter/tokenizer.ts","../libs/Emmeter/html.ts","../typescript/def.ts","../typescript/cloud.ts","../typescript/globals.ts","../typescript/werklijst/hoursSettings.ts","../typescript/webComponents/inputWithSpaces.ts","../typescript/teacherHoursSetup.ts"],"sourcesContent":["export enum Actions {\r\n    OpenHtmlTab = \"open_tab\",\r\n    GetTabData = \"get_tab_data\",\r\n    GetParentTabId = \"get_parent_tab_id\",\r\n    OpenHoursSettings = \"open_hours_settings\",\r\n    HoursSettingsChanged = \"open_hours_settings_changed\",\r\n    GreetingsFromParent = \"greetingsFromParent\",\r\n    GreetingsFromChild = \"greetingsFromChild\",\r\n}\r\n\r\nexport enum TabType {\r\n    Undefined= \"Undefined\",\r\n    Main = \"Main\",\r\n    HoursSettings = \"HoursSettings\",\r\n    Html = \"Html\"\r\n}\r\n\r\nexport interface ServiceRequest {\r\n    action: Actions,\r\n    senderTabType: TabType,\r\n    targetTabType: TabType,\r\n    data: any,\r\n    pageTitle?: string,\r\n    senderTabId?: number,\r\n    targetTabId?: number,\r\n}\r\n\r\nexport function sendRequest(action: Actions, from: TabType, to: TabType,  toId: number, data: any, pageTitle?: string) {\r\n    let req: ServiceRequest = {\r\n        action,\r\n        data,\r\n        pageTitle,\r\n        senderTabType: from,\r\n        targetTabType: to,\r\n        targetTabId: toId,\r\n    };\r\n    return chrome.runtime.sendMessage(req);\r\n}\r\n\r\nexport interface ServiceResponse {\r\n    result: any,\r\n    error: string,\r\n}\r\n\r\nexport async function sendGetDataRequest(sender: TabType) {\r\n    let tab = await chrome.tabs.getCurrent();\r\n    return await sendRequest(Actions.GetTabData, sender, TabType.Undefined, undefined, {tabId: tab.id});\r\n}\r\n\r\nexport type MessageHandler = {\r\n    getListener: () => (request: ServiceRequest, _sender, _sendResponse) => void;\r\n    onMessageForMyTabType: (callback: (msg: ServiceRequest) => void) => MessageHandler;\r\n    onMessageForMe: (callback: (msg: ServiceRequest) => void) => MessageHandler;\r\n    onData: (callback: (data: any) => void) => MessageHandler;\r\n}\r\n\r\nexport interface InternalMessageHandler extends MessageHandler {\r\n    _onMessageForMyTabType(request: ServiceRequest): void;\r\n    _onMessageForMe(request: ServiceRequest): void;\r\n    _onData(data: any): void;\r\n}\r\n\r\nexport function createMessageHandler(tabType: TabType): MessageHandler {\r\n    let handler:InternalMessageHandler = {\r\n        getListener: function () {\r\n            let self: InternalMessageHandler = this;\r\n            return async function onMessage(request: ServiceRequest, _sender, _sendResponse) {\r\n                console.log(`blank received: `, request);\r\n                if (request.targetTabType === tabType) {\r\n                    self._onMessageForMyTabType?.(request);\r\n                    let tab = await chrome.tabs.getCurrent();\r\n                    if (request.targetTabId === tab.id) {\r\n                        self._onMessageForMe?.(request)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onMessageForMyTabType: function (callback: (msg: ServiceRequest) => void): MessageHandler {\r\n            this._onMessageForMyTabType = callback;\r\n            return this;\r\n        },\r\n        onMessageForMe: function (callback: (msg: ServiceRequest) => void): MessageHandler {\r\n            this._onMessageForMe = callback;\r\n            return this;\r\n        },\r\n        onData: function (callback: (data: any) => void): MessageHandler {\r\n            this._onData = callback;\r\n            return this;\r\n        },\r\n        _onMessageForMyTabType: undefined,\r\n        _onMessageForMe: undefined,\r\n        _onData: undefined\r\n    };\r\n    document.addEventListener(\"DOMContentLoaded\", async () => {\r\n        let res = await sendGetDataRequest(tabType);\r\n        handler._onData?.(res);\r\n    });\r\n    return handler;\r\n}","export const CLOSING_BRACE = \"__CLOSINGBRACE__\";\r\nexport const DOUBLE_QUOTE = \"__DOUBLEQUOTE__\";\r\n\r\nexport const NBSP = 160;\r\n\r\nexport function tokenize(textToTokenize: string) {\r\n    let tokens: string[] = [];\r\n    let txt = textToTokenize.replaceAll(\"\\\\}\", CLOSING_BRACE).replaceAll('\\\\\"', DOUBLE_QUOTE);\r\n    let pos = 0;\r\n    let start = pos;\r\n\r\n    function pushToken() {\r\n        if (start != pos)\r\n            tokens.push(txt.substring(start, pos));\r\n        start = pos;\r\n    }\r\n\r\n    function getTo(to: string) {\r\n        pushToken();\r\n        do {\r\n            pos++;\r\n        } while (pos < txt.length && txt[pos] != to);\r\n        if (pos >= txt.length)\r\n            throw `Missing '${to}' at matching from pos ${start}.`;\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    function getChar() {\r\n        pushToken();\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    while (pos < txt.length) {\r\n        //only test for special chars. All others are assumed alphanumeric\r\n        switch (txt[pos]) {\r\n            case '{':\r\n                getTo(\"}\");\r\n                break;\r\n            case '\"':\r\n                getTo('\"');\r\n                break;\r\n            case '#':\r\n                pushToken();\r\n                pos++;\r\n                break;\r\n            case '>':\r\n            case '+':\r\n            case '[':\r\n            case ']':\r\n            case '(':\r\n            case ')':\r\n            case '*':\r\n            case '.':\r\n            case '=':\r\n                getChar();\r\n                break;\r\n            case ' ':\r\n                pushToken();\r\n                start = ++pos;\r\n                break;\r\n            default:\r\n                pos++;\r\n        }\r\n    }\r\n    pushToken();\r\n    return tokens;\r\n}","// noinspection JSUnusedGlobalSymbols\r\nimport {tokenize} from \"./tokenizer\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport let emmet = {\r\n    create,\r\n    append,\r\n    insertBefore,\r\n    insertAfter,\r\n    appendChild,\r\n    test: {\r\n        testEmmet,\r\n        tokenize,\r\n    }\r\n};\r\n\r\nexport interface AttDef {\r\n    name: string,\r\n    sub: string,\r\n    value: string\r\n}\r\n\r\nexport interface GroupDef {\r\n    count: number,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface ListDef {\r\n    list: EmmetNode[];\r\n}\r\n\r\nexport interface ElementDef {\r\n    tag: string,\r\n    id: string,\r\n    atts: AttDef[]\r\n    classList: string[],\r\n    innerText: string,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface TextDef {\r\n    text: string\r\n}\r\n\r\nexport type EmmetNode = GroupDef | ElementDef | ListDef | TextDef;\r\n\r\nlet nested: string[] = undefined;\r\nlet lastCreated: Element = undefined;\r\n\r\nfunction toSelector(node: EmmetNode) {\r\n    if(!('tag' in node)) {\r\n        throw \"TODO: not yet implemented.\";\r\n    }\r\n    let selector = \"\";\r\n    if(node.tag)\r\n        selector += node.tag;\r\n    if(node.id)\r\n        selector += \"#\" + node.id;\r\n    if(node.classList.length>0) {\r\n        selector += \".\" + node.classList.join(\".\");\r\n    }\r\n    return selector;\r\n}\r\n\r\nfunction create(text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let root = parse();\r\n    let parent = document.querySelector(toSelector(root)) as Element;\r\n    if(\"tag\" in root) {\r\n        root = root.child;\r\n    } else {\r\n        throw \"root should be a single element.\";\r\n    }\r\n    buildElement(parent, root, 1, onIndex, hook);\r\n    return {root: parent, last: lastCreated};\r\n}\r\n\r\nfunction append(root: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    return parseAndBuild(root, onIndex, hook);\r\n}\r\n\r\nfunction insertBefore(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforebegin\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAfter(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"afterend\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction appendChild(parent: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforeend\", parent, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAt(position: InsertPosition, target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let tempRoot = document.createElement(\"div\");\r\n    let result = parseAndBuild(tempRoot, onIndex, hook);\r\n    let first: Node = undefined;\r\n    let insertPos = target as Node;\r\n    let children = [...tempRoot.childNodes]; //we'll be removing children from tempRoot, so copy the list.\r\n    for(let child of children) {\r\n        if(!first) {\r\n            //first element should be inserted at the specified position\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                first = insertPos = insertAdjacentText(target, position, (child as Text).wholeText);\r\n            else\r\n                first = insertPos = target.insertAdjacentElement(position, child as Element);\r\n        } else {\r\n            //consequent children should be inserted after the previous one.\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                insertPos = insertPos.parentElement.insertBefore(document.createTextNode((child as Text).wholeText), insertPos.nextSibling);\r\n            else\r\n                insertPos = insertPos.parentElement.insertBefore(child, insertPos.nextSibling);\r\n        }\r\n    }\r\n    return {target, first, last: result.last};\r\n}\r\n\r\nfunction insertAdjacentText(target: Node, position: InsertPosition, text: string) {\r\n    switch(position) {\r\n        case \"beforebegin\": // Before the element itself.\r\n            return target.parentElement.insertBefore(document.createTextNode(text), target);\r\n        case \"afterbegin\": // Just inside the element, before its first child.\r\n            return target.insertBefore(document.createTextNode(text), target.firstChild);\r\n        case \"beforeend\": // Just inside the element, after its last child.\r\n            return target.appendChild(document.createTextNode(text));\r\n        case \"afterend\": // After the element itself.\r\n            return target.parentElement.appendChild(document.createTextNode(text));\r\n    }\r\n}\r\n\r\nfunction parseAndBuild(root: HTMLElement, onIndex: (index: number) => string, hook: (el: Element) => void) {\r\n    buildElement(root, parse(), 1, onIndex, hook);\r\n    return {root, last: lastCreated};\r\n}\r\n\r\nfunction testEmmet(text: string): EmmetNode {\r\n    nested = tokenize(text);\r\n    return parse();\r\n}\r\n\r\nfunction parse() {\r\n    return parsePlus() ;\r\n}\r\n\r\n//parse a+b+c>d...\r\nfunction parsePlus(): EmmetNode {\r\n    let list = [];\r\n    while(true) {\r\n        let el = parseMult();\r\n        if (!el)\r\n            return list.length===1 ? list[0] : {list};\r\n        list.push(el)\r\n        if(!match('+'))\r\n            return list.length===1 ? list[0] : {list};\r\n    }\r\n}\r\n\r\nfunction parseMult() : EmmetNode {\r\n    let el = parseElement();\r\n    if(!el)\r\n        return el;\r\n    if(match('*')) {\r\n        let count = parseInt(nested.shift());\r\n        //wrap el in a count group.\r\n        return  {\r\n            count,\r\n            child: el\r\n        };\r\n    } else {\r\n        return el;\r\n    }\r\n}\r\n\r\n// parse group or primary element (and children)\r\nfunction parseElement(): EmmetNode {\r\n    let el: EmmetNode;\r\n    if(match('(')) {\r\n        el = parsePlus();\r\n        if(!match(\")\"))\r\n            throw \"Expected ')'\";\r\n        return el;\r\n    } else {\r\n        let text = matchStartsWith('{');\r\n        if (text) {\r\n            text = stripStringDelimiters(text);\r\n            return <TextDef>{text};\r\n        } else {\r\n            return parseChildDef();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction parseChildDef(): ElementDef {\r\n    let tag = nested.shift();\r\n    let id = undefined;\r\n    let atts: AttDef[] = [];\r\n    let classList: string[] = [];\r\n    let text = undefined;\r\n\r\n    while(nested.length) {\r\n        if (match('.')) {\r\n            let className = nested.shift();\r\n            if(!className)\r\n                throw \"Unexpected end of stream. Class name expected.\";\r\n            classList.push(className);\r\n        } else if (match('[')) {\r\n            atts = getAttributes();\r\n        } else {\r\n            let token = matchStartsWith('#');\r\n            if(token) {\r\n                id = token.substring(1);\r\n            } else {\r\n                let token = matchStartsWith('{')\r\n                if (token) {\r\n                    text = stripStringDelimiters(token);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {tag, id, atts, classList, innerText: text, child: parseDown()};\r\n}\r\n\r\n// parse >...\r\nfunction parseDown() : EmmetNode {\r\n    if(match('>')) {\r\n        return parsePlus();\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getAttributes() {\r\n    //gather all the attributes\r\n    let tokens: string[] = [];\r\n    while(nested.length) {\r\n        let prop = nested.shift();\r\n        if(prop == ']')\r\n            break;\r\n        tokens.push(prop);\r\n    }\r\n\r\n    let attDefs: AttDef[] = [];\r\n\r\n    while(tokens.length) {\r\n        let name = tokens.shift();\r\n        let eq = tokens.shift();\r\n        let sub = \"\";\r\n        if(eq === '.') {\r\n            sub = tokens.shift();\r\n            eq = tokens.shift();\r\n        }\r\n        if (eq != '=') {\r\n            throw \"Equal sign expected.\";\r\n        }\r\n        let value = tokens.shift();\r\n        if(value[0] === '\"') {\r\n            value = stripStringDelimiters(value);\r\n        }\r\n        if (!value)\r\n            throw \"Value expected.\";\r\n            attDefs.push({name, sub, value});\r\n        if(!tokens.length)\r\n            break;\r\n    }\r\n    return attDefs;\r\n}\r\n\r\nfunction match(expected: string) {\r\n    let next = nested.shift();\r\n    if(next === expected)\r\n        return true;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return false;\r\n}\r\n\r\nfunction matchStartsWith(expected: string) {\r\n    let next = nested.shift();\r\n    if(next.startsWith(expected))\r\n        return next;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return undefined;\r\n}\r\n\r\nfunction stripStringDelimiters(text: string) {\r\n    if(text[0] === \"'\" || text[0] === '\"' || text[0] === '{')\r\n        return text.substring(1, text.length-1);\r\n    return text;\r\n}\r\n\r\n//CREATION\r\nfunction createElement(parent: Element, def: ElementDef, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    let el = parent.appendChild(document.createElement(def.tag));\r\n    if (def.id)\r\n        el.id = addIndex(def.id, index, onIndex);\r\n    for(let clazz of def.classList) {\r\n        el.classList.add(addIndex(clazz, index, onIndex));\r\n    }\r\n    for (let att of def.atts) {\r\n        if (att.sub)\r\n            el[addIndex(att.name, index, onIndex)][addIndex(att.sub, index, onIndex)] = addIndex(att.value, index, onIndex);\r\n        else {\r\n            el.setAttribute(addIndex(att.name, index, onIndex), addIndex(att.value, index, onIndex));\r\n        }\r\n    }\r\n    if(def.innerText) {\r\n        el.appendChild(document.createTextNode(addIndex(def.innerText, index, onIndex)));\r\n    }\r\n    lastCreated = el;\r\n    if(hook)\r\n        hook(el);\r\n    return el;\r\n}\r\n\r\nfunction buildElement(parent: Element, el: EmmetNode, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    if(\"tag\" in el) { //ElementDef\r\n        let created = createElement(parent, el, index, onIndex, hook);\r\n        if(el.child)\r\n            buildElement(created, el.child, index, onIndex, hook);\r\n        return;\r\n    }\r\n    if(\"list\" in el) { //ListDef\r\n        for( let def of el.list) {\r\n            buildElement(parent, def, index, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"count\" in el) { //GroupDef\r\n        for(let i = 0; i < el.count; i++) {\r\n            buildElement(parent, el.child, i, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"text\" in el) { //TextDef\r\n        parent.appendChild(document.createTextNode(addIndex(el.text, index, onIndex)));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction addIndex(text: string, index: number, onIndex: (index: number) => string) {\r\n    if(onIndex) {\r\n        let result = onIndex(index);\r\n        text = text.replace(\"$$\", result);\r\n    }\r\n    return text.replace(\"$\", (index+1).toString());\r\n}","export const COPY_AGAIN = \"copy_again\";\r\nexport const PROGRESS_BAR_ID = \"progressBarFetch\";\r\nexport const UREN_PREV_BTN_ID = \"prefillInstrButton\";\r\nexport const UREN_PREV_SETUP_BTN_ID = \"prefillInstrSetupButton\";\r\nexport const UREN_NEXT_BTN_ID = \"prefillInstrButtonNext\";\r\nexport const UREN_NEXT_SETUP_BTN_ID = \"prefillInstrSetupButtonNext\";\r\nexport const MAIL_BTN_ID = \"mailButton\";\r\nexport const DOWNLOAD_TABLE_BTN_ID = \"downloadTableButton\";\r\nexport const COPY_TABLE_BTN_ID = \"copyTableButton\";\r\nexport const LESSEN_OVERZICHT_ID = \"lessen_overzicht\";\r\nexport const TRIM_BUTTON_ID = \"moduleButton\";\r\nexport const CHECKS_BUTTON_ID = \"checksButton\";\r\nexport const COUNT_BUTTON_ID = \"fetchAllButton\";\r\nexport const FULL_CLASS_BUTTON_ID = \"fullClassButton\";\r\nexport const TRIM_TABLE_ID = \"trimesterTable\";\r\nexport const COUNT_TABLE_ID = \"werklijst_uren\";\r\nexport const TRIM_DIV_ID = \"trimesterDiv\";\r\nexport const JSON_URL = \"https://europe-west1-ebo-tain.cloudfunctions.net/json\";\r\nexport const INFO_CONTAINER_ID =  \"dp3p_infoContainer\";\r\nexport const INFO_CACHE_ID =  \"dp3p_cacheInfo\";\r\nexport const INFO_TEMP_ID =  \"dp3_tempInfo\";\r\nexport const INFO_EXTRA_ID =  \"dp3_extraInfo\";\r\nexport const AANW_LIST =  \"aanwezighedenList\";\r\nexport const GLOBAL_SETTINGS_FILENAME =  \"global_settings.json\";\r\nexport const CACHE_DATE_SUFFIX = \"__date\";\r\nexport const POWER_QUERY_ID = \"savedPowerQuery\";\r\nexport const STORAGE_GOTO_STATE_KEY = \"gotoState\";\r\nexport const STORAGE_PAGE_SETTINGS_KEY_PREFIX = \"pageSettings_\";\r\nexport const UREN_TABLE_STATE_NAME = \"__uren__\";\r\nexport const CAN_SORT = \"canSort\";\r\nexport const NO_MENU = \"noMenu\";\r\nexport const LESSEN_TABLE_ID = \"table_lessen_resultaat_tabel\";\r\nexport const FILTER_INFO_ID = \"filterInfo\";\r\nexport const GLOBAL_COMMAND_BUFFER_KEY = \"globalCmdBuffer\";","import * as def from \"./def\";\r\n\r\nexport let cloud = {\r\n    json: {\r\n        fetch: fetchJson,\r\n        upload: uploadJson\r\n    }\r\n};\r\n\r\nasync function fetchJson(fileName: string) {\r\n    return fetch(def.JSON_URL + \"?fileName=\"+fileName, {method: \"GET\"})\r\n        .then((res) => res.json());\r\n}\r\n\r\nasync function uploadJson(fileName: string, data: any) {\r\n    let res = await fetch(def.JSON_URL + \"?fileName=\" + fileName, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        keepalive: true, //keeps the data valid even if window is closing.\r\n    });\r\n    return await res.text();\r\n}","import {Observer} from \"./pageObserver\";\r\nimport * as def from \"./def\";\r\nimport {emmet} from \"../libs/Emmeter/html\";\r\nimport {PageName} from \"./gotoState\";\r\nimport {PageSettings} from \"./lessen/build\";\r\nimport {fetchGlobalSettings, getGlobalSettings, GlobalSettings, options, setGlobalSetting} from \"./plugin_options/options\";\r\nimport {Actions, sendRequest, ServiceRequest, TabType} from \"./messaging\";\r\n\r\nimport {TeacherHoursSetup} from \"./werklijst/hoursSettings\";\r\n\r\nexport let observers: Observer[] = [];\r\nexport let settingsObservers: (() => void)[] = [];\r\n\r\nexport function db3(message: any) {\r\n    if (options?.showDebug) {\r\n        console.log(message);\r\n        console.log(Error().stack.split(\"\\n\")[2]);\r\n    }\r\n}\r\n\r\nexport function createValidId(id: string) {\r\n    return id\r\n        .replaceAll(\" \", \"\")\r\n        .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .replace(/\\W/g,'');\r\n}\r\n\r\n\r\nexport function registerObserver(observer: Observer) {\r\n    observers.push(observer);\r\n    if(observers.length > 20) //just in case...\r\n        console.error(\"Too many observers!\");\r\n}\r\n\r\nexport function registerSettingsObserver(observer: () => void) {\r\n    settingsObservers.push(observer);\r\n    if(settingsObservers.length > 20) //just in case...\r\n        console.error(\"Too many settingsObservers!\");\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function searchText(text: string) {\r\n    let input: HTMLInputElement = document.querySelector(\"#snel_zoeken_veld_zoektermen\");\r\n    input.value = text;\r\n    // noinspection JSDeprecatedSymbols\r\n    let evUp = new KeyboardEvent(\"keyup\", {\r\n        key: \"Enter\",\r\n        code: \"Enter\",\r\n        keyCode: 13, //deprecated, but DKO3 still checks for this!\r\n        bubbles: true});\r\n    input.dispatchEvent(evUp);\r\n}\r\n\r\nexport function setButtonHighlighted(buttonId: string, show: boolean) {\r\n    if (show) {\r\n        document.getElementById(buttonId).classList.add(\"toggled\");\r\n    } else {\r\n        document.getElementById(buttonId).classList.remove(\"toggled\");\r\n    }\r\n}\r\n\r\nexport function addButton(targetElement: HTMLElement, buttonId: string, title: string, clickFunction: (ev:PointerEvent) => void, imageId: string, classList: string[], text = \"\", where: InsertPosition = \"beforebegin\", imageFileName?: string) {\r\n    let button = document.getElementById(buttonId);\r\n    if (button === null) {\r\n        const button = document.createElement(\"button\");\r\n        button.classList.add(\"btn\", ...classList);\r\n        /*, \"btn-sm\", \"btn-outline-secondary\", \"w-100\"*/\r\n        button.id = buttonId;\r\n        button.style.marginTop = \"0\";\r\n        button.onclick = clickFunction;\r\n        button.title = title;\r\n        if(text) {\r\n            let span = document.createElement(\"span\");\r\n            button.appendChild(span);\r\n            span.innerText = text;\r\n        }\r\n        if(imageFileName) {\r\n            button.classList.add(\"svg\");\r\n            emmet.appendChild(button, `img[src=\"${chrome.runtime.getURL(\"images/\" + imageFileName)}\"]`);\r\n        }\r\n        const buttonContent = document.createElement(\"i\");\r\n        button.appendChild(buttonContent);\r\n        if(imageId)\r\n            buttonContent.classList.add(\"fas\", imageId);\r\n        targetElement.insertAdjacentElement(where, button);\r\n    }\r\n}\r\n\r\nexport namespace Schoolyear {\r\n    export function getSelectElement() {\r\n        let selects = document.querySelectorAll(\"select\");\r\n        return Array.from(selects)\r\n            .filter((element) => element.id.includes(\"schooljaar\"))\r\n            .pop();\r\n    }\r\n\r\n    export function getHighestAvailable() {\r\n        let el = getSelectElement();\r\n        if (!el)\r\n            return undefined;\r\n        return Array.from(el.querySelectorAll(\"option\"))\r\n            .map(option => option.value)\r\n            .sort()\r\n            .pop();\r\n    }\r\n\r\n//Tries to return \"202x-202y\".\r\n    export function findInPage() {\r\n        let el = getSelectElement();\r\n        if (el)\r\n            return el.value;\r\n        el = document.querySelector(\"div.alert-primary\");\r\n        return el.textContent.match(/schooljaar *= (\\d{4}-\\d{4})*/)[1];\r\n    }\r\n\r\n    export function calculateCurrent() {\r\n        let now = new Date();\r\n        let year = now.getFullYear();\r\n        let month = now.getMonth();\r\n        if (month < 8) //zero-based juli !\r\n            return year - 1; //schoolyear started last year.\r\n        return year;\r\n    }\r\n\r\n//E.g. \"2024-2025\"\r\n    export function toFullString(startYear: number) {\r\n        return `${startYear}-${startYear + 1}`;\r\n    }\r\n\r\n//E.g. \"24-25'\r\n    export function toShortString(startYear: number) {\r\n        return `${startYear % 1000}-${(startYear % 1000) + 1}`;\r\n    }\r\n\r\n    export function toNumbers(schoolyearString: string) {\r\n        let parts = schoolyearString.split(\"-\").map(s => parseInt(s));\r\n        return {startYear: parts[0], endYear: parts[1]};\r\n    }\r\n\r\n}\r\n\r\nexport function getUserAndSchoolName() {\r\n    let footer = document.querySelector(\"body > main > div.row > div.col-auto.mr-auto > small\");\r\n    const reInstrument = /.*Je bent aangemeld als (.*)\\s@\\s(.*)\\./;\r\n    const match = footer.textContent.match(reInstrument);\r\n    if (match?.length !== 3) {\r\n        throw new Error(`Could not process footer text \"${footer.textContent}\"`);\r\n    }\r\n    let userName = match[1];\r\n    let schoolName = match[2];\r\n    return {userName, schoolName};\r\n}\r\n\r\nexport function getSchoolIdString() {\r\n    let {schoolName} = getUserAndSchoolName();\r\n    schoolName = schoolName\r\n        .replace(\"Academie \", \"\")\r\n        .replace(\"Muziek\", \"M\")\r\n        .replace(\"Woord\", \"W\")\r\n        .toLowerCase();\r\n    return createValidId(schoolName);\r\n}\r\n\r\nexport function millisToString(duration: number) {\r\n    let seconds = Math.floor((duration / 1000) % 60);\r\n    let minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n    let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n    let days = Math.floor((duration / (1000 * 60 * 60 * 24)));\r\n\r\n    if (days > 0)\r\n        return days + (days === 1 ? \" dag\" : \" dagen\");\r\n    else if (hours > 0)\r\n        return hours + \" uur\";\r\n    else if (minutes > 0)\r\n        return minutes + (minutes === 1 ? \" minuut\" : \" minuten\");\r\n    else if (seconds > 0)\r\n        return seconds + \" seconden\";\r\n    else return \"\";\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n\r\nexport function isAlphaNumeric(str: string) {\r\n    if (str.length > 1)\r\n        return false;\r\n    let code: number;\r\n    let i: number;\r\n    let len: number;\r\n\r\n    for (i = 0, len = str.length; i < len; i++) {\r\n        code = str.charCodeAt(i);\r\n        if (!(code > 47 && code < 58) && // numeric (0-9)\r\n            !(code > 64 && code < 91) && // upper alpha (A-Z)\r\n            !(code > 96 && code < 123)) { // lower alpha (a-z)\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function rangeGenerator(start: number, stop: number, step = 1): number[] {\r\n    return Array(Math.ceil((stop - start) / step)).fill(start).map((x, y) => x + y * step);\r\n}\r\n\r\nexport function createSearchField(id: string, onSearchInput: (ev: Event) => any, value: string) {\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"text\";\r\n    input.id = id;\r\n    input.classList.add(\"tableFilter\");\r\n    input.oninput = onSearchInput;\r\n    input.value = value;\r\n    input.placeholder = \"filter\";\r\n    let span = document.createElement(\"span\");\r\n    span.classList.add(\"searchButton\");\r\n    span.appendChild(input);\r\n    let { first: clearButton } = emmet.appendChild(span, `button>img[src=\"${chrome.runtime.getURL(\"images/circle-xmark-regular.svg\")}\"`);\r\n    (clearButton as HTMLElement).onclick = () => {\r\n        input.value = \"\";\r\n        input.oninput(undefined);\r\n        input.focus();\r\n    };\r\n    return span;\r\n}\r\n\r\nexport function getBothToolbars() {\r\n    let navigationBars = document.querySelectorAll(\"div.datatable-navigation-toolbar\"); // as HTMLElement;\r\n    if (navigationBars.length < 2)\r\n        return undefined; //wait for top and bottom bars.\r\n    return navigationBars;\r\n}\r\n\r\nexport function addTableNavigationButton(navigationBars: NodeListOf<Element>, btnId: string, title: string, onClick: any, fontIconId: string) {\r\n    addButton(navigationBars[0].lastElementChild as HTMLElement, btnId, title, onClick, fontIconId, [\"btn-secondary\"], \"\", \"afterend\");\r\n    return true;\r\n}\r\n\r\nexport function distinct<Type>(array: Type[]): Type[] {\r\n    return [...new Set(array)];\r\n}\r\n\r\nexport async function fetchStudentsSearch(search: string) {\r\n    return fetch(\"/view.php?args=zoeken?zoek=\" + encodeURIComponent(search))\r\n        .then((response) => response.text())\r\n        .then((_text) => fetch(\"/views/zoeken/index.view.php\"))\r\n        .then((response) => response.text())\r\n        .catch(err => {\r\n            console.error('Request failed', err);\r\n            return \"\";\r\n        });\r\n}\r\n\r\nexport async function setViewFromCurrentUrl() {\r\n    let hash = window.location.hash.replace(\"#\", \"\");\r\n    await fetch(\"https://administratie.dko3.cloud/#\" + hash).then(res => res.text());\r\n    // call to changeView() - assuming this is always the same, so no parsing here.\r\n    await fetch(\"view.php?args=\" + hash).then(res => res.text());\r\n}\r\n\r\nexport function equals(g1: GlobalSettings, g2: GlobalSettings){\r\n    return (\r\n        g1.globalHide === g2.globalHide\r\n    );\r\n}\r\n\r\nexport let rxEmail = /\\w[\\w.\\-]*\\@\\w+\\.\\w+/gm;\r\n\r\nexport function whoAmI() {\r\n    let allScripts = document.querySelectorAll(\"script\");\r\n    let scriptTexts = [...allScripts].map(s => s.textContent).join();\r\n    let email = scriptTexts.match(rxEmail)[0];\r\n    let rxName = /name: '(.*)'/;\r\n    let name = scriptTexts.match(rxName)[1];\r\n    return {email, name};\r\n}\r\n\r\nexport function stripStudentName(name: string): string {\r\n    return name.replaceAll(/[,()'-]/g, \" \").replaceAll(\"  \", \" \");\r\n}\r\n\r\nexport async function openHtmlTab(innerHtml: string, pageTitle: string) {\r\n    return sendRequest(Actions.OpenHtmlTab, TabType.Main, TabType.Html, undefined, innerHtml, pageTitle);\r\n}\r\n\r\nexport async function openHoursSettings(data: TeacherHoursSetup) {\r\n    return sendRequest(Actions.OpenHoursSettings, TabType.Main, TabType.Undefined, undefined, data, \"Lerarenuren setup\");\r\n}\r\n\r\nexport function writeTableToClipboardForExcel(table: HTMLTableElement) {\r\n    let html = table.outerHTML\r\n        .replaceAll('\\n','<br style=\"mso-data-placement:same-cell;\"/>')  // new lines inside html cells => Alt+Enter in Excel\r\n        .replaceAll('<td','<td style=\"vertical-align: top;\"');  // align top\r\n    return navigator.clipboard.writeText(html);\r\n}\r\n\r\nexport function createTable(headers: Iterable<string>, cols: Iterable<Iterable<string>>) {\r\n    let tmpDiv = document.createElement(\"div\");\r\n    let {first: tmpTable, last: tmpThead} = emmet.appendChild(tmpDiv, \"table>thead\");\r\n    for (let th of headers) {\r\n        emmet.appendChild(tmpThead as HTMLElement, `th{${th}}`);\r\n    }\r\n    let tmpTbody = tmpTable.appendChild(document.createElement(\"tbody\"));\r\n    for (let tr of cols) {\r\n        let tmpTr = tmpTbody.appendChild(document.createElement(\"tr\"));\r\n        for (let cell of tr) {\r\n            emmet.appendChild(tmpTr, `td{${cell}}`);\r\n        }\r\n    }\r\n    return tmpTable as HTMLTableElement;\r\n}\r\n\r\nexport type ResultOk<T> = {\r\n    result: T\r\n}\r\n\r\nexport type ResultFail = {\r\n    error: NonNullable<string>\r\n}\r\n\r\ntype Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\r\ntype XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;\r\n\r\nexport type Result<T> = XOR<ResultOk<T>,ResultFail>\r\n\r\nexport function isButtonHighlighted(buttonId: string) {\r\n    return document.getElementById(buttonId)?.classList.contains(\"toggled\");\r\n}\r\n\r\nexport function range(startAt: number, upTo: number) {\r\n    if (upTo > startAt)\r\n        return [...Array(upTo - startAt).keys()].map(n => n + startAt);\r\n    else\r\n        return [...Array(startAt - upTo).keys()].reverse().map(n => n + upTo + 1);\r\n}\r\n\r\nexport function getPageSettings(pageName: PageName, defaultSettings: PageSettings): PageSettings {\r\n    let storedState = localStorage.getItem(def.STORAGE_PAGE_SETTINGS_KEY_PREFIX + pageName);\r\n    if (storedState)\r\n        return JSON.parse(storedState);\r\n    return defaultSettings;\r\n}\r\n\r\nexport function savePageSettings(state: PageSettings) {\r\n    localStorage.setItem(def.STORAGE_PAGE_SETTINGS_KEY_PREFIX + state.pageName, JSON.stringify(state));\r\n}\r\n\r\nlet globalTransientPageState: Map<string, any> = new Map();\r\n\r\nexport function getPageTransientStateValue(key: string, defaultValue: any) {\r\n    let value =  globalTransientPageState.get(key);\r\n    return value ? value : setPageTransientStateValue(key, defaultValue);\r\n}\r\n\r\nexport function setPageTransientStateValue(key:string, transientState: object){\r\n    globalTransientPageState.set(key, transientState);\r\n    return transientState;\r\n}\r\nexport function clearPageTransientState() {\r\n    globalTransientPageState.clear();\r\n}\r\n\r\nexport async function getOptions() {\r\n    // xxx @ts-ignore\r\n    let items = await chrome.storage.sync.get(null); //get all\r\n    // xxx @ts-ignore\r\n    Object.assign(options, items);\r\n    setGlobalSetting(await fetchGlobalSettings(getGlobalSettings()));\r\n}","import {cloud} from \"../cloud\";\r\nimport { Schoolyear } from \"../globals\";\r\nimport {fetchAvailableSubjects} from \"./criteria\";\r\n\r\nexport type SubjectDef = {\r\n    checked: boolean,\r\n    name: string,\r\n    alias: string,\r\n    stillValid: boolean\r\n}\r\n\r\nexport type TranslationDef = {\r\n    find: string,\r\n    replace: string,\r\n    prefix: string,\r\n    suffix: string,\r\n}\r\n\r\nexport type TeacherHoursSetup = {\r\n    version: 1,\r\n    schoolyear: string,\r\n    subjects: SubjectDef[];\r\n    translations: TranslationDef[];\r\n}\r\n\r\nexport type TeacherHoursSetupMapped = TeacherHoursSetup & {\r\n    subjectsMap: Map<string, SubjectDef>,\r\n}\r\n\r\nexport function mapHourSettings(hourSettings: TeacherHoursSetup) {\r\n    let mapped = {...hourSettings} as TeacherHoursSetupMapped;\r\n    mapped.subjectsMap = new Map(hourSettings.subjects.map(s => [s.name, s]));\r\n    return mapped;\r\n}\r\n\r\nlet defaultInstruments = [\r\n    {checked:  true, name:  \"Aaaaa\", alias: \"bbb\", stillValid: true},\r\n    {checked:  true, name:  \"Accordeon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altfluit\", alias: \"Dwarsfluit\", stillValid: false},\r\n    {checked:  true, name:  \"Althoorn\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altklarinet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Altviool\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baglama/saz (wereldmuziek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Bariton\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baritonsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Baritonsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basfluit\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basgitaar (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Basklarinet\", alias: \"Klarinet\", stillValid: false},\r\n    {checked:  true, name:  \"Bastrombone\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Bastuba\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Bugel\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Cello\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Contrabas (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Contrabas (klassiek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Dwarsfluit\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Engelse hoorn\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Eufonium\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Fagot\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Gitaar\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Gitaar (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Harp\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Hobo\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Hoorn\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Keyboard (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Klarinet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Kornet\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Orgel\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piano\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piano (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Pianolab\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Piccolo\", alias: \"Dwarsfluit\", stillValid: false},\r\n    {checked:  true, name:  \"Slagwerk\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Slagwerk (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Sopraansaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Sopraansaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Tenorsaxofoon\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Tenorsaxofoon (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Trombone\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Trompet\", alias: \"Koper\", stillValid: false},\r\n    {checked:  true, name:  \"Trompet (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Ud (wereldmuziek)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Viool\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (jazz pop rock)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (musical 2e graad)\", alias: \"\", stillValid: false},\r\n    {checked:  true, name:  \"Zang (musical)\", alias: \"\", stillValid: false},\r\n];\r\n\r\nlet defaultInstrumentsMap = new Map<string, SubjectDef>();\r\ndefaultInstruments.forEach(i => defaultInstrumentsMap.set(i.name, i));\r\n\r\nlet defaultTranslationDefs: TranslationDef[] = [\r\n    {find: \"Altsaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n    {find: \"Sopraansaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n    {find: \"Tenorsaxofoon\", replace: \"Saxofoon\", prefix: \"\", suffix: \"\"},\r\n\r\n    {find: \"(klassiek)\", replace: \"\", prefix: \"K \", suffix: \"\"},\r\n    {find: \"(jazz pop rock)\", replace: \"\", prefix: \"JPR \", suffix: \"\"},\r\n    {find: \"(musical)\", replace: \"\", prefix: \"M \", suffix: \"\"},\r\n    {find: \"(musical 2e graad)\", replace: \"(2e graad)\", prefix: \"M \", suffix: \"\"},\r\n    {find: \"(wereldmuziek)\", replace: \"\", prefix: \"WM \", suffix: \"\"},\r\n    {find: \"instrumentinitiatie\", replace: \"init\", prefix: \"\", suffix: \"\"},\r\n    {find: \"\", replace: \"\", prefix: \"K \", suffix: \"\"},\r\n    {find: \"K JPR \", replace: \"JPR \", prefix: \"\", suffix: \"\"},\r\n    {find: \"K M \", replace: \"M \", prefix: \"\", suffix: \"\"},\r\n    {find: \"K WM \", replace: \"WM \", prefix: \"\", suffix: \"\"},\r\n    {find: \"K K \", replace: \"K \", prefix: \"\", suffix: \"\"},\r\n];\r\n\r\nfunction getDefaultHourSettings(schoolyear: string): TeacherHoursSetup {\r\n    return {\r\n        version: 1,\r\n        schoolyear,\r\n        subjects: [...defaultInstruments],\r\n        translations: [...defaultTranslationDefs]\r\n    };\r\n}\r\n\r\nexport async function fetchHoursSettingsOrSaveDefault(schoolyearString: string) {\r\n    let dko3_subjects = (await fetchAvailableSubjects(schoolyearString))\r\n        .map(vak => vak.name);\r\n    let cloudSettings = await cloud.json.fetch(createTeacherHoursFileName(schoolyearString)).catch(_ => {}) as TeacherHoursSetup;\r\n    if(!cloudSettings) {\r\n        let prevYearString = Schoolyear.toFullString(Schoolyear.toNumbers(schoolyearString).startYear-1);\r\n        cloudSettings = await cloud.json.fetch(createTeacherHoursFileName(prevYearString)).catch(_ => {}) as TeacherHoursSetup;\r\n        if (!cloudSettings) {\r\n            cloudSettings = getDefaultHourSettings(schoolyearString);\r\n        } else {\r\n            cloudSettings.schoolyear = schoolyearString;\r\n        }\r\n        await saveHourSettings(cloudSettings); //save unmerged settings. It's up to the user to review and change these defaults.\r\n    }\r\n\r\n    let availableSubjectSet = new Set(dko3_subjects);\r\n    //invalidate obsolete subjects\r\n    cloudSettings.subjects.forEach(s => s.stillValid = availableSubjectSet.has(s.name));\r\n    let cloudSubjectMap = new Map(cloudSettings.subjects.map(s => [s.name, s]));\r\n    //add new subjects\r\n    for(let name of availableSubjectSet) {\r\n        if(!cloudSubjectMap.has(name)) {\r\n            cloudSubjectMap.set(name, {\r\n                checked: false,\r\n                name,\r\n                alias: \"\",\r\n                stillValid: true\r\n            });\r\n        }\r\n    }\r\n    cloudSettings.subjects = [...cloudSubjectMap.values()].sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    return cloudSettings;\r\n}\r\n\r\nexport function createTeacherHoursFileName(schoolyear: string) {\r\n    return \"teacherHoursSetup_\" + schoolyear + \".json\";\r\n}\r\n\r\nexport async function saveHourSettings(hoursSetup: TeacherHoursSetup) {\r\n    let fileName = createTeacherHoursFileName(hoursSetup.schoolyear);\r\n    return cloud.json.upload(fileName, hoursSetup);\r\n}","const template = document.createElement('template');\r\ntemplate.innerHTML = `\r\n    <div class=\"container\">\r\n        <div class=\"foreground\">\r\n            <input type=\"text\"/>\r\n        </div>\r\n        <div id=\"background\" class=\"background\">\r\n        </div>\r\n    </div>\r\n    `;\r\n// language=CSS\r\nconst css = `\r\n    /* noinspection CssUnusedSymbol*/\r\n    .container {\r\n        background-color: rgba(100, 150, 255, 0.1);\r\n        position: relative;\r\n        font-family: inherit; /* font of container MUST be the same as the input*/\r\n        font-size: 1em;\r\n        input {\r\n            background: transparent;\r\n            font-family: inherit; /* font of container MUST be the same as the input*/\r\n            font-size: 1em;\r\n            border: none;\r\n            padding: 0;\r\n            margin: 0;\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n        }\r\n        /* noinspection CssUnusedSymbol*/\r\n        .foreground {\r\n            padding: 0;\r\n        }\r\n        /* noinspection CssUnusedSymbol*/\r\n        .background {\r\n            position: absolute;\r\n            inset-inline-start: 0;\r\n            inset-block-start: 0;\r\n            z-index: -1;\r\n            background: rgba(100, 150, 255, 0.1); /* this is the text background color. Should be set by user.*/\r\n            border: 1px solid transparent;\r\n            padding: 0;\r\n\r\n        }\r\n        /* noinspection CssUnusedSymbol*/\r\n        span.spaces {\r\n            /*\r\n            background-color: red; // can be set with ::part(space) selector.\r\n        \r\n            */\r\n        }\r\n        /* noinspection CssUnusedSymbol*/\r\n        span.text {\r\n            color: transparent;\r\n        }\r\n    }\r\n    `;\r\nfunction loadWebComponent() {\r\n    class InputWithSpaces extends HTMLElement {\r\n        static get observedAttributes() {\r\n            return ['value'];\r\n        }\r\n        input: HTMLInputElement = undefined;\r\n        #shadow = undefined;\r\n        background: HTMLDivElement = undefined;\r\n        value = \"\";\r\n        constructor() {\r\n            super();\r\n            this.#shadow = this.attachShadow({mode: 'closed'});\r\n            let cssStyleSheet = new CSSStyleSheet();\r\n            cssStyleSheet.replaceSync(css);\r\n            this.#shadow.adoptedStyleSheets = [cssStyleSheet];\r\n            this.#shadow.append(template.content.cloneNode(true));\r\n            this.input = this.#shadow.querySelector('input');\r\n            this.background = this.#shadow.querySelector('div.background');\r\n        }\r\n\r\n        // noinspection JSUnusedGlobalSymbols\r\n        connectedCallback() {\r\n            this.onContentComplete(); //note: if class is constructed before the full dom is parsed: use setTimeout() here. Or put the whole class in a DOMContentLoaded listerer.\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        attributeChangedCallback(name: string, _oldValue: string, newValue: string) {\r\n            if (name === 'value') {\r\n                this.input.value = newValue;\r\n                this.onInput();\r\n            }\r\n        }\r\n\r\n        onContentComplete() {\r\n            this.input.addEventListener('input', (_: Event) => {\r\n                this.onInput();\r\n                this.setAttribute('value', this.input.value);//don't put this is onInput to avoid a dead-loop.\r\n            });\r\n        }\r\n\r\n        onInput() {\r\n            this.value = this.input.value;\r\n            let stringArray = this.input.value.split(/(\\s+)/);\r\n            let stringArray2 = stringArray.filter(slice => slice);\r\n            this.background.innerHTML = '';\r\n            for (let slice of stringArray2) {\r\n                let span = this.background.appendChild(document.createElement('span'));\r\n                if (slice.trim() === '') {\r\n                    span.classList.add(\"spaces\");\r\n                    span.part.add(\"space\");\r\n                } else {\r\n                    span.classList.add(\"text\");\r\n                }\r\n                span.innerHTML = slice.replaceAll(\" \", \"&nbsp;\");\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    customElements.define('input-with-spaces', InputWithSpaces);\r\n}\r\n\r\ntype InputWithSpaces = HTMLElement & {\r\n    value: string;\r\n}\r\n\r\nexport type Type = InputWithSpaces;\r\n\r\nexport function registerWebComponent()  {\r\n    document.addEventListener('DOMContentLoaded', () => {loadWebComponent();}); //assures the page is fully parsed, including the custom element's content.\r\n}","import {Actions, createMessageHandler, sendRequest, ServiceRequest, TabType} from \"./messaging\";\r\nimport {emmet} from \"../libs/Emmeter/html\";\r\n\r\nimport {mapHourSettings, saveHourSettings, TeacherHoursSetup, TeacherHoursSetupMapped, TranslationDef} from \"./werklijst/hoursSettings\";\r\nimport * as InputWithSpaces from \"./webComponents/inputWithSpaces\";\r\n\r\nlet handler  = createMessageHandler(TabType.HoursSettings);\r\n\r\nInputWithSpaces.registerWebComponent();\r\n\r\nchrome.runtime.onMessage.addListener(handler.getListener());\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", onDocumentLoaded)\r\n\r\nhandler\r\n    .onMessageForMyTabType(msg => {\r\n        console.log(\"message for my tab type: \", msg);\r\n        document.getElementById(\"container\").innerHTML = \"Message was for my tab type\" + msg.data;\r\n    })\r\n    .onMessageForMe(msg => {\r\n        console.log(\"message for me: \", msg);\r\n        document.getElementById(\"container\").innerHTML = \"DATA:\" + msg.data;\r\n    })\r\n    .onData(onData);\r\n\r\nfunction fillSubjectsTable(dko3Setup: TeacherHoursSetupMapped) {\r\n    let container = document.getElementById(\"subjectsContainer\");\r\n    let tbody = container.querySelector(\"table>tbody\") as HTMLTableSectionElement;\r\n    tbody.innerHTML = \"\";\r\n    for (let vak of dko3Setup.subjects) {\r\n        let validClass = \"\";\r\n        let bucket = \"\";\r\n        if(!vak.stillValid) {\r\n            validClass = \".invalid\";\r\n            bucket = `+button.deleteRow.naked>img[src=\"${chrome.runtime.getURL(\"images/trash-can.svg\")}\"]`;\r\n        }\r\n        let valueAttribute = \"\";\r\n        if (vak.alias)\r\n            valueAttribute = ` value=\"${vak.alias}\"`;\r\n        let checkedAttribute = \"\";\r\n        if (vak.checked)\r\n            checkedAttribute = ` checked=\"checked\"`;\r\n        emmet.appendChild(tbody, `tr>(td>input[type=\"checkbox\" ${checkedAttribute}])+(td${validClass}>({${vak.name}}${bucket}))+td>input[type=\"text\" ${valueAttribute}]`)\r\n    }\r\n    document.querySelectorAll(\"#subjectsContainer button.deleteRow\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", deleteTableRow));\r\n}\r\n\r\nfunction addTranslationRow(trns: TranslationDef, tbody: HTMLTableSectionElement) {\r\n    let text = `tr>`\r\n        + buildField(\"Vind\", trns.find, \"trnsFind\")\r\n        + \"+\"\r\n        + buildField(\"vervang door\", trns.replace, \"trnsReplace\")\r\n        + \"+\"\r\n        + buildField(\"prefix\", trns.prefix, \"trnsPrefix\")\r\n        + \"+\"\r\n        + buildField(\"suffix\", trns.suffix, \"trnsSuffix\");\r\n    let tr = emmet.appendChild(tbody, text).first as HTMLTableRowElement;\r\n    let up = `button.moveUp.naked>img[src=\"${chrome.runtime.getURL(\"images/up-arrow.svg\")}\"]`;\r\n    let down = `button.moveDown.naked>img.upSideDown[src=\"${chrome.runtime.getURL(\"images/up-arrow.svg\")}\"]`;\r\n    let bucket = `button.deleteRow.naked>img[src=\"${chrome.runtime.getURL(\"images/trash-can.svg\")}\"]`;\r\n    emmet.appendChild(tr, `(td>${up})+(td>${down})+(td>${bucket})`);\r\n\r\n    tbody.querySelectorAll(\"button.deleteRow\")\r\n        .forEach(btn => btn.addEventListener(\"click\", deleteTableRow));\r\n\r\n    function buildField(label: string, value: string, id: string){\r\n        let attrValue = value ? ` value=\"${value}\"` : \"\";\r\n        return `(td>{${label}})+(td>input-with-spaces#${id}[type=\"text\"${attrValue}])`;\r\n    }\r\n}\r\n\r\nfunction fillTranslationsTable(cloudData: TeacherHoursSetup) {\r\n    let container = document.getElementById(\"translationsContainer\");\r\n    let tbody = container.querySelector(\"table>tbody\") as HTMLTableSectionElement;\r\n    tbody.innerHTML = \"\";\r\n    for (let trns of cloudData.translations) {\r\n        addTranslationRow(trns, tbody);\r\n    }\r\n\r\n    document.querySelectorAll(\"button.moveUp\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", (ev) => {\r\n                let btn = ev.target as HTMLButtonElement;\r\n                let row = btn.closest(\"tr\") as HTMLTableRowElement;\r\n                let prevRow =row.previousElementSibling;\r\n                row.parentElement.insertBefore(row, prevRow);\r\n                hasTableChanged = true;\r\n            }));\r\n    document.querySelectorAll(\"button.moveDown\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", (ev) => {\r\n                let btn = ev.target as HTMLButtonElement;\r\n                let row = btn.closest(\"tr\") as HTMLTableRowElement;\r\n                let nextRow =row.nextElementSibling;\r\n                row.parentElement.insertBefore(nextRow, row);\r\n                hasTableChanged = true;\r\n            }));\r\n    document.querySelectorAll(\"#translationsContainer button.deleteRow\")\r\n        .forEach(btn => btn.addEventListener(\"click\", deleteTableRow));\r\n}\r\n\r\nfunction deleteTableRow(ev: Event) {\r\n    let btn = ev.target as HTMLButtonElement;\r\n    btn.closest(\"tr\").remove();\r\n    hasTableChanged = true;\r\n}\r\n\r\nasync function onData(data: ServiceRequest) {\r\n    document.title = data.pageTitle;\r\n    //test...\r\n    document.querySelector(\"button\").addEventListener(\"click\", async () => {\r\n        await sendRequest(Actions.GreetingsFromChild, TabType.Undefined, TabType.Main, undefined, \"Hullo! Fly safe!\");\r\n    });\r\n\r\n    let dko3Setup = mapHourSettings(data.data as TeacherHoursSetup);\r\n    globalSetup = dko3Setup;\r\n    fillSubjectsTable(dko3Setup);\r\n    fillTranslationsTable(dko3Setup);\r\n    //set change even AFTER filling the tables:\r\n    document.querySelectorAll(\"tbody\").forEach(tbody => tbody.addEventListener(\"change\", (_) => {\r\n        hasTableChanged = true;\r\n    }));\r\n    document.querySelectorAll('tbody').forEach(el => el.addEventListener('input', function (_) {\r\n        hasTableChanged = true;\r\n    }));\r\n    document.getElementById('btnNewTranslationRow').addEventListener('click', function (_) {\r\n        let def: TranslationDef = {\r\n            find: \"\",\r\n            replace: \"\",\r\n            prefix: \"\",\r\n            suffix: \"\"\r\n        }\r\n        addTranslationRow(def, document.querySelector(\"#translationsContainer tbody\"));\r\n        hasTableChanged = true;\r\n    });\r\n\r\n\r\n}\r\n\r\nlet globalSetup: TeacherHoursSetupMapped = undefined;\r\n\r\nlet hasTableChanged = false;\r\n\r\nsetInterval(() => {\r\n    onCheckTableChanged(globalSetup);\r\n}, 2000);\r\n\r\nfunction scrapeSubjects() {\r\n    let rows = document.querySelectorAll(\"#subjectsContainer>table>tbody>tr\") as NodeListOf<HTMLTableRowElement>;\r\n    return [...rows]\r\n        .filter(row => row.cells[0].querySelector(\"input:checked\") !== null || row.cells[2].querySelector(\"input\").value)\r\n        .map(row => {\r\n            return {\r\n                checked: row.cells[0].querySelector(\"input:checked\") !== null,\r\n                name: row.cells[1].textContent,\r\n                alias: row.cells[2].querySelector(\"input\").value,\r\n                stillValid: row.cells[1].classList.contains(\"invalid\") == false\r\n            }\r\n        });\r\n}\r\n\r\nfunction scrapeTranslations(): TranslationDef[] {\r\n    let rows = document.querySelectorAll(\"#translationsContainer>table>tbody>tr\") as NodeListOf<HTMLTableRowElement>;\r\n    return [...rows]\r\n        .map(row => {\r\n            return {\r\n                find: (row.querySelector(\"#trnsFind\") as InputWithSpaces.Type).value,\r\n                replace: (row.querySelector(\"#trnsReplace\") as InputWithSpaces.Type).value,\r\n                prefix: (row.querySelector(\"#trnsPrefix\") as InputWithSpaces.Type).value,\r\n                suffix: (row.querySelector(\"#trnsSuffix\") as InputWithSpaces.Type).value,\r\n            }\r\n        });\r\n}\r\n\r\nfunction onCheckTableChanged(dko3Setup: TeacherHoursSetupMapped) {\r\n    if (!hasTableChanged)\r\n        return;\r\n    let setupData: TeacherHoursSetup = {\r\n        version: 1,\r\n        schoolyear: dko3Setup.schoolyear,\r\n        subjects: scrapeSubjects(),\r\n        translations: scrapeTranslations()\r\n    };\r\n    hasTableChanged = false;\r\n    saveHourSettings(setupData)\r\n        .then(_ => {\r\n            sendRequest(Actions.HoursSettingsChanged, TabType.HoursSettings, TabType.Main, undefined, setupData).then(_ => {});\r\n        });\r\n}\r\n\r\nwindow.onbeforeunload = () => {\r\n    onCheckTableChanged(globalSetup);\r\n}\r\n\r\nfunction switchTab(btn: HTMLButtonElement) {\r\n    let tabId = btn.dataset.tabId;\r\n    let tabs = btn.parentElement;\r\n    tabs.querySelectorAll(\".tab\").forEach((tab: HTMLElement) => {\r\n        tab.classList.add(\"notSelected\");\r\n        document.getElementById(tab.dataset.tabId).style.display = \"none\";\r\n    });\r\n    btn.classList.remove(\"notSelected\");\r\n    document.getElementById(tabId).style.display = \"block\";\r\n}\r\n\r\nfunction onDocumentLoaded(this: Document, _: Event) {\r\n    let tabs = document.querySelector(\".tabs\");\r\n    switchTab(tabs.querySelector(\".tab\"));\r\n    document.querySelectorAll(\".tabs > button.tab\")\r\n        .forEach(btn => btn\r\n            .addEventListener(\"click\", (ev) => {\r\n                switch ((ev.target as HTMLElement).id) {\r\n                    case \"btnTabSubjects\":\r\n                        switchTab(ev.target as HTMLButtonElement);\r\n                        break;\r\n                    case \"btnTabTranslations\":\r\n                        switchTab(ev.target as HTMLButtonElement);\r\n                        break;\r\n                }\r\n            }));\r\n}\r\n"],"mappings":";;;;;IAAY,8CAAL;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;IAEW,8CAAL;AACH;AACA;AACA;AACA;;AACH;AAYM,SAAS,YAAYA,QAAiBC,MAAeC,IAAcC,MAAcC,MAAWC,WAAoB;CACnH,IAAIC,MAAsB;EACtB;EACA;EACA;EACA,eAAe;EACf,eAAe;EACf,aAAa;CAChB;AACD,QAAO,OAAO,QAAQ,YAAY,IAAI;AACzC;AAOM,eAAe,mBAAmBC,QAAiB;CACtD,IAAI,MAAM,MAAM,OAAO,KAAK,YAAY;AACxC,QAAO,MAAM,YAAY,QAAQ,YAAY,QAAQ,QAAQ,mBAAsB,EAAC,OAAO,IAAI,GAAG,EAAC;AACtG;AAeM,SAAS,qBAAqBC,SAAkC;CACnE,IAAIC,YAAiC;EACjC,aAAa,WAAY;GACrB,IAAIC,OAA+B;AACnC,UAAO,eAAe,UAAUC,SAAyB,SAAS,eAAe;AAC7E,YAAQ,KAAK,mBAAmB,QAAQ;AACxC,QAAI,QAAQ,kBAAkB,SAAS;AACnC,UAAK,yBAAyB,QAAQ;KACtC,IAAI,MAAM,MAAM,OAAO,KAAK,YAAY;AACxC,SAAI,QAAQ,gBAAgB,IAAI,GAC5B,MAAK,kBAAkB,QAAQ;IAEtC;GACJ;EACJ;EACD,uBAAuB,SAAUC,UAAyD;AACtF,QAAK,yBAAyB;AAC9B,UAAO;EACV;EACD,gBAAgB,SAAUA,UAAyD;AAC/E,QAAK,kBAAkB;AACvB,UAAO;EACV;EACD,QAAQ,SAAUC,UAA+C;AAC7D,QAAK,UAAU;AACf,UAAO;EACV;EACD;EACA;EACA;CACH;AACD,UAAS,iBAAiB,oBAAoB,YAAY;EACtD,IAAI,MAAM,MAAM,mBAAmB,QAAQ;AAC3C,YAAQ,UAAU,IAAI;CACzB,EAAC;AACF,QAAOC;AACV;;;;MClGY,gBAAgB;MAChB,eAAe;AAIrB,SAAS,SAASC,gBAAwB;CAC7C,IAAIC,SAAmB,CAAE;CACzB,IAAI,MAAM,eAAe,WAAW,OAAO,cAAc,CAAC,WAAW,QAAO,aAAa;CACzF,IAAI,MAAM;CACV,IAAI,QAAQ;CAEZ,SAAS,YAAY;AACjB,MAAI,SAAS,IACT,QAAO,KAAK,IAAI,UAAU,OAAO,IAAI,CAAC;AAC1C,UAAQ;CACX;CAED,SAAS,MAAMC,IAAY;AACvB,aAAW;AACX;AACI;SACK,MAAM,IAAI,UAAU,IAAI,QAAQ;AACzC,MAAI,OAAO,IAAI,OACX,QAAO,WAAW,GAAG,yBAAyB,MAAM;AACxD;AACA,aAAW;CACd;CAED,SAAS,UAAU;AACf,aAAW;AACX;AACA,aAAW;CACd;AAED,QAAO,MAAM,IAAI,OAEb,SAAQ,IAAI,MAAZ;EACI,KAAK;AACD,SAAM,IAAI;AACV;EACJ,KAAK;AACD,SAAM,KAAI;AACV;EACJ,KAAK;AACD,cAAW;AACX;AACA;EACJ,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;AACD,YAAS;AACT;EACJ,KAAK;AACD,cAAW;AACX,WAAQ,EAAE;AACV;EACJ,QACI;CACP;AAEL,YAAW;AACX,QAAO;AACV;;;;IChEU,QAAQ;CACf;CACA;CACA;CACA;CACA;CACA,MAAM;EACF;EACA;CACH;AACJ;AAgCD,IAAIC;AACJ,IAAIC;AAEJ,SAAS,WAAWC,MAAiB;AACjC,OAAK,SAAS,MACV,OAAM;CAEV,IAAI,WAAW;AACf,KAAG,KAAK,IACJ,aAAY,KAAK;AACrB,KAAG,KAAK,GACJ,aAAY,MAAM,KAAK;AAC3B,KAAG,KAAK,UAAU,SAAO,EACrB,aAAY,MAAM,KAAK,UAAU,KAAK,IAAI;AAE9C,QAAO;AACV;AAED,SAAS,OAAOC,MAAcC,SAAqCC,MAA8B;AAC7F,UAAS,SAAS,KAAK;CACvB,IAAI,OAAO,OAAO;CAClB,IAAI,SAAS,SAAS,cAAc,WAAW,KAAK,CAAC;AACrD,KAAG,SAAS,KACR,QAAO,KAAK;KAEZ,OAAM;AAEV,cAAa,QAAQ,MAAM,GAAG,SAAS,KAAK;AAC5C,QAAO;EAAC,MAAM;EAAQ,MAAM;CAAY;AAC3C;AAED,SAAS,OAAOC,MAAmBH,MAAcC,SAAqCC,MAA8B;AAChH,UAAS,SAAS,KAAK;AACvB,QAAO,cAAc,MAAM,SAAS,KAAK;AAC5C;AAED,SAAS,aAAaE,QAAiBJ,MAAcC,SAAqCC,MAA8B;AACpH,QAAO,SAAS,eAAe,QAAQ,MAAM,SAAS,KAAK;AAC9D;AAED,SAAS,YAAYE,QAAiBJ,MAAcC,SAAqCC,MAA8B;AACnH,QAAO,SAAS,YAAY,QAAQ,MAAM,SAAS,KAAK;AAC3D;AAED,SAAS,YAAYG,QAAqBL,MAAcC,SAAqCC,MAA8B;AACvH,QAAO,SAAS,aAAa,QAAQ,MAAM,SAAS,KAAK;AAC5D;AAED,SAAS,SAASI,UAA0BF,QAAiBJ,MAAcC,SAAqCC,MAA8B;AAC1I,UAAS,SAAS,KAAK;CACvB,IAAI,WAAW,SAAS,cAAc,MAAM;CAC5C,IAAI,SAAS,cAAc,UAAU,SAAS,KAAK;CACnD,IAAIK;CACJ,IAAI,YAAY;CAChB,IAAI,WAAW,CAAC,GAAG,SAAS,UAAW;AACvC,MAAI,IAAI,SAAS,SACb,MAAI,MAEA,KAAG,MAAM,aAAa,KAAK,UACvB,SAAQ,YAAY,mBAAmB,QAAQ,UAAW,MAAe,UAAU;KAEnF,SAAQ,YAAY,OAAO,sBAAsB,UAAU,MAAiB;UAG7E,MAAM,aAAa,KAAK,UACvB,aAAY,UAAU,cAAc,aAAa,SAAS,eAAgB,MAAe,UAAU,EAAE,UAAU,YAAY;KAE3H,aAAY,UAAU,cAAc,aAAa,OAAO,UAAU,YAAY;AAG1F,QAAO;EAAC;EAAQ;EAAO,MAAM,OAAO;CAAK;AAC5C;AAED,SAAS,mBAAmBC,QAAcF,UAA0BN,MAAc;AAC9E,SAAO,UAAP;EACI,KAAK,cACD,QAAO,OAAO,cAAc,aAAa,SAAS,eAAe,KAAK,EAAE,OAAO;EACnF,KAAK,aACD,QAAO,OAAO,aAAa,SAAS,eAAe,KAAK,EAAE,OAAO,WAAW;EAChF,KAAK,YACD,QAAO,OAAO,YAAY,SAAS,eAAe,KAAK,CAAC;EAC5D,KAAK,WACD,QAAO,OAAO,cAAc,YAAY,SAAS,eAAe,KAAK,CAAC;CAC7E;AACJ;AAED,SAAS,cAAcG,MAAmBM,SAAoCC,MAA6B;AACvG,cAAa,MAAM,OAAO,EAAE,GAAG,SAAS,KAAK;AAC7C,QAAO;EAAC;EAAM,MAAM;CAAY;AACnC;AAED,SAAS,UAAUV,MAAyB;AACxC,UAAS,SAAS,KAAK;AACvB,QAAO,OAAO;AACjB;AAED,SAAS,QAAQ;AACb,QAAO,WAAW;AACrB;AAGD,SAAS,YAAuB;CAC5B,IAAI,OAAO,CAAE;AACb,QAAM,MAAM;EACR,IAAI,KAAK,WAAW;AACpB,OAAK,GACD,QAAO,KAAK,WAAS,IAAI,KAAK,KAAK,EAAC,KAAK;AAC7C,OAAK,KAAK,GAAG;AACb,OAAI,MAAM,IAAI,CACV,QAAO,KAAK,WAAS,IAAI,KAAK,KAAK,EAAC,KAAK;CAChD;AACJ;AAED,SAAS,YAAwB;CAC7B,IAAI,KAAK,cAAc;AACvB,MAAI,GACA,QAAO;AACX,KAAG,MAAM,IAAI,EAAE;EACX,IAAI,QAAQ,SAAS,OAAO,OAAO,CAAC;AAEpC,SAAQ;GACJ;GACA,OAAO;EACV;CACJ,MACG,QAAO;AAEd;AAGD,SAAS,eAA0B;CAC/B,IAAIW;AACJ,KAAG,MAAM,IAAI,EAAE;AACX,OAAK,WAAW;AAChB,OAAI,MAAM,IAAI,CACV,OAAM;AACV,SAAO;CACV,OAAM;EACH,IAAI,OAAO,gBAAgB,IAAI;AAC/B,MAAI,MAAM;AACN,UAAO,sBAAsB,KAAK;AAClC,UAAgB,EAAC,KAAK;EACzB,MACG,QAAO,eAAe;CAE7B;AACJ;AAGD,SAAS,gBAA4B;CACjC,IAAI,MAAM,OAAO,OAAO;CACxB,IAAI;CACJ,IAAIC,OAAiB,CAAE;CACvB,IAAIC,YAAsB,CAAE;CAC5B,IAAI;AAEJ,QAAM,OAAO,OACT,KAAI,MAAM,IAAI,EAAE;EACZ,IAAI,YAAY,OAAO,OAAO;AAC9B,OAAI,UACA,OAAM;AACV,YAAU,KAAK,UAAU;CAC5B,WAAU,MAAM,IAAI,CACjB,QAAO,eAAe;MACnB;EACH,IAAI,QAAQ,gBAAgB,IAAI;AAChC,MAAG,MACC,MAAK,MAAM,UAAU,EAAE;OACpB;GACH,IAAIC,UAAQ,gBAAgB,IAAI;AAChC,OAAIA,QACA,QAAO,sBAAsBA,QAAM;OAEnC;EAEP;CACJ;AAEL,QAAO;EAAC;EAAK;EAAI;EAAM;EAAW,WAAW;EAAM,OAAO,WAAW;CAAC;AACzE;AAGD,SAAS,YAAwB;AAC7B,KAAG,MAAM,IAAI,CACT,QAAO,WAAW;AAEtB;AACH;AAED,SAAS,gBAAgB;CAErB,IAAIC,SAAmB,CAAE;AACzB,QAAM,OAAO,QAAQ;EACjB,IAAI,OAAO,OAAO,OAAO;AACzB,MAAG,QAAQ,IACP;AACJ,SAAO,KAAK,KAAK;CACpB;CAED,IAAIC,UAAoB,CAAE;AAE1B,QAAM,OAAO,QAAQ;EACjB,IAAI,OAAO,OAAO,OAAO;EACzB,IAAI,KAAK,OAAO,OAAO;EACvB,IAAI,MAAM;AACV,MAAG,OAAO,KAAK;AACX,SAAM,OAAO,OAAO;AACpB,QAAK,OAAO,OAAO;EACtB;AACD,MAAI,MAAM,IACN,OAAM;EAEV,IAAI,QAAQ,OAAO,OAAO;AAC1B,MAAG,MAAM,OAAO,KACZ,SAAQ,sBAAsB,MAAM;AAExC,OAAK,MACD,OAAM;AACN,UAAQ,KAAK;GAAC;GAAM;GAAK;EAAM,EAAC;AACpC,OAAI,OAAO,OACP;CACP;AACD,QAAO;AACV;AAED,SAAS,MAAMC,UAAkB;CAC7B,IAAI,OAAO,OAAO,OAAO;AACzB,KAAG,SAAS,SACR,QAAO;AACX,KAAG,KACC,QAAO,QAAQ,KAAK;AACxB,QAAO;AACV;AAED,SAAS,gBAAgBA,UAAkB;CACvC,IAAI,OAAO,OAAO,OAAO;AACzB,KAAG,KAAK,WAAW,SAAS,CACxB,QAAO;AACX,KAAG,KACC,QAAO,QAAQ,KAAK;AACxB;AACH;AAED,SAAS,sBAAsBjB,MAAc;AACzC,KAAG,KAAK,OAAO,OAAO,KAAK,OAAO,QAAO,KAAK,OAAO,IACjD,QAAO,KAAK,UAAU,GAAG,KAAK,SAAO,EAAE;AAC3C,QAAO;AACV;AAGD,SAAS,cAAckB,QAAiBC,KAAiBC,OAAeX,SAAoCP,MAA8B;CACtI,IAAI,KAAK,OAAO,YAAY,SAAS,cAAc,IAAI,IAAI,CAAC;AAC5D,KAAI,IAAI,GACJ,IAAG,KAAK,SAAS,IAAI,IAAI,OAAO,QAAQ;AAC5C,MAAI,IAAI,SAAS,IAAI,UACjB,IAAG,UAAU,IAAI,SAAS,OAAO,OAAO,QAAQ,CAAC;AAErD,MAAK,IAAI,OAAO,IAAI,KAChB,KAAI,IAAI,IACJ,IAAG,SAAS,IAAI,MAAM,OAAO,QAAQ,EAAE,SAAS,IAAI,KAAK,OAAO,QAAQ,IAAI,SAAS,IAAI,OAAO,OAAO,QAAQ;KAE/G,IAAG,aAAa,SAAS,IAAI,MAAM,OAAO,QAAQ,EAAE,SAAS,IAAI,OAAO,OAAO,QAAQ,CAAC;AAGhG,KAAG,IAAI,UACH,IAAG,YAAY,SAAS,eAAe,SAAS,IAAI,WAAW,OAAO,QAAQ,CAAC,CAAC;AAEpF,eAAc;AACd,KAAG,KACC,MAAK,GAAG;AACZ,QAAO;AACV;AAED,SAAS,aAAagB,QAAiBP,IAAeS,OAAeX,SAAoCP,MAA8B;AACnI,KAAG,SAAS,IAAI;EACZ,IAAI,UAAU,cAAc,QAAQ,IAAI,OAAO,SAAS,KAAK;AAC7D,MAAG,GAAG,MACF,cAAa,SAAS,GAAG,OAAO,OAAO,SAAS,KAAK;AACzD;CACH;AACD,KAAG,UAAU,GACT,MAAK,IAAI,OAAO,GAAG,KACf,cAAa,QAAQ,KAAK,OAAO,SAAS,KAAK;AAGvD,KAAG,WAAW,GACV,MAAI,IAAI,IAAI,GAAG,IAAI,GAAG,OAAO,IACzB,cAAa,QAAQ,GAAG,OAAO,GAAG,SAAS,KAAK;AAGxD,KAAG,UAAU,IAAI;AACb,SAAO,YAAY,SAAS,eAAe,SAAS,GAAG,MAAM,OAAO,QAAQ,CAAC,CAAC;AAC9E;CACH;AACJ;AAED,SAAS,SAASF,MAAcoB,OAAeX,SAAoC;AAC/E,KAAG,SAAS;EACR,IAAI,SAAS,QAAQ,MAAM;AAC3B,SAAO,KAAK,QAAQ,MAAM,OAAO;CACpC;AACD,QAAO,KAAK,QAAQ,KAAK,CAAC,QAAM,GAAG,UAAU,CAAC;AACjD;;;;MC3UY,WAAW;;;;ICfb,QAAQ,EACf,MAAM;CACF,OAAO;CACP,QAAQ;AACX,EACJ;AAED,eAAe,UAAUY,UAAkB;AACvC,QAAO,iBAAqB,eAAa,UAAU,EAAC,QAAQ,MAAM,EAAC,CAC9D,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC;AACjC;AAED,eAAe,WAAWA,UAAkBC,MAAW;CACnD,IAAI,MAAM,MAAM,iBAAqB,eAAe,UAAU;EAC1D,QAAQ;EACR,MAAM,KAAK,UAAU,KAAK;EAC1B,WAAW;CACd,EAAC;AACF,QAAO,MAAM,IAAI,MAAM;AAC1B;;;;;ACmEM;CACI,SAAS,mBAAmB;EAC/B,IAAI,UAAU,SAAS,iBAAiB,SAAS;AACjD,SAAO,MAAM,KAAK,QAAQ,CACrB,OAAO,CAAC,YAAY,QAAQ,GAAG,SAAS,aAAa,CAAC,CACtD,KAAK;CACb;;CAEM,SAAS,sBAAsB;EAClC,IAAI,KAAK,kBAAkB;AAC3B,OAAK,GACD;AACJ,SAAO,MAAM,KAAK,GAAG,iBAAiB,SAAS,CAAC,CAC3C,IAAI,YAAU,OAAO,MAAM,CAC3B,MAAM,CACN,KAAK;CACb;;CAGM,SAAS,aAAa;EACzB,IAAI,KAAK,kBAAkB;AAC3B,MAAI,GACA,QAAO,GAAG;AACd,OAAK,SAAS,cAAc,oBAAoB;AAChD,SAAO,GAAG,YAAY,MAAM,+BAA+B,CAAC;CAC/D;;CAEM,SAAS,mBAAmB;EAC/B,IAAI,MAAM,IAAI;EACd,IAAI,OAAO,IAAI,aAAa;EAC5B,IAAI,QAAQ,IAAI,UAAU;AAC1B,MAAI,QAAQ,EACR,QAAO,OAAO;AAClB,SAAO;CACV;;CAGM,SAAS,aAAaC,WAAmB;AAC5C,UAAQ,EAAE,UAAU,GAAG,YAAY,EAAE;CACxC;;CAGM,SAAS,cAAcA,WAAmB;AAC7C,UAAQ,EAAE,YAAY,IAAK,GAAI,YAAY,MAAQ,EAAE;CACxD;;CAEM,SAAS,UAAUC,kBAA0B;EAChD,IAAI,QAAQ,iBAAiB,MAAM,IAAI,CAAC,IAAI,OAAK,SAAS,EAAE,CAAC;AAC7D,SAAO;GAAC,WAAW,MAAM;GAAI,SAAS,MAAM;EAAG;CAClD;;;;;;AC5GE,SAAS,gBAAgBC,cAAiC;CAC7D,IAAI,SAAS,EAAC,GAAG,aAAa;AAC9B,QAAO,cAAc,IAAI,IAAI,aAAa,SAAS,IAAI,OAAK,CAAC,EAAE,MAAM,CAAE,EAAC;AACxE,QAAO;AACV;AAED,IAAI,qBAAqB;CACrB;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAO,YAAY;CAAK;CAChE;EAAC,SAAU;EAAM,MAAO;EAAa,OAAO;EAAI,YAAY;CAAM;CAClE;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAc,YAAY;CAAM;CAC3E;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAI,YAAY;CAAM;CACjE;EAAC,SAAU;EAAM,MAAO;EAAe,OAAO;EAAI,YAAY;CAAM;CACpE;EAAC,SAAU;EAAM,MAAO;EAAe,OAAO;EAAI,YAAY;CAAM;CACpE;EAAC,SAAU;EAAM,MAAO;EAA+B,OAAO;EAAI,YAAY;CAAM;CACpF;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAI,YAAY;CAAM;CACjE;EAAC,SAAU;EAAM,MAAO;EAA8B,OAAO;EAAI,YAAY;CAAM;CACnF;EAAC,SAAU;EAAM,MAAO;EAAW,OAAO;EAAI,YAAY;CAAM;CAChE;EAAC,SAAU;EAAM,MAAO;EAAmB,OAAO;EAAI,YAAY;CAAM;CACxE;EAAC,SAAU;EAAM,MAAO;EAAmC,OAAO;EAAI,YAAY;CAAM;CACxF;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAI,YAAY;CAAM;CACjE;EAAC,SAAU;EAAM,MAAO;EAA6B,OAAO;EAAI,YAAY;CAAM;CAClF;EAAC,SAAU;EAAM,MAAO;EAAe,OAAO;EAAY,YAAY;CAAM;CAC5E;EAAC,SAAU;EAAM,MAAO;EAAe,OAAO;EAAI,YAAY;CAAM;CACpE;EAAC,SAAU;EAAM,MAAO;EAAW,OAAO;EAAS,YAAY;CAAM;CACrE;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAS,YAAY;CAAM;CACnE;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAI,YAAY;CAAM;CAC9D;EAAC,SAAU;EAAM,MAAO;EAA6B,OAAO;EAAI,YAAY;CAAM;CAClF;EAAC,SAAU;EAAM,MAAO;EAAwB,OAAO;EAAI,YAAY;CAAM;CAC7E;EAAC,SAAU;EAAM,MAAO;EAAc,OAAO;EAAI,YAAY;CAAM;CACnE;EAAC,SAAU;EAAM,MAAO;EAAiB,OAAO;EAAI,YAAY;CAAM;CACtE;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAS,YAAY;CAAM;CACtE;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAI,YAAY;CAAM;CAC9D;EAAC,SAAU;EAAM,MAAO;EAAU,OAAO;EAAI,YAAY;CAAM;CAC/D;EAAC,SAAU;EAAM,MAAO;EAA0B,OAAO;EAAI,YAAY;CAAM;CAC/E;EAAC,SAAU;EAAM,MAAO;EAAQ,OAAO;EAAI,YAAY;CAAM;CAC7D;EAAC,SAAU;EAAM,MAAO;EAAQ,OAAO;EAAI,YAAY;CAAM;CAC7D;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAS,YAAY;CAAM;CACnE;EAAC,SAAU;EAAM,MAAO;EAA4B,OAAO;EAAI,YAAY;CAAM;CACjF;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAI,YAAY;CAAM;CACjE;EAAC,SAAU;EAAM,MAAO;EAAU,OAAO;EAAI,YAAY;CAAM;CAC/D;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAI,YAAY;CAAM;CAC9D;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAI,YAAY;CAAM;CAC9D;EAAC,SAAU;EAAM,MAAO;EAAyB,OAAO;EAAI,YAAY;CAAM;CAC9E;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAI,YAAY;CAAM;CACjE;EAAC,SAAU;EAAM,MAAO;EAAW,OAAO;EAAc,YAAY;CAAM;CAC1E;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAI,YAAY;CAAM;CACjE;EAAC,SAAU;EAAM,MAAO;EAA4B,OAAO;EAAI,YAAY;CAAM;CACjF;EAAC,SAAU;EAAM,MAAO;EAAmB,OAAO;EAAI,YAAY;CAAM;CACxE;EAAC,SAAU;EAAM,MAAO;EAAmC,OAAO;EAAI,YAAY;CAAM;CACxF;EAAC,SAAU;EAAM,MAAO;EAAiB,OAAO;EAAI,YAAY;CAAM;CACtE;EAAC,SAAU;EAAM,MAAO;EAAiC,OAAO;EAAI,YAAY;CAAM;CACtF;EAAC,SAAU;EAAM,MAAO;EAAY,OAAO;EAAS,YAAY;CAAM;CACtE;EAAC,SAAU;EAAM,MAAO;EAAW,OAAO;EAAS,YAAY;CAAM;CACrE;EAAC,SAAU;EAAM,MAAO;EAA2B,OAAO;EAAI,YAAY;CAAM;CAChF;EAAC,SAAU;EAAM,MAAO;EAAqB,OAAO;EAAI,YAAY;CAAM;CAC1E;EAAC,SAAU;EAAM,MAAO;EAAS,OAAO;EAAI,YAAY;CAAM;CAC9D;EAAC,SAAU;EAAM,MAAO;EAAQ,OAAO;EAAI,YAAY;CAAM;CAC7D;EAAC,SAAU;EAAM,MAAO;EAAwB,OAAO;EAAI,YAAY;CAAM;CAC7E;EAAC,SAAU;EAAM,MAAO;EAA2B,OAAO;EAAI,YAAY;CAAM;CAChF;EAAC,SAAU;EAAM,MAAO;EAAkB,OAAO;EAAI,YAAY;CAAM;AAC1E;AAED,IAAI,wBAAwB,IAAI;AAChC,mBAAmB,QAAQ,OAAK,sBAAsB,IAAI,EAAE,MAAM,EAAE,CAAC;AAgE9D,SAAS,2BAA2BC,YAAoB;AAC3D,QAAO,uBAAuB,aAAa;AAC9C;AAEM,eAAe,iBAAiBC,YAA+B;CAClE,IAAI,WAAW,2BAA2B,WAAW,WAAW;AAChE,QAAO,MAAM,KAAK,OAAO,UAAU,WAAW;AACjD;;;;ACnKD,MAAM,WAAW,SAAS,cAAc,WAAW;AACnD,SAAS,aAAa;;;;;;;;;AAUtB,MAAM,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6Cb,SAAS,mBAAmB;CACxB,MAAM,wBAAwB,YAAY;EACtC,WAAW,qBAAqB;AAC5B,UAAO,CAAC,OAAQ;EACnB;EACD;EACA;EACA;EACA,QAAQ;EACR,cAAc;AACV,UAAO;AACP,QAAKC,UAAU,KAAK,aAAa,EAAC,MAAM,SAAS,EAAC;GAClD,IAAI,gBAAgB,IAAI;AACxB,iBAAc,YAAY,IAAI;AAC9B,QAAKA,QAAQ,qBAAqB,CAAC,aAAc;AACjD,QAAKA,QAAQ,OAAO,SAAS,QAAQ,UAAU,KAAK,CAAC;AACrD,QAAK,QAAQ,KAAKA,QAAQ,cAAc,QAAQ;AAChD,QAAK,aAAa,KAAKA,QAAQ,cAAc,iBAAiB;EACjE;EAGD,oBAAoB;AAChB,QAAK,mBAAmB;EAC3B;EAED,yBAAyBC,MAAcC,WAAmBC,UAAkB;AACxE,OAAI,SAAS,SAAS;AAClB,SAAK,MAAM,QAAQ;AACnB,SAAK,SAAS;GACjB;EACJ;EAED,oBAAoB;AAChB,QAAK,MAAM,iBAAiB,SAAS,CAACC,MAAa;AAC/C,SAAK,SAAS;AACd,SAAK,aAAa,SAAS,KAAK,MAAM,MAAM;GAC/C,EAAC;EACL;EAED,UAAU;AACN,QAAK,QAAQ,KAAK,MAAM;GACxB,IAAI,cAAc,KAAK,MAAM,MAAM,MAAM,QAAQ;GACjD,IAAI,eAAe,YAAY,OAAO,WAAS,MAAM;AACrD,QAAK,WAAW,YAAY;AAC5B,QAAK,IAAI,SAAS,cAAc;IAC5B,IAAI,OAAO,KAAK,WAAW,YAAY,SAAS,cAAc,OAAO,CAAC;AACtE,QAAI,MAAM,MAAM,KAAK,IAAI;AACrB,UAAK,UAAU,IAAI,SAAS;AAC5B,UAAK,KAAK,IAAI,QAAQ;IACzB,MACG,MAAK,UAAU,IAAI,OAAO;AAE9B,SAAK,YAAY,MAAM,WAAW,KAAK,SAAS;GACnD;EAEJ;CAEJ;AACD,gBAAe,OAAO,qBAAqB,gBAAgB;AAC9D;AAQM,SAAS,uBAAwB;AACpC,UAAS,iBAAiB,oBAAoB,MAAM;AAAC,oBAAkB;CAAE,EAAC;AAC7E;;;;ACvHD,IAAI,UAAW,qBAAqB,QAAQ,cAAc;AAE1D,sBAAsC;AAEtC,OAAO,QAAQ,UAAU,YAAY,QAAQ,aAAa,CAAC;AAE3D,SAAS,iBAAiB,oBAAoB,iBAAiB;AAE/D,QACK,sBAAsB,SAAO;AAC1B,SAAQ,IAAI,6BAA6B,IAAI;AAC7C,UAAS,eAAe,YAAY,CAAC,YAAY,gCAAgC,IAAI;AACxF,EAAC,CACD,eAAe,SAAO;AACnB,SAAQ,IAAI,oBAAoB,IAAI;AACpC,UAAS,eAAe,YAAY,CAAC,YAAY,UAAU,IAAI;AAClE,EAAC,CACD,OAAO,OAAO;AAEnB,SAAS,kBAAkBC,WAAoC;CAC3D,IAAI,YAAY,SAAS,eAAe,oBAAoB;CAC5D,IAAI,QAAQ,UAAU,cAAc,cAAc;AAClD,OAAM,YAAY;AAClB,MAAK,IAAI,OAAO,UAAU,UAAU;EAChC,IAAI,aAAa;EACjB,IAAI,SAAS;AACb,OAAI,IAAI,YAAY;AAChB,gBAAa;AACb,aAAU,mCAAmC,OAAO,QAAQ,OAAO,uBAAuB,CAAC;EAC9F;EACD,IAAI,iBAAiB;AACrB,MAAI,IAAI,MACJ,mBAAkB,UAAU,IAAI,MAAM;EAC1C,IAAI,mBAAmB;AACvB,MAAI,IAAI,QACJ,qBAAoB;AACxB,QAAM,YAAY,QAAQ,+BAA+B,iBAAiB,QAAQ,WAAW,KAAK,IAAI,KAAK,GAAG,OAAO,0BAA0B,eAAe,GAAG;CACpK;AACD,UAAS,iBAAiB,sCAAsC,CAC3D,QAAQ,SAAO,IACX,iBAAiB,SAAS,eAAe,CAAC;AACtD;AAED,SAAS,kBAAkBC,MAAsBC,OAAgC;CAC7E,IAAI,QAAQ,OACN,WAAW,QAAQ,KAAK,MAAM,WAAW,GACzC,MACA,WAAW,gBAAgB,KAAK,SAAS,cAAc,GACvD,MACA,WAAW,UAAU,KAAK,QAAQ,aAAa,GAC/C,MACA,WAAW,UAAU,KAAK,QAAQ,aAAa;CACrD,IAAI,KAAK,MAAM,YAAY,OAAO,KAAK,CAAC;CACxC,IAAI,MAAM,+BAA+B,OAAO,QAAQ,OAAO,sBAAsB,CAAC;CACtF,IAAI,QAAQ,4CAA4C,OAAO,QAAQ,OAAO,sBAAsB,CAAC;CACrG,IAAI,UAAU,kCAAkC,OAAO,QAAQ,OAAO,uBAAuB,CAAC;AAC9F,OAAM,YAAY,KAAK,MAAM,GAAG,QAAQ,KAAK,QAAQ,OAAO,GAAG;AAE/D,OAAM,iBAAiB,mBAAmB,CACrC,QAAQ,SAAO,IAAI,iBAAiB,SAAS,eAAe,CAAC;CAElE,SAAS,WAAWC,OAAeC,OAAeC,IAAW;EACzD,IAAI,YAAY,SAAS,UAAU,MAAM,KAAK;AAC9C,UAAQ,OAAO,MAAM,2BAA2B,GAAG,cAAc,UAAU;CAC9E;AACJ;AAED,SAAS,sBAAsBC,WAA8B;CACzD,IAAI,YAAY,SAAS,eAAe,wBAAwB;CAChE,IAAI,QAAQ,UAAU,cAAc,cAAc;AAClD,OAAM,YAAY;AAClB,MAAK,IAAI,QAAQ,UAAU,aACvB,mBAAkB,MAAM,MAAM;AAGlC,UAAS,iBAAiB,gBAAgB,CACrC,QAAQ,SAAO,IACX,iBAAiB,SAAS,CAAC,OAAO;EAC/B,IAAIC,QAAM,GAAG;EACb,IAAI,MAAM,MAAI,QAAQ,KAAK;EAC3B,IAAI,UAAS,IAAI;AACjB,MAAI,cAAc,aAAa,KAAK,QAAQ;AAC5C,oBAAkB;CACrB,EAAC,CAAC;AACX,UAAS,iBAAiB,kBAAkB,CACvC,QAAQ,SAAO,IACX,iBAAiB,SAAS,CAAC,OAAO;EAC/B,IAAIA,QAAM,GAAG;EACb,IAAI,MAAM,MAAI,QAAQ,KAAK;EAC3B,IAAI,UAAS,IAAI;AACjB,MAAI,cAAc,aAAa,SAAS,IAAI;AAC5C,oBAAkB;CACrB,EAAC,CAAC;AACX,UAAS,iBAAiB,0CAA0C,CAC/D,QAAQ,SAAO,IAAI,iBAAiB,SAAS,eAAe,CAAC;AACrE;AAED,SAAS,eAAeC,IAAW;CAC/B,IAAI,MAAM,GAAG;AACb,KAAI,QAAQ,KAAK,CAAC,QAAQ;AAC1B,mBAAkB;AACrB;AAED,eAAe,OAAOC,MAAsB;AACxC,UAAS,QAAQ,KAAK;AAEtB,UAAS,cAAc,SAAS,CAAC,iBAAiB,SAAS,YAAY;AACnE,QAAM,YAAY,QAAQ,oBAAoB,QAAQ,WAAW,QAAQ,cAAiB,mBAAmB;CAChH,EAAC;CAEF,IAAI,YAAY,gBAAgB,KAAK,KAA0B;AAC/D,eAAc;AACd,mBAAkB,UAAU;AAC5B,uBAAsB,UAAU;AAEhC,UAAS,iBAAiB,QAAQ,CAAC,QAAQ,WAAS,MAAM,iBAAiB,UAAU,CAAC,MAAM;AACxF,oBAAkB;CACrB,EAAC,CAAC;AACH,UAAS,iBAAiB,QAAQ,CAAC,QAAQ,QAAM,GAAG,iBAAiB,SAAS,SAAU,GAAG;AACvF,oBAAkB;CACrB,EAAC,CAAC;AACH,UAAS,eAAe,uBAAuB,CAAC,iBAAiB,SAAS,SAAU,GAAG;EACnF,IAAIC,MAAsB;GACtB,MAAM;GACN,SAAS;GACT,QAAQ;GACR,QAAQ;EACX;AACD,oBAAkB,KAAK,SAAS,cAAc,+BAA+B,CAAC;AAC9E,oBAAkB;CACrB,EAAC;AAGL;AAED,IAAIC;AAEJ,IAAI,kBAAkB;AAEtB,YAAY,MAAM;AACd,qBAAoB,YAAY;AACnC,GAAE,IAAK;AAER,SAAS,iBAAiB;CACtB,IAAI,OAAO,SAAS,iBAAiB,oCAAoC;AACzE,QAAO,CAAC,GAAG,IAAK,EACX,OAAO,SAAO,IAAI,MAAM,GAAG,cAAc,gBAAgB,KAAK,QAAQ,IAAI,MAAM,GAAG,cAAc,QAAQ,CAAC,MAAM,CAChH,IAAI,SAAO;AACR,SAAO;GACH,SAAS,IAAI,MAAM,GAAG,cAAc,gBAAgB,KAAK;GACzD,MAAM,IAAI,MAAM,GAAG;GACnB,OAAO,IAAI,MAAM,GAAG,cAAc,QAAQ,CAAC;GAC3C,YAAY,IAAI,MAAM,GAAG,UAAU,SAAS,UAAU,IAAI;EAC7D;CACJ,EAAC;AACT;AAED,SAAS,qBAAuC;CAC5C,IAAI,OAAO,SAAS,iBAAiB,wCAAwC;AAC7E,QAAO,CAAC,GAAG,IAAK,EACX,IAAI,SAAO;AACR,SAAO;GACH,MAAO,IAAI,cAAc,YAAY,CAA0B;GAC/D,SAAU,IAAI,cAAc,eAAe,CAA0B;GACrE,QAAS,IAAI,cAAc,cAAc,CAA0B;GACnE,QAAS,IAAI,cAAc,cAAc,CAA0B;EACtE;CACJ,EAAC;AACT;AAED,SAAS,oBAAoBX,WAAoC;AAC7D,MAAK,gBACD;CACJ,IAAIY,YAA+B;EAC/B,SAAS;EACT,YAAY,UAAU;EACtB,UAAU,gBAAgB;EAC1B,cAAc,oBAAoB;CACrC;AACD,mBAAkB;AAClB,kBAAiB,UAAU,CACtB,KAAK,OAAK;AACP,cAAY,QAAQ,sBAAsB,QAAQ,eAAe,QAAQ,cAAiB,UAAU,CAAC,KAAK,SAAK,CAAE,EAAC;CACrH,EAAC;AACT;AAED,OAAO,iBAAiB,MAAM;AAC1B,qBAAoB,YAAY;AACnC;AAED,SAAS,UAAUC,KAAwB;CACvC,IAAI,QAAQ,IAAI,QAAQ;CACxB,IAAI,OAAO,IAAI;AACf,MAAK,iBAAiB,OAAO,CAAC,QAAQ,CAACC,QAAqB;AACxD,MAAI,UAAU,IAAI,cAAc;AAChC,WAAS,eAAe,IAAI,QAAQ,MAAM,CAAC,MAAM,UAAU;CAC9D,EAAC;AACF,KAAI,UAAU,OAAO,cAAc;AACnC,UAAS,eAAe,MAAM,CAAC,MAAM,UAAU;AAClD;AAED,SAAS,iBAAiCC,GAAU;CAChD,IAAI,OAAO,SAAS,cAAc,QAAQ;AAC1C,WAAU,KAAK,cAAc,OAAO,CAAC;AACrC,UAAS,iBAAiB,qBAAqB,CAC1C,QAAQ,SAAO,IACX,iBAAiB,SAAS,CAAC,OAAO;AAC/B,UAAS,GAAG,OAAuB,IAAnC;GACI,KAAK;AACD,cAAU,GAAG,OAA4B;AACzC;GACJ,KAAK;AACD,cAAU,GAAG,OAA4B;AACzC;EACP;CACJ,EAAC,CAAC;AACd"}
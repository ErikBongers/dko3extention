{"version":3,"file":"options_page.js","names":["textToTokenize: string","tokens: string[]","to: string","nested: string[]","lastCreated: Element","node: EmmetNode","text: string","onIndex?: (index: number) => string","hook?: (el: Element) => void","root: HTMLElement","target: Element","parent: HTMLElement","position: InsertPosition","first: Node","target: Node","onIndex: (index: number) => string","hook: (el: Element) => void","el: EmmetNode","atts: AttDef[]","classList: string[]","token","tokens: string[]","attDefs: AttDef[]","expected: string","parent: Element","def: ElementDef","index: number","fileName: string","data: any","options: Options","id: string","property: string","label: string","blockId: string","globalSettings: GlobalSettings","globalSettings","defaultSettings: GlobalSettings","ev: KeyboardEvent","hide: boolean","globalSettings"],"sources":["../libs/Emmeter/tokenizer.ts","../libs/Emmeter/html.ts","../typescript/def.ts","../typescript/cloud.ts","../typescript/plugin_options/options.ts","../typescript/plugin_options/options_page.ts"],"sourcesContent":["export const CLOSING_BRACE = \"__CLOSINGBRACE__\";\r\nexport const DOUBLE_QUOTE = \"__DOUBLEQUOTE__\";\r\n\r\nexport const NBSP = 160;\r\n\r\nexport function tokenize(textToTokenize: string) {\r\n    let tokens: string[] = [];\r\n    let txt = textToTokenize.replaceAll(\"\\\\}\", CLOSING_BRACE).replaceAll('\\\\\"', DOUBLE_QUOTE);\r\n    let pos = 0;\r\n    let start = pos;\r\n\r\n    function pushToken() {\r\n        if (start != pos)\r\n            tokens.push(txt.substring(start, pos));\r\n        start = pos;\r\n    }\r\n\r\n    function getTo(to: string) {\r\n        pushToken();\r\n        do {\r\n            pos++;\r\n        } while (pos < txt.length && txt[pos] != to);\r\n        if (pos >= txt.length)\r\n            throw `Missing '${to}' at matching from pos ${start}.`;\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    function getChar() {\r\n        pushToken();\r\n        pos++;\r\n        pushToken();\r\n    }\r\n\r\n    while (pos < txt.length) {\r\n        //only test for special chars. All others are assumed alphanumeric\r\n        switch (txt[pos]) {\r\n            case '{':\r\n                getTo(\"}\");\r\n                break;\r\n            case '\"':\r\n                getTo('\"');\r\n                break;\r\n            case '#':\r\n                pushToken();\r\n                pos++;\r\n                break;\r\n            case '>':\r\n            case '+':\r\n            case '[':\r\n            case ']':\r\n            case '(':\r\n            case ')':\r\n            case '*':\r\n            case '.':\r\n            case '=':\r\n                getChar();\r\n                break;\r\n            case ' ':\r\n                pushToken();\r\n                start = ++pos;\r\n                break;\r\n            default:\r\n                pos++;\r\n        }\r\n    }\r\n    pushToken();\r\n    return tokens;\r\n}","// noinspection JSUnusedGlobalSymbols\r\nimport {tokenize} from \"./tokenizer\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport let emmet = {\r\n    create,\r\n    append,\r\n    insertBefore,\r\n    insertAfter,\r\n    appendChild,\r\n    test: {\r\n        testEmmet,\r\n        tokenize,\r\n    }\r\n};\r\n\r\nexport interface AttDef {\r\n    name: string,\r\n    sub: string,\r\n    value: string\r\n}\r\n\r\nexport interface GroupDef {\r\n    count: number,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface ListDef {\r\n    list: EmmetNode[];\r\n}\r\n\r\nexport interface ElementDef {\r\n    tag: string,\r\n    id: string,\r\n    atts: AttDef[]\r\n    classList: string[],\r\n    innerText: string,\r\n    child: EmmetNode\r\n}\r\n\r\nexport interface TextDef {\r\n    text: string\r\n}\r\n\r\nexport type EmmetNode = GroupDef | ElementDef | ListDef | TextDef;\r\n\r\nlet nested: string[] = undefined;\r\nlet lastCreated: Element = undefined;\r\n\r\nfunction toSelector(node: EmmetNode) {\r\n    if(!('tag' in node)) {\r\n        throw \"TODO: not yet implemented.\";\r\n    }\r\n    let selector = \"\";\r\n    if(node.tag)\r\n        selector += node.tag;\r\n    if(node.id)\r\n        selector += \"#\" + node.id;\r\n    if(node.classList.length>0) {\r\n        selector += \".\" + node.classList.join(\".\");\r\n    }\r\n    return selector;\r\n}\r\n\r\nfunction create(text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let root = parse();\r\n    let parent = document.querySelector(toSelector(root)) as Element;\r\n    if(\"tag\" in root) {\r\n        root = root.child;\r\n    } else {\r\n        throw \"root should be a single element.\";\r\n    }\r\n    buildElement(parent, root, 1, onIndex, hook);\r\n    return {root: parent, last: lastCreated};\r\n}\r\n\r\nfunction append(root: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    return parseAndBuild(root, onIndex, hook);\r\n}\r\n\r\nfunction insertBefore(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforebegin\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAfter(target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"afterend\", target, text, onIndex, hook);\r\n}\r\n\r\nfunction appendChild(parent: HTMLElement, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    return insertAt(\"beforeend\", parent, text, onIndex, hook);\r\n}\r\n\r\nfunction insertAt(position: InsertPosition, target: Element, text: string, onIndex?: (index: number) => string, hook?: (el: Element) => void) {\r\n    nested = tokenize(text);\r\n    let tempRoot = document.createElement(\"div\");\r\n    let result = parseAndBuild(tempRoot, onIndex, hook);\r\n    let first: Node = undefined;\r\n    let insertPos = target as Node;\r\n    let children = [...tempRoot.childNodes]; //we'll be removing children from tempRoot, so copy the list.\r\n    for(let child of children) {\r\n        if(!first) {\r\n            //first element should be inserted at the specified position\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                first = insertPos = insertAdjacentText(target, position, (child as Text).wholeText);\r\n            else\r\n                first = insertPos = target.insertAdjacentElement(position, child as Element);\r\n        } else {\r\n            //consequent children should be inserted after the previous one.\r\n            if(child.nodeType === Node.TEXT_NODE)\r\n                insertPos = insertPos.parentElement.insertBefore(document.createTextNode((child as Text).wholeText), insertPos.nextSibling);\r\n            else\r\n                insertPos = insertPos.parentElement.insertBefore(child, insertPos.nextSibling);\r\n        }\r\n    }\r\n    return {target, first, last: result.last};\r\n}\r\n\r\nfunction insertAdjacentText(target: Node, position: InsertPosition, text: string) {\r\n    switch(position) {\r\n        case \"beforebegin\": // Before the element itself.\r\n            return target.parentElement.insertBefore(document.createTextNode(text), target);\r\n        case \"afterbegin\": // Just inside the element, before its first child.\r\n            return target.insertBefore(document.createTextNode(text), target.firstChild);\r\n        case \"beforeend\": // Just inside the element, after its last child.\r\n            return target.appendChild(document.createTextNode(text));\r\n        case \"afterend\": // After the element itself.\r\n            return target.parentElement.appendChild(document.createTextNode(text));\r\n    }\r\n}\r\n\r\nfunction parseAndBuild(root: HTMLElement, onIndex: (index: number) => string, hook: (el: Element) => void) {\r\n    buildElement(root, parse(), 1, onIndex, hook);\r\n    return {root, last: lastCreated};\r\n}\r\n\r\nfunction testEmmet(text: string): EmmetNode {\r\n    nested = tokenize(text);\r\n    return parse();\r\n}\r\n\r\nfunction parse() {\r\n    return parsePlus() ;\r\n}\r\n\r\n//parse a+b+c>d...\r\nfunction parsePlus(): EmmetNode {\r\n    let list = [];\r\n    while(true) {\r\n        let el = parseMult();\r\n        if (!el)\r\n            return list.length===1 ? list[0] : {list};\r\n        list.push(el)\r\n        if(!match('+'))\r\n            return list.length===1 ? list[0] : {list};\r\n    }\r\n}\r\n\r\nfunction parseMult() : EmmetNode {\r\n    let el = parseElement();\r\n    if(!el)\r\n        return el;\r\n    if(match('*')) {\r\n        let count = parseInt(nested.shift());\r\n        //wrap el in a count group.\r\n        return  {\r\n            count,\r\n            child: el\r\n        };\r\n    } else {\r\n        return el;\r\n    }\r\n}\r\n\r\n// parse group or primary element (and children)\r\nfunction parseElement(): EmmetNode {\r\n    let el: EmmetNode;\r\n    if(match('(')) {\r\n        el = parsePlus();\r\n        if(!match(\")\"))\r\n            throw \"Expected ')'\";\r\n        return el;\r\n    } else {\r\n        let text = matchStartsWith('{');\r\n        if (text) {\r\n            text = stripStringDelimiters(text);\r\n            return <TextDef>{text};\r\n        } else {\r\n            return parseChildDef();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction parseChildDef(): ElementDef {\r\n    let tag = nested.shift();\r\n    let id = undefined;\r\n    let atts: AttDef[] = [];\r\n    let classList: string[] = [];\r\n    let text = undefined;\r\n\r\n    while(nested.length) {\r\n        if (match('.')) {\r\n            let className = nested.shift();\r\n            if(!className)\r\n                throw \"Unexpected end of stream. Class name expected.\";\r\n            classList.push(className);\r\n        } else if (match('[')) {\r\n            atts = getAttributes();\r\n        } else {\r\n            let token = matchStartsWith('#');\r\n            if(token) {\r\n                id = token.substring(1);\r\n            } else {\r\n                let token = matchStartsWith('{')\r\n                if (token) {\r\n                    text = stripStringDelimiters(token);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {tag, id, atts, classList, innerText: text, child: parseDown()};\r\n}\r\n\r\n// parse >...\r\nfunction parseDown() : EmmetNode {\r\n    if(match('>')) {\r\n        return parsePlus();\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getAttributes() {\r\n    //gather all the attributes\r\n    let tokens: string[] = [];\r\n    while(nested.length) {\r\n        let prop = nested.shift();\r\n        if(prop == ']')\r\n            break;\r\n        tokens.push(prop);\r\n    }\r\n\r\n    let attDefs: AttDef[] = [];\r\n\r\n    while(tokens.length) {\r\n        let name = tokens.shift();\r\n        let eq = tokens.shift();\r\n        let sub = \"\";\r\n        if(eq === '.') {\r\n            sub = tokens.shift();\r\n            eq = tokens.shift();\r\n        }\r\n        if (eq != '=') {\r\n            throw \"Equal sign expected.\";\r\n        }\r\n        let value = tokens.shift();\r\n        if(value[0] === '\"') {\r\n            value = stripStringDelimiters(value);\r\n        }\r\n        if (!value)\r\n            throw \"Value expected.\";\r\n            attDefs.push({name, sub, value});\r\n        if(!tokens.length)\r\n            break;\r\n    }\r\n    return attDefs;\r\n}\r\n\r\nfunction match(expected: string) {\r\n    let next = nested.shift();\r\n    if(next === expected)\r\n        return true;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return false;\r\n}\r\n\r\nfunction matchStartsWith(expected: string) {\r\n    let next = nested.shift();\r\n    if(next.startsWith(expected))\r\n        return next;\r\n    if(next)\r\n        nested.unshift(next);\r\n    return undefined;\r\n}\r\n\r\nfunction stripStringDelimiters(text: string) {\r\n    if(text[0] === \"'\" || text[0] === '\"' || text[0] === '{')\r\n        return text.substring(1, text.length-1);\r\n    return text;\r\n}\r\n\r\n//CREATION\r\nfunction createElement(parent: Element, def: ElementDef, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    let el = parent.appendChild(document.createElement(def.tag));\r\n    if (def.id)\r\n        el.id = addIndex(def.id, index, onIndex);\r\n    for(let clazz of def.classList) {\r\n        el.classList.add(addIndex(clazz, index, onIndex));\r\n    }\r\n    for (let att of def.atts) {\r\n        if (att.sub)\r\n            el[addIndex(att.name, index, onIndex)][addIndex(att.sub, index, onIndex)] = addIndex(att.value, index, onIndex);\r\n        else {\r\n            el.setAttribute(addIndex(att.name, index, onIndex), addIndex(att.value, index, onIndex));\r\n        }\r\n    }\r\n    if(def.innerText) {\r\n        el.appendChild(document.createTextNode(addIndex(def.innerText, index, onIndex)));\r\n    }\r\n    lastCreated = el;\r\n    if(hook)\r\n        hook(el);\r\n    return el;\r\n}\r\n\r\nfunction buildElement(parent: Element, el: EmmetNode, index: number, onIndex: (index: number) => string, hook?: (el: Element) => void) {\r\n    if(\"tag\" in el) { //ElementDef\r\n        let created = createElement(parent, el, index, onIndex, hook);\r\n        if(el.child)\r\n            buildElement(created, el.child, index, onIndex, hook);\r\n        return;\r\n    }\r\n    if(\"list\" in el) { //ListDef\r\n        for( let def of el.list) {\r\n            buildElement(parent, def, index, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"count\" in el) { //GroupDef\r\n        for(let i = 0; i < el.count; i++) {\r\n            buildElement(parent, el.child, i, onIndex, hook);\r\n        }\r\n    }\r\n    if(\"text\" in el) { //TextDef\r\n        parent.appendChild(document.createTextNode(addIndex(el.text, index, onIndex)));\r\n        return;\r\n    }\r\n}\r\n\r\nfunction addIndex(text: string, index: number, onIndex: (index: number) => string) {\r\n    if(onIndex) {\r\n        let result = onIndex(index);\r\n        text = text.replace(\"$$\", result);\r\n    }\r\n    return text.replace(\"$\", (index+1).toString());\r\n}","export const COPY_AGAIN = \"copy_again\";\r\nexport const PROGRESS_BAR_ID = \"progressBarFetch\";\r\nexport const UREN_PREV_BTN_ID = \"prefillInstrButton\";\r\nexport const UREN_PREV_SETUP_BTN_ID = \"prefillInstrSetupButton\";\r\nexport const UREN_NEXT_BTN_ID = \"prefillInstrButtonNext\";\r\nexport const UREN_NEXT_SETUP_BTN_ID = \"prefillInstrSetupButtonNext\";\r\nexport const MAIL_BTN_ID = \"mailButton\";\r\nexport const DOWNLOAD_TABLE_BTN_ID = \"downloadTableButton\";\r\nexport const COPY_TABLE_BTN_ID = \"copyTableButton\";\r\nexport const LESSEN_OVERZICHT_ID = \"lessen_overzicht\";\r\nexport const TRIM_BUTTON_ID = \"moduleButton\";\r\nexport const CHECKS_BUTTON_ID = \"checksButton\";\r\nexport const COUNT_BUTTON_ID = \"fetchAllButton\";\r\nexport const FULL_CLASS_BUTTON_ID = \"fullClassButton\";\r\nexport const TRIM_TABLE_ID = \"trimesterTable\";\r\nexport const COUNT_TABLE_ID = \"werklijst_uren\";\r\nexport const TRIM_DIV_ID = \"trimesterDiv\";\r\nexport const JSON_URL = \"https://europe-west1-ebo-tain.cloudfunctions.net/json\";\r\nexport const INFO_CONTAINER_ID =  \"dp3p_infoContainer\";\r\nexport const INFO_CACHE_ID =  \"dp3p_cacheInfo\";\r\nexport const INFO_TEMP_ID =  \"dp3_tempInfo\";\r\nexport const INFO_EXTRA_ID =  \"dp3_extraInfo\";\r\nexport const AANW_LIST =  \"aanwezighedenList\";\r\nexport const GLOBAL_SETTINGS_FILENAME =  \"global_settings.json\";\r\nexport const CACHE_DATE_SUFFIX = \"__date\";\r\nexport const POWER_QUERY_ID = \"savedPowerQuery\";\r\nexport const STORAGE_GOTO_STATE_KEY = \"gotoState\";\r\nexport const STORAGE_PAGE_SETTINGS_KEY_PREFIX = \"pageSettings_\";\r\nexport const UREN_TABLE_STATE_NAME = \"__uren__\";\r\nexport const CAN_SORT = \"canSort\";\r\nexport const NO_MENU = \"noMenu\";\r\nexport const LESSEN_TABLE_ID = \"table_lessen_resultaat_tabel\";\r\nexport const FILTER_INFO_ID = \"filterInfo\";\r\nexport const GLOBAL_COMMAND_BUFFER_KEY = \"globalCmdBuffer\";","import * as def from \"./def\";\r\n\r\nexport let cloud = {\r\n    json: {\r\n        fetch: fetchJson,\r\n        upload: uploadJson\r\n    }\r\n};\r\n\r\nasync function fetchJson(fileName: string) {\r\n    return fetch(def.JSON_URL + \"?fileName=\"+fileName, {method: \"GET\"})\r\n        .then((res) => res.json());\r\n}\r\n\r\nasync function uploadJson(fileName: string, data: any) {\r\n    let res = await fetch(def.JSON_URL + \"?fileName=\" + fileName, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        keepalive: true, //keeps the data valid even if window is closing.\r\n    });\r\n    return await res.text();\r\n}","import {cloud} from \"../cloud\";\r\nimport {GLOBAL_SETTINGS_FILENAME} from \"../def\";\r\n\r\nexport type Options = {\r\n    showNotAssignedClasses: boolean;\r\n    showTableHeaders: boolean;\r\n    markOtherAcademies: boolean;\r\n    myAcademies: string;\r\n    showDebug: boolean;\r\n};\r\n\r\nexport const options: Options = {\r\n    myAcademies: \"\",\r\n    showNotAssignedClasses: true,\r\n    showTableHeaders: true,\r\n    markOtherAcademies: true,\r\n    showDebug: false\r\n};\r\n\r\nexport function defineHtmlOptions() {\r\n    defineHtmlOption(\"showNotAssignedClasses\", 'checked', \"Toon arcering voor niet toegewezen klassikale lessen.\", \"block1\");\r\n    defineHtmlOption(\"showTableHeaders\", 'checked', \"Toon keuzemenus in tabelhoofding.\", \"block1\");\r\n    defineHtmlOption(\"markOtherAcademies\", 'checked', \"Toon arcering voor 'andere' academies.\", \"block1\");\r\n    defineHtmlOption(\"myAcademies\", 'value', undefined, undefined);\r\n    defineHtmlOption(\"showDebug\", 'checked', \"Show debug info in console.\", \"block3\");\r\n}\r\n\r\ntype OptionDef = {\r\n    id: string,\r\n    property: string,\r\n    label: string,\r\n    blockId: string\r\n}\r\n\r\nexport let htmlOptionDefs = new Map<string, OptionDef>();\r\n\r\nexport function defineHtmlOption(id: string, property: string, label: string, blockId: string) {\r\n    htmlOptionDefs.set(id, {id, property, label, blockId});\r\n\r\n}\r\n\r\nexport interface GlobalSettings {\r\n    globalHide: boolean\r\n}\r\n\r\nexport let globalSettings: GlobalSettings = {\r\n    globalHide: false\r\n}\r\n\r\nexport function getGlobalSettings() {\r\n    return globalSettings;\r\n}\r\n\r\nexport function setGlobalSetting(settings: GlobalSettings) {\r\n    globalSettings = settings;\r\n}\r\n\r\nexport async function saveGlobalSettings(globalSettings: GlobalSettings) {\r\n    return cloud.json.upload(GLOBAL_SETTINGS_FILENAME, globalSettings);\r\n}\r\n\r\nexport async function fetchGlobalSettings(defaultSettings: GlobalSettings) {\r\n    return await cloud.json.fetch(GLOBAL_SETTINGS_FILENAME)\r\n        .catch(err => {\r\n            console.log(err);\r\n            return defaultSettings;\r\n        }) as GlobalSettings;\r\n}\r\n\r\n","import {emmet} from \"../../libs/Emmeter/html\";\r\nimport {defineHtmlOptions, fetchGlobalSettings, getGlobalSettings, htmlOptionDefs, options, saveGlobalSettings} from \"./options\";\r\n\r\ndefineHtmlOptions();\r\ndocument.body.addEventListener(\"keydown\", onKeyDown);\r\n\r\nfunction onKeyDown(ev: KeyboardEvent) {\r\n    if (ev.key === \"h\" && ev.altKey && !ev.shiftKey && !ev.ctrlKey) {\r\n        ev.preventDefault();\r\n        let answer = prompt(\"Verberg plugin bij iedereen?\");\r\n        saveHide(answer === \"hide\")\r\n            .then(() => saveOptionsFromGui());\r\n    }\r\n}\r\n\r\nasync function saveHide(hide: boolean) {\r\n    let globalSettings = await fetchGlobalSettings(getGlobalSettings());\r\n    globalSettings.globalHide = hide;\r\n    await saveGlobalSettings(globalSettings);\r\n    console.log(\"Global settings saved.\");\r\n}\r\n\r\nconst saveOptionsFromGui = () => {\r\n    let newOptions = {\r\n        touched: Date.now() // needed to trigger the storage changed event.\r\n    };\r\n    for (let option of htmlOptionDefs.values()) {\r\n        newOptions[option.id] = document.getElementById(option.id)[option.property];\r\n\r\n    }\r\n    // @ts-ignore\r\n    chrome.storage.sync.set(\r\n        newOptions, () => {\r\n            // Update status to let user know options were saved.\r\n            const status = document.getElementById('status');\r\n            status.textContent = 'Opties bewaard.';\r\n            setTimeout(() => {\r\n                status.textContent = '';\r\n            }, 750);\r\n        }\r\n    );\r\n\r\n};\r\n\r\nasync function restoreOptionsToGui(){\r\n    let items = await chrome.storage.sync.get(null); //get all\r\n    Object.assign(options, items);\r\n    for (const [key, value] of Object.entries(options)) {\r\n        let optionDef = htmlOptionDefs.get(key);\r\n        if(!optionDef)\r\n            continue; //no GUI for this option.\r\n        document.getElementById(optionDef.id)[optionDef.property] = value;\r\n    }\r\n}\r\n\r\nasync function fillOptionsInGui() {\r\n    for(let optiondDef of htmlOptionDefs.values()){\r\n        if(!optiondDef.blockId)\r\n            continue;\r\n        let block = document.getElementById(optiondDef.blockId);\r\n        emmet.appendChild(block, `label>input#${optiondDef.id}[type=\"checkbox\"]+{${optiondDef.label}}`);\r\n    }\r\n    await restoreOptionsToGui();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', fillOptionsInGui);\r\ndocument.getElementById('save').addEventListener('click', saveOptionsFromGui);"],"mappings":";;;;;AAAA,MAAa,gBAAgB;AAC7B,MAAa,eAAe;AAI5B,SAAgB,SAASA,gBAAwB;CAC7C,IAAIC,SAAmB,CAAE;CACzB,IAAI,MAAM,eAAe,WAAW,OAAO,cAAc,CAAC,WAAW,QAAO,aAAa;CACzF,IAAI,MAAM;CACV,IAAI,QAAQ;CAEZ,SAAS,YAAY;AACjB,MAAI,SAAS,IACT,QAAO,KAAK,IAAI,UAAU,OAAO,IAAI,CAAC;AAC1C,UAAQ;CACX;CAED,SAAS,MAAMC,IAAY;AACvB,aAAW;AACX;AACI;SACK,MAAM,IAAI,UAAU,IAAI,QAAQ;AACzC,MAAI,OAAO,IAAI,OACX,QAAO,WAAW,GAAG,yBAAyB,MAAM;AACxD;AACA,aAAW;CACd;CAED,SAAS,UAAU;AACf,aAAW;AACX;AACA,aAAW;CACd;AAED,QAAO,MAAM,IAAI,OAEb,SAAQ,IAAI,MAAZ;EACI,KAAK;AACD,SAAM,IAAI;AACV;EACJ,KAAK;AACD,SAAM,KAAI;AACV;EACJ,KAAK;AACD,cAAW;AACX;AACA;EACJ,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;AACD,YAAS;AACT;EACJ,KAAK;AACD,cAAW;AACX,WAAQ,EAAE;AACV;EACJ,QACI;CACP;AAEL,YAAW;AACX,QAAO;AACV;;;;AChED,IAAW,QAAQ;CACf;CACA;CACA;CACA;CACA;CACA,MAAM;EACF;EACA;CACH;AACJ;AAgCD,IAAIC;AACJ,IAAIC;AAEJ,SAAS,WAAWC,MAAiB;AACjC,OAAK,SAAS,MACV,OAAM;CAEV,IAAI,WAAW;AACf,KAAG,KAAK,IACJ,aAAY,KAAK;AACrB,KAAG,KAAK,GACJ,aAAY,MAAM,KAAK;AAC3B,KAAG,KAAK,UAAU,SAAO,EACrB,aAAY,MAAM,KAAK,UAAU,KAAK,IAAI;AAE9C,QAAO;AACV;AAED,SAAS,OAAOC,MAAcC,SAAqCC,MAA8B;AAC7F,UAAS,SAAS,KAAK;CACvB,IAAI,OAAO,OAAO;CAClB,IAAI,SAAS,SAAS,cAAc,WAAW,KAAK,CAAC;AACrD,KAAG,SAAS,KACR,QAAO,KAAK;KAEZ,OAAM;AAEV,cAAa,QAAQ,MAAM,GAAG,SAAS,KAAK;AAC5C,QAAO;EAAC,MAAM;EAAQ,MAAM;CAAY;AAC3C;AAED,SAAS,OAAOC,MAAmBH,MAAcC,SAAqCC,MAA8B;AAChH,UAAS,SAAS,KAAK;AACvB,QAAO,cAAc,MAAM,SAAS,KAAK;AAC5C;AAED,SAAS,aAAaE,QAAiBJ,MAAcC,SAAqCC,MAA8B;AACpH,QAAO,SAAS,eAAe,QAAQ,MAAM,SAAS,KAAK;AAC9D;AAED,SAAS,YAAYE,QAAiBJ,MAAcC,SAAqCC,MAA8B;AACnH,QAAO,SAAS,YAAY,QAAQ,MAAM,SAAS,KAAK;AAC3D;AAED,SAAS,YAAYG,QAAqBL,MAAcC,SAAqCC,MAA8B;AACvH,QAAO,SAAS,aAAa,QAAQ,MAAM,SAAS,KAAK;AAC5D;AAED,SAAS,SAASI,UAA0BF,QAAiBJ,MAAcC,SAAqCC,MAA8B;AAC1I,UAAS,SAAS,KAAK;CACvB,IAAI,WAAW,SAAS,cAAc,MAAM;CAC5C,IAAI,SAAS,cAAc,UAAU,SAAS,KAAK;CACnD,IAAIK;CACJ,IAAI,YAAY;CAChB,IAAI,WAAW,CAAC,GAAG,SAAS,UAAW;AACvC,MAAI,IAAI,SAAS,SACb,MAAI,MAEA,KAAG,MAAM,aAAa,KAAK,UACvB,SAAQ,YAAY,mBAAmB,QAAQ,UAAW,MAAe,UAAU;KAEnF,SAAQ,YAAY,OAAO,sBAAsB,UAAU,MAAiB;UAG7E,MAAM,aAAa,KAAK,UACvB,aAAY,UAAU,cAAc,aAAa,SAAS,eAAgB,MAAe,UAAU,EAAE,UAAU,YAAY;KAE3H,aAAY,UAAU,cAAc,aAAa,OAAO,UAAU,YAAY;AAG1F,QAAO;EAAC;EAAQ;EAAO,MAAM,OAAO;CAAK;AAC5C;AAED,SAAS,mBAAmBC,QAAcF,UAA0BN,MAAc;AAC9E,SAAO,UAAP;EACI,KAAK,cACD,QAAO,OAAO,cAAc,aAAa,SAAS,eAAe,KAAK,EAAE,OAAO;EACnF,KAAK,aACD,QAAO,OAAO,aAAa,SAAS,eAAe,KAAK,EAAE,OAAO,WAAW;EAChF,KAAK,YACD,QAAO,OAAO,YAAY,SAAS,eAAe,KAAK,CAAC;EAC5D,KAAK,WACD,QAAO,OAAO,cAAc,YAAY,SAAS,eAAe,KAAK,CAAC;CAC7E;AACJ;AAED,SAAS,cAAcG,MAAmBM,SAAoCC,MAA6B;AACvG,cAAa,MAAM,OAAO,EAAE,GAAG,SAAS,KAAK;AAC7C,QAAO;EAAC;EAAM,MAAM;CAAY;AACnC;AAED,SAAS,UAAUV,MAAyB;AACxC,UAAS,SAAS,KAAK;AACvB,QAAO,OAAO;AACjB;AAED,SAAS,QAAQ;AACb,QAAO,WAAW;AACrB;AAGD,SAAS,YAAuB;CAC5B,IAAI,OAAO,CAAE;AACb,QAAM,MAAM;EACR,IAAI,KAAK,WAAW;AACpB,OAAK,GACD,QAAO,KAAK,WAAS,IAAI,KAAK,KAAK,EAAC,KAAK;AAC7C,OAAK,KAAK,GAAG;AACb,OAAI,MAAM,IAAI,CACV,QAAO,KAAK,WAAS,IAAI,KAAK,KAAK,EAAC,KAAK;CAChD;AACJ;AAED,SAAS,YAAwB;CAC7B,IAAI,KAAK,cAAc;AACvB,MAAI,GACA,QAAO;AACX,KAAG,MAAM,IAAI,EAAE;EACX,IAAI,QAAQ,SAAS,OAAO,OAAO,CAAC;AAEpC,SAAQ;GACJ;GACA,OAAO;EACV;CACJ,MACG,QAAO;AAEd;AAGD,SAAS,eAA0B;CAC/B,IAAIW;AACJ,KAAG,MAAM,IAAI,EAAE;AACX,OAAK,WAAW;AAChB,OAAI,MAAM,IAAI,CACV,OAAM;AACV,SAAO;CACV,OAAM;EACH,IAAI,OAAO,gBAAgB,IAAI;AAC/B,MAAI,MAAM;AACN,UAAO,sBAAsB,KAAK;AAClC,UAAgB,EAAC,KAAK;EACzB,MACG,QAAO,eAAe;CAE7B;AACJ;AAGD,SAAS,gBAA4B;CACjC,IAAI,MAAM,OAAO,OAAO;CACxB,IAAI;CACJ,IAAIC,OAAiB,CAAE;CACvB,IAAIC,YAAsB,CAAE;CAC5B,IAAI;AAEJ,QAAM,OAAO,OACT,KAAI,MAAM,IAAI,EAAE;EACZ,IAAI,YAAY,OAAO,OAAO;AAC9B,OAAI,UACA,OAAM;AACV,YAAU,KAAK,UAAU;CAC5B,WAAU,MAAM,IAAI,CACjB,QAAO,eAAe;MACnB;EACH,IAAI,QAAQ,gBAAgB,IAAI;AAChC,MAAG,MACC,MAAK,MAAM,UAAU,EAAE;OACpB;GACH,IAAIC,UAAQ,gBAAgB,IAAI;AAChC,OAAIA,QACA,QAAO,sBAAsBA,QAAM;OAEnC;EAEP;CACJ;AAEL,QAAO;EAAC;EAAK;EAAI;EAAM;EAAW,WAAW;EAAM,OAAO,WAAW;CAAC;AACzE;AAGD,SAAS,YAAwB;AAC7B,KAAG,MAAM,IAAI,CACT,QAAO,WAAW;AAEtB;AACH;AAED,SAAS,gBAAgB;CAErB,IAAIC,SAAmB,CAAE;AACzB,QAAM,OAAO,QAAQ;EACjB,IAAI,OAAO,OAAO,OAAO;AACzB,MAAG,QAAQ,IACP;AACJ,SAAO,KAAK,KAAK;CACpB;CAED,IAAIC,UAAoB,CAAE;AAE1B,QAAM,OAAO,QAAQ;EACjB,IAAI,OAAO,OAAO,OAAO;EACzB,IAAI,KAAK,OAAO,OAAO;EACvB,IAAI,MAAM;AACV,MAAG,OAAO,KAAK;AACX,SAAM,OAAO,OAAO;AACpB,QAAK,OAAO,OAAO;EACtB;AACD,MAAI,MAAM,IACN,OAAM;EAEV,IAAI,QAAQ,OAAO,OAAO;AAC1B,MAAG,MAAM,OAAO,KACZ,SAAQ,sBAAsB,MAAM;AAExC,OAAK,MACD,OAAM;AACN,UAAQ,KAAK;GAAC;GAAM;GAAK;EAAM,EAAC;AACpC,OAAI,OAAO,OACP;CACP;AACD,QAAO;AACV;AAED,SAAS,MAAMC,UAAkB;CAC7B,IAAI,OAAO,OAAO,OAAO;AACzB,KAAG,SAAS,SACR,QAAO;AACX,KAAG,KACC,QAAO,QAAQ,KAAK;AACxB,QAAO;AACV;AAED,SAAS,gBAAgBA,UAAkB;CACvC,IAAI,OAAO,OAAO,OAAO;AACzB,KAAG,KAAK,WAAW,SAAS,CACxB,QAAO;AACX,KAAG,KACC,QAAO,QAAQ,KAAK;AACxB;AACH;AAED,SAAS,sBAAsBjB,MAAc;AACzC,KAAG,KAAK,OAAO,OAAO,KAAK,OAAO,QAAO,KAAK,OAAO,IACjD,QAAO,KAAK,UAAU,GAAG,KAAK,SAAO,EAAE;AAC3C,QAAO;AACV;AAGD,SAAS,cAAckB,QAAiBC,KAAiBC,OAAeX,SAAoCP,MAA8B;CACtI,IAAI,KAAK,OAAO,YAAY,SAAS,cAAc,IAAI,IAAI,CAAC;AAC5D,KAAI,IAAI,GACJ,IAAG,KAAK,SAAS,IAAI,IAAI,OAAO,QAAQ;AAC5C,MAAI,IAAI,SAAS,IAAI,UACjB,IAAG,UAAU,IAAI,SAAS,OAAO,OAAO,QAAQ,CAAC;AAErD,MAAK,IAAI,OAAO,IAAI,KAChB,KAAI,IAAI,IACJ,IAAG,SAAS,IAAI,MAAM,OAAO,QAAQ,EAAE,SAAS,IAAI,KAAK,OAAO,QAAQ,IAAI,SAAS,IAAI,OAAO,OAAO,QAAQ;KAE/G,IAAG,aAAa,SAAS,IAAI,MAAM,OAAO,QAAQ,EAAE,SAAS,IAAI,OAAO,OAAO,QAAQ,CAAC;AAGhG,KAAG,IAAI,UACH,IAAG,YAAY,SAAS,eAAe,SAAS,IAAI,WAAW,OAAO,QAAQ,CAAC,CAAC;AAEpF,eAAc;AACd,KAAG,KACC,MAAK,GAAG;AACZ,QAAO;AACV;AAED,SAAS,aAAagB,QAAiBP,IAAeS,OAAeX,SAAoCP,MAA8B;AACnI,KAAG,SAAS,IAAI;EACZ,IAAI,UAAU,cAAc,QAAQ,IAAI,OAAO,SAAS,KAAK;AAC7D,MAAG,GAAG,MACF,cAAa,SAAS,GAAG,OAAO,OAAO,SAAS,KAAK;AACzD;CACH;AACD,KAAG,UAAU,GACT,MAAK,IAAI,OAAO,GAAG,KACf,cAAa,QAAQ,KAAK,OAAO,SAAS,KAAK;AAGvD,KAAG,WAAW,GACV,MAAI,IAAI,IAAI,GAAG,IAAI,GAAG,OAAO,IACzB,cAAa,QAAQ,GAAG,OAAO,GAAG,SAAS,KAAK;AAGxD,KAAG,UAAU,IAAI;AACb,SAAO,YAAY,SAAS,eAAe,SAAS,GAAG,MAAM,OAAO,QAAQ,CAAC,CAAC;AAC9E;CACH;AACJ;AAED,SAAS,SAASF,MAAcoB,OAAeX,SAAoC;AAC/E,KAAG,SAAS;EACR,IAAI,SAAS,QAAQ,MAAM;AAC3B,SAAO,KAAK,QAAQ,MAAM,OAAO;CACpC;AACD,QAAO,KAAK,QAAQ,KAAK,CAAC,QAAM,GAAG,UAAU,CAAC;AACjD;;;;AC3UD,MAAa,WAAW;AAMxB,MAAa,2BAA4B;;;;ACrBzC,IAAW,QAAQ,EACf,MAAM;CACF,OAAO;CACP,QAAQ;AACX,EACJ;AAED,eAAe,UAAUY,UAAkB;AACvC,QAAO,iBAAqB,eAAa,UAAU,EAAC,QAAQ,MAAM,EAAC,CAC9D,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC;AACjC;AAED,eAAe,WAAWA,UAAkBC,MAAW;CACnD,IAAI,MAAM,MAAM,iBAAqB,eAAe,UAAU;EAC1D,QAAQ;EACR,MAAM,KAAK,UAAU,KAAK;EAC1B,WAAW;CACd,EAAC;AACF,QAAO,MAAM,IAAI,MAAM;AAC1B;;;;ACVD,MAAaC,UAAmB;CAC5B,aAAa;CACb,wBAAwB;CACxB,kBAAkB;CAClB,oBAAoB;CACpB,WAAW;AACd;AAED,SAAgB,oBAAoB;AAChC,kBAAiB,0BAA0B,WAAW,yDAAyD,SAAS;AACxH,kBAAiB,oBAAoB,WAAW,qCAAqC,SAAS;AAC9F,kBAAiB,sBAAsB,WAAW,0CAA0C,SAAS;AACrG,kBAAiB,eAAe,wBAA8B;AAC9D,kBAAiB,aAAa,WAAW,+BAA+B,SAAS;AACpF;AASD,IAAW,iBAAiB,IAAI;AAEhC,SAAgB,iBAAiBC,IAAYC,UAAkBC,OAAeC,SAAiB;AAC3F,gBAAe,IAAI,IAAI;EAAC;EAAI;EAAU;EAAO;CAAQ,EAAC;AAEzD;AAMD,IAAWC,iBAAiC,EACxC,YAAY,MACf;AAED,SAAgB,oBAAoB;AAChC,QAAO;AACV;AAMD,eAAsB,mBAAmBA,kBAAgC;AACrE,QAAO,MAAM,KAAK,OAAO,0BAA0BC,iBAAe;AACrE;AAED,eAAsB,oBAAoBC,iBAAiC;AACvE,QAAO,MAAM,MAAM,KAAK,MAAM,yBAAyB,CAClD,MAAM,SAAO;AACV,UAAQ,IAAI,IAAI;AAChB,SAAO;CACV,EAAC;AACT;;;;AChED,mBAAmB;AACnB,SAAS,KAAK,iBAAiB,WAAW,UAAU;AAEpD,SAAS,UAAUC,IAAmB;AAClC,KAAI,GAAG,QAAQ,OAAO,GAAG,WAAW,GAAG,aAAa,GAAG,SAAS;AAC5D,KAAG,gBAAgB;EACnB,IAAI,SAAS,OAAO,+BAA+B;AACnD,WAAS,WAAW,OAAO,CACtB,KAAK,MAAM,oBAAoB,CAAC;CACxC;AACJ;AAED,eAAe,SAASC,MAAe;CACnC,IAAIC,mBAAiB,MAAM,oBAAoB,mBAAmB,CAAC;AACnE,kBAAe,aAAa;AAC5B,OAAM,mBAAmBA,iBAAe;AACxC,SAAQ,IAAI,yBAAyB;AACxC;AAED,MAAM,qBAAqB,MAAM;CAC7B,IAAI,aAAa,EACb,SAAS,KAAK,KAAK,CACtB;AACD,MAAK,IAAI,UAAU,eAAe,QAAQ,CACtC,YAAW,OAAO,MAAM,SAAS,eAAe,OAAO,GAAG,CAAC,OAAO;AAItE,QAAO,QAAQ,KAAK,IAChB,YAAY,MAAM;EAEd,MAAM,SAAS,SAAS,eAAe,SAAS;AAChD,SAAO,cAAc;AACrB,aAAW,MAAM;AACb,UAAO,cAAc;EACxB,GAAE,IAAI;CACV,EACJ;AAEJ;AAED,eAAe,sBAAqB;CAChC,IAAI,QAAQ,MAAM,OAAO,QAAQ,KAAK,IAAI,KAAK;AAC/C,QAAO,OAAO,SAAS,MAAM;AAC7B,MAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,QAAQ,QAAQ,EAAE;EAChD,IAAI,YAAY,eAAe,IAAI,IAAI;AACvC,OAAI,UACA;AACJ,WAAS,eAAe,UAAU,GAAG,CAAC,UAAU,YAAY;CAC/D;AACJ;AAED,eAAe,mBAAmB;AAC9B,MAAI,IAAI,cAAc,eAAe,QAAQ,EAAC;AAC1C,OAAI,WAAW,QACX;EACJ,IAAI,QAAQ,SAAS,eAAe,WAAW,QAAQ;AACvD,QAAM,YAAY,QAAQ,cAAc,WAAW,GAAG,qBAAqB,WAAW,MAAM,GAAG;CAClG;AACD,OAAM,qBAAqB;AAC9B;AAED,SAAS,iBAAiB,oBAAoB,iBAAiB;AAC/D,SAAS,eAAe,OAAO,CAAC,iBAAiB,SAAS,mBAAmB"}